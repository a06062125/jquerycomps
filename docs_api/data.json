{
    "project": {
        "name": "jquery components",
        "description": "The third party jquery UI components",
        "version": "0.1",
        "url": "http://jc.openjavascript/docs_api/",
        "logo": "jc_logo.png"
    },
    "files": {
        "../bizs/ActionLogic/ActionLogic.js": {
            "name": "../bizs/ActionLogic/ActionLogic.js",
            "modules": {},
            "classes": {
                "window.Bizs.ActionLogic": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../bizs/CommonModify/CommonModify.js": {
            "name": "../bizs/CommonModify/CommonModify.js",
            "modules": {},
            "classes": {
                "window.Bizs.CommonModify": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../bizs/DisableLogic/DisableLogic.js": {
            "name": "../bizs/DisableLogic/DisableLogic.js",
            "modules": {},
            "classes": {
                "window.Bizs.DisableLogic": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../bizs/FormLogic/FormLogic.js": {
            "name": "../bizs/FormLogic/FormLogic.js",
            "modules": {},
            "classes": {
                "window.Bizs.FormLogic": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../bizs/KillISPCache/KillISPCache.js": {
            "name": "../bizs/KillISPCache/KillISPCache.js",
            "modules": {},
            "classes": {
                "window.Bizs.KillISPCache": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../bizs/MultiDate/MultiDate.js": {
            "name": "../bizs/MultiDate/MultiDate.js",
            "modules": {},
            "classes": {
                "window.Bizs.MultiDate": 1
            },
            "fors": {},
            "namespaces": {
                "window.Bizs": 1
            }
        },
        "../comps/AjaxUpload/AjaxUpload.js": {
            "name": "../comps/AjaxUpload/AjaxUpload.js",
            "modules": {},
            "classes": {
                "JC.AjaxUpload": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../comps/AutoChecked/AutoChecked.js": {
            "name": "../comps/AutoChecked/AutoChecked.js",
            "modules": {},
            "classes": {
                "JC.AutoChecked": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../comps/AutoSelect/AutoSelect.js": {
            "name": "../comps/AutoSelect/AutoSelect.js",
            "modules": {},
            "classes": {
                "JC.AutoSelect": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../comps/Calendar/Calendar.js": {
            "name": "../comps/Calendar/Calendar.js",
            "modules": {},
            "classes": {
                "JC.Calendar": 1
            },
            "fors": {
                "JC.Calendar": 1
            },
            "namespaces": {
                "JC": 1
            }
        },
        "../comps/Fixed/Fixed.js": {
            "name": "../comps/Fixed/Fixed.js",
            "modules": {},
            "classes": {
                "JC.Fixed": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../comps/Form/Form.js": {
            "name": "../comps/Form/Form.js",
            "modules": {},
            "classes": {
                "JC.Form": 1
            },
            "fors": {
                "JC.Form": 1
            },
            "namespaces": {
                "JC": 1
            }
        },
        "../comps/LunarCalendar/LunarCalendar.js": {
            "name": "../comps/LunarCalendar/LunarCalendar.js",
            "modules": {},
            "classes": {
                "JC.LunarCalendar": 1,
                "JC.LunarCalendar.View": 1,
                "JC.LunarCalendar.Model": 1
            },
            "fors": {
                "JC.LunarCalendar": 1
            },
            "namespaces": {
                "JC": 1,
                "JC.LunarCalendar": 1
            }
        },
        "../comps/Panel/Panel.js": {
            "name": "../comps/Panel/Panel.js",
            "modules": {},
            "classes": {
                "JC.Panel": 1,
                "JC.Panel.Model": 1,
                "JC.hideAllPanel": 1,
                "JC.hideAllPopup": 1,
                "JC.msgbox": 1,
                "JC.alert": 1,
                "JC.confirm": 1,
                "JC.Dialog": 1,
                "JC.Dialog.msgbox": 1,
                "JC.Dialog.alert": 1,
                "JC.Dialog.confirm": 1,
                "JC.Dialog.mask": 1
            },
            "fors": {
                "View": 1,
                "JC.alert": 1,
                "JC.Dialog": 1
            },
            "namespaces": {
                "JC": 1,
                "JC.Panel": 1,
                "JC.Dialog": 1
            }
        },
        "../comps/Slider/Slider.js": {
            "name": "../comps/Slider/Slider.js",
            "modules": {},
            "classes": {
                "JC.Slider": 1,
                "JC.Slider.Model": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1,
                "JC.Slider": 1
            }
        },
        "../comps/Suggest/Suggest.js": {
            "name": "../comps/Suggest/Suggest.js",
            "modules": {},
            "classes": {
                "JC.Suggest": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../comps/Tab/Tab.js": {
            "name": "../comps/Tab/Tab.js",
            "modules": {},
            "classes": {
                "JC.Tab": 1,
                "JC.Tab.Model": 1,
                "JC.Tab.View": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1,
                "JC.Tab": 1
            }
        },
        "../comps/Tips/Tips.js": {
            "name": "../comps/Tips/Tips.js",
            "modules": {},
            "classes": {
                "JC.Tips": 1,
                "JC.Tips.Model": 1,
                "JC.Tips.View": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1,
                "JC.Tips": 1
            }
        },
        "../comps/Tree/Tree.js": {
            "name": "../comps/Tree/Tree.js",
            "modules": {},
            "classes": {
                "JC.Tree": 1,
                "JC.Tree.Model": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1,
                "JC.Tree": 1
            }
        },
        "../comps/Valid/Valid.js": {
            "name": "../comps/Valid/Valid.js",
            "modules": {},
            "classes": {
                "JC.Valid": 1
            },
            "fors": {},
            "namespaces": {
                "JC": 1
            }
        },
        "../plugins/rate/spec/lib/jasmine.js": {
            "name": "../plugins/rate/spec/lib/jasmine.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "../jquery.js": {
            "name": "../jquery.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "window": 1
            }
        },
        "../lib.js": {
            "name": "../lib.js",
            "modules": {},
            "classes": {
                "window.jQuery": 1,
                ".window": 1,
                "window.JC": 1,
                "window.UXC": 1,
                "JC.Bizs": 1,
                "JC.BaseMVC": 1,
                "JC.BaseMVC.Model": 1
            },
            "fors": {},
            "namespaces": {
                "window": 1,
                "JC": 1
            }
        }
    },
    "modules": {},
    "classes": {
        "window.Bizs.ActionLogic": {
            "name": "window.Bizs.ActionLogic",
            "shortname": "window.Bizs.ActionLogic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../bizs/ActionLogic/ActionLogic.js",
            "line": 1,
            "description": "<h2>node 点击操作逻辑</h2>\n应用场景\n<br/>点击后弹框( 脚本模板 )\n<br/>点击后弹框( AJAX )\n<br/>点击后弹框( Dom 模板 )\n<br/>点击后执行 AJAX 操作\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/window.Bizs.ActionLogic.html' target='_blank'>API docs</a>\n| <a href='../../bizs/ActionLogic/_demo' target='_blank'>demo link</a></p>\n\nrequire: <a href='../classes/window.jQuery.html'>jQuery</a>\n<br/>require: <a href='../classes/JC.Panel.html'>JC.Panel</a>\n\na|button 需要 添加 class=\"js_bizsActionLogic\"\n\n<h2>可用的 HTML 属性</h2>\n<dl>\n     <dt>balType = string, 操作类型 </dt>\n     <dd>\n         <dl>\n             <dt>类型:</dt>\n             <dd>panel: 弹框</dd>\n             <dd>link: 链接跳转</dd>\n             <dd>ajaxaction: ajax操作, 删除, 启用, 禁用</dd>\n         </dl>\n     </dd>\n</dl>\n<h2>balType = panel 可用的 HTML 属性</h2>\n<dl>\n     <dt>balPanelTpl = script selector</dt>\n     <dd>脚本模板选择器</dd>\n\n     <dt>balAjaxHtml = url</dt>\n     <dd>返回 HTML 的 AJAX 模板</dd>\n\n     <dt>balAjaxData = url</dt>\n     <dd>返回 json 的 AJAX 模板, { errorno: int, data: html } </dd>\n\n     <dt>balCallback = function</dt>\n     <dd>\n         显示模板后的回调\n<xmp>function balPanelInitCb( _panelIns ){\n   var _trigger = $(this);\n   //return true; //如果返回真的话, 表单提交后会关闭弹框\n}</xmp>\n     </dd>\n</dl>\n<h2>balType = link 可用的 HTML 属性</h2>\n<dl>\n     <dt>balUrl = url</dt>\n     <dd>要跳转的目标 URL</dd>\n\n     <dt>balConfirmMsg = string</dt>\n     <dd>跳转前的二次确认提示信息</dd>\n\n     <dt>balConfirmPopupType = string, default = confirm</dt>\n     <dd>二次确认的弹框类型: confirm, dialog.confirm</dd>\n</dl>\n<h2>balType = ajaxaction 可用的 HTML 属性</h2>\n<dl>\n     <dt>balUrl = url</dt>\n     <dd>AJAX 操作的接口</dd>\n\n     <dt>balDoneUrl = url</dt>\n     <dd>AJAX 操作完成后跳转的URL</dd>\n\n     <dt>balConfirmMsg = string</dt>\n     <dd>操作前的二次确认提示信息</dd>\n\n     <dt>balErrorPopupType = string, default = dialog.alert</dt>\n     <dd>错误提示的弹框类型: alert, msgbox, dialog.alert, dialog.msgbox</dd>\n\n     <dt>balSuccessPopupType = string, default = msgbox</dt>\n     <dd>错误提示的弹框类型: alert, msgbox, dialog.alert, dialog.msgbox</dd>\n\n     <dt>balCallback = function</dt>\n     <dd>\n         操作完成后的回调\n<xmp>function ajaxDelCallback( _d, _ins ){\n   var _trigger = $(this);\n   if( _d && !_d.errorno ){\n       JC.msgbox( _d.errmsg || '操作成功', _trigger, 0, function(){\n           reloadPage( '?usercallback=ajaxaction' );\n       });\n   }else{\n       JC.Dialog.alert( _d && _d.errmsg ? _d.errmsg : '操作失败, 请重试!' , 1 );\n   }\n}\n</xmp>\n     </dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "version": "dev 0.1 2013-09-17",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team"
        },
        "window.Bizs.CommonModify": {
            "name": "window.Bizs.CommonModify",
            "shortname": "window.Bizs.CommonModify",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../bizs/CommonModify/CommonModify.js",
            "line": 1,
            "description": "<h2>Dom 通用 添加删除 逻辑</h2>\n<br/>应用场景\n<br/>需要动态添加删除内容的地方可以使用这个类\n\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/window.Bizs.CommonModify.html' target='_blank'>API docs</a>\n| <a href='../../bizs/CommonModify/_demo' target='_blank'>demo link</a></p>\n\na|button 需要 添加 class=\"js_autoCommonModify\"\n\n<h2>可用的 HTML 属性</h2>\n<dl>\n     <dt>[cmtpl | cmtemplate] = script selector</dt>\n     <dd>指定保存模板的 script 标签</dd>\n\n     <dt>cmitem = selector</dt>\n     <dd>添加时, 当前的具体父节点</dd>\n\n     <dt>cmaction = string, [add, del], default = add</dt>\n     <dd>操作类型</dd>\n\n     <dt>cmdonecallback = function</dt>\n     <dd>\n     添加或删除完后会触发的回调, <b>window 变量域</b>\n<xmp>function cmdonecallback( _ins ){\n   var _trigger = $(this);\n   JC.log( 'cmdonecallback', new Date().getTime() );\n}</xmp>\n     </dd>\n\n     <dt>cmtplfiltercallback = function</dt>\n     <dd>\n     模板内容过滤回调, <b>window 变量域</b>\n<xmp>window.COUNT = 1;\nfunction cmtplfiltercallback( _tpl ){\n   var _trigger = $(this);\n   JC.log( 'cmtplfiltercallback', new Date().getTime() );\n   _tpl = printf( _tpl, COUNT++ );\n\n   return _tpl;\n}</xmp>\n     </dd>\n\n     <dt>cmbeforeaddcallabck = function</dt>\n     <dd>\n     添加之前的回调, 如果返回 false, 将不执行添加操作, <b>window 变量域</b>\n<xmp>function cmbeforeaddcallabck( _appendBox, _ins ){\n   var _trigger = $(this);\n   JC.log( 'cmbeforeaddcallabck', new Date().getTime() );\n   //return false;\n}</xmp>\n     </dd>\n\n     <dt>cmaddcallback = function</dt>\n     <dd>\n     添加完成的回调, <b>window 变量域</b>\n<xmp>function cmaddcallback( _ins, _newItem ){\n   var _trigger = $(this);\n   JC.log( 'cmaddcallback', new Date().getTime() );\n}</xmp>\n     </dd>\n\n     <dt>cmbeforedelcallback = function</dt>\n     <dd>\n     删除之前的回调, 如果返回 false, 将不执行删除操作, <b>window 变量域</b>\n<xmp>function cmbeforedelcallback( _appendBox, _ins ){\n   var _trigger = $(this);\n   JC.log( 'cmbeforedelcallback', new Date().getTime() );\n   //return false;\n}</xmp>\n     </dd>\n\n     <dt>cmdelcallback = function</dt>\n     <dd>\n     删除完成的回调, <b>window 变量域</b>\n<xmp>function cmdelcallback( _ins ){\n   var _trigger = $(this);\n   JC.log( 'cmdelcallback', new Date().getTime() );\n}</xmp>\n     </dd>\n\n     <dt>cmappendtype = string, default = after</dt>\n     <dd>指定 node 添加 dom 的方法, 可选类型: before, after, appendTo</dd>\n</dl>",
            "is_constructor": 1,
            "version": "dev 0.1 2013-09-04",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "example": [
                "\n      <table>\n            <tr>\n               <td>\n                   <label class=\"gray\">甲方主体：</label>\n               </td>\n               <td>\n                   <input type=\"text\" name=\"\" class=\"ipt ipt-w320\" />&nbsp;\n                       <a href=\"javascript:\" \n                       class=\"green js_autoCommonModify\" \n                       cmtemplate=\"#addMainFirstPartyTpl\"\n                       cmitem=\"<tr\"\n                       cmaction=\"add\"\n                   >+ 添加</a>\n                   <em class=\"error\"></em>\n               </td>\n           </tr>\n       </table>\n\n       <script type=\"text/template\" id=\"addMainFirstPartyTpl\" >\n        <tr>\n           <td>\n               <label class=\"gray\">甲方主体：</label>\n           </td>\n           <td>\n               <input type=\"text\" name=\"\" class=\"ipt ipt-w320\" />\n               <a href=\"javascript:\" \n                   class=\"green js_autoCommonModify\" \n                   cmtemplate=\"#addMainFirstPartyTpl\"\n                   cmitem=\"<tr\"\n                   cmaction=\"add\"\n               >+ 添加</a>\n               <a href=\"javascript:\" class=\"red js_autoCommonModify\"\n                   cmtemplate=\"#addMainFirstPartyTpl\"\n                   cmitem=\"<tr\"\n                   cmaction=\"del\"\n               >+ 删除</a>\n               <em class=\"error\"></em>\n           </td>\n       </tr>\n       </script>"
            ]
        },
        "window.Bizs.DisableLogic": {
            "name": "window.Bizs.DisableLogic",
            "shortname": "window.Bizs.DisableLogic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../bizs/DisableLogic/DisableLogic.js",
            "line": 1,
            "description": "<h2>Form Control禁用启用逻辑</h2>\n<br/>应用场景</br>\n<br/>表单操作时, 选择某个 radio 时, 对应的 内容有效,\n<br/>但选择其他 radio 时, 其他的内容无效\n<br/>checkbox / select 也可使用( 带change事件的标签 )\n\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/window.Bizs.DisableLogic.html' target='_blank'>API docs</a>\n| <a href='../../bizs/DisableLogic/_demo' target='_blank'>demo link</a></p>\n\ndiv 需要 添加 class=\"js_bizsDisableLogic\"\n\n<h2>box 的 HTML 属性</h2>\n<dl>\n     <dt>dltrigger</dt>\n     <dd>触发禁用/起用的control</dd>\n\n     <dt>dltarget</dt>\n     <dd>需要禁用/起用的control</dd>\n\n     <dt>dlhidetarget</dt>\n     <dd>需要根据禁用起用隐藏/可见的标签</dd>\n\n     <dt>dldonecallback = function</dt>\n     <dd>\n     启用/禁用后会触发的回调, <b>window 变量域</b>\n<xmp>function dldonecallback( _triggerItem, _boxItem ){\n   var _ins = this;\n   JC.log( 'dldonecallback', new Date().getTime() );\n}</xmp>\n     </dd>\n\n     <dt>dlenablecallback = function</dt>\n     <dd>\n     启用后的回调, <b>window 变量域</b>\n<xmp>function dlenablecallback( _triggerItem, _boxItem ){\n   var _ins = this;\n   JC.log( 'dlenablecallback', new Date().getTime() );\n}</xmp>\n     </dd>\n\n     <dt>dldisablecallback = function</dt>\n     <dd>\n     禁用后的回调, <b>window 变量域</b>\n<xmp>function dldisablecallback( _triggerItem, _boxItem ){\n   var _ins = this;\n   JC.log( 'dldisablecallback', new Date().getTime() );\n}</xmp>\n     </dd>\n</dl>\n\n<h2>trigger 的 HTML 属性</h2>\n<dl>\n     <dt>dldisable = bool, default = false</dt>\n     <dd>\n         指定 dltarget 是否置为无效\n         <br />还可以根据这个属性 指定 dlhidetarget 是否显示\n     </dd>\n\n     <dt>dldisplay = bool</dt>\n     <dd>指定 dlhidetarget 是否显示</dd>\n</dl>\n\n<h2>hide target 的 HTML 属性</h2>\n<dl>\n     <dt>dlhidetoggle = bool</dt>\n     <dd>显示或显示的时候, 是否与他项相反</dd>\n</dl>",
            "is_constructor": 1,
            "version": "dev 0.1 2013-09-04",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "example": [
                "\n       <div class=\"js_bizsDisableLogic\"\n           dltrigger=\"/input[type=radio]\"\n           dltarget=\"/input.js_disableItem\"\n           >\n           <label>\n               <input type=\"radio\" name=\"discount\" checked  \n               dldisable=\"true\"\n               />自本协议签订之日起10日内生效\n           </label> <br>\n           <label>\n               <input type=\"radio\" name=\"discount\" \n               dldisable=\"false\"\n               />生效时间点\n           </label>\n           <input type=\"text\" class=\"ipt js_disableItem\" datatype=\"date\" value=\"\"\n           /><input type=\"button\" class=\"UXCCalendar_btn\">\n       </div>"
            ]
        },
        "window.Bizs.FormLogic": {
            "name": "window.Bizs.FormLogic",
            "shortname": "window.Bizs.FormLogic",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../bizs/FormLogic/FormLogic.js",
            "line": 4,
            "description": "<h2>提交表单控制逻辑</h2>\n应用场景\n<br />get 查询表单\n<br />post 提交表单\n<br />ajax 提交表单\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/window.Bizs.FormLogic.html' target='_blank'>API docs</a>\n| <a href='../../bizs/FormLogic/_demo' target='_blank'>demo link</a></p>\nrequire: <a href='../classes/window.jQuery.html'>jQuery</a>\n<br/>require: <a href='../classes/JC.Valid.html'>JC.Valid</a>\n<br/>require: <a href='../classes/JC.Form.html'>JC.Form</a>\n<br/>require: <a href='../classes/JC.Panel.html'>JC.Panel</a>\n\n<h2>页面只要引用本文件, 默认会自动初始化 from class=\"js_bizsFormLogic\" 的表单</h2>\n<h2>Form 可用的 HTML 属性</h2>\n<dl>\n     <dt>formType = string, default = get</dt>\n     <dd>\n         form 的提交类型, 如果没有显式声明, 将视为 form 的 method 属性\n         <br/> 类型有: get, post, ajax \n     </dd>\n\n     <dt>formSubmitDisable = bool, default = true</dt>\n     <dd>表单提交后, 是否禁用提交按钮</dd>\n\n     <dt>formResetAfterSubmit = bool, default = true</dt>\n     <dd>表单提交后, 是否重置内容</dd>\n\n     <dt>formBeforeProcess = function</dt>\n     <dd>\n         表单开始提交时且没开始验证时, 触发的回调, <b>window 变量域</b>\n<xmp>function formBeforeProcess( _evt, _ins ){\n   var _form = $(this);\n   JC.log( 'formBeforeProcess', new Date().getTime() );\n   //return false;\n}</xmp>\n     </dd>\n\n     <dt>formProcessError = function</dt>\n     <dd>\n         提交时, 验证未通过时, 触发的回调, <b>window 变量域</b>\n<xmp>function formProcessError( _evt, _ins ){\n   var _form = $(this);\n   JC.log( 'formProcessError', new Date().getTime() );\n   //return false;\n}</xmp>\n     </dd>\n\n     <dt>formAfterProcess = function</dt>\n     <dd>\n         表单开始提交时且验证通过后, 触发的回调, <b>window 变量域</b>\n<xmp>function formAfterProcess( _evt, _ins ){\n   var _form = $(this);\n   JC.log( 'formAfterProcess', new Date().getTime() );\n   //return false;\n}</xmp>\n     </dd>\n\n     <dt>formConfirmPopupType = string, default = dialog</dt>\n     <dd>定义提示框的类型: dialog, popup</dd>\n\n     <dt>formResetUrl = url</dt>\n     <dd>表单重置时, 返回的URL</dd>\n\n     <dt>formPopupCloseMs = int, default = 2000</dt>\n     <dd>msgbox 弹框的显示时间</dd>\n\n     <dt>formSubmitType = string, default = plugins</dt>\n     <dd>\n         类型: plugins, form\n         <br/>plugins 支持 AJAX 文件上传, 但是在 弹框里 捕获不到提交事件\n         <br/>form 不支持 ajax 文件上传, 但可以在 popup 里捕获到提交事件\n     </dd>\n\n     <dt>formAjaxMethod = string, default = get</dt>\n     <dd>\n         类型有: get, post\n         <br/>ajax 的提交类型, 如果没有显式声明, 将视为 form 的 method 属性\n     </dd>\n\n     <dt>formAjaxAction = url</dt>\n     <dd>ajax 的提交URL, 如果没有显式声明, 将视为 form 的 action 属性</dd>\n\n     <dt>formAjaxDone = function, default = system defined</dt>\n     <dd>\n         AJAX 提交完成后的回调, <b>window 变量域</b>\n         <br />如果没有显式声明, FormLogic将自行处理\n<xmp>function formAjaxDone( _json, _submitButton, _ins ){\n   var _form = $(this);\n   JC.log( 'custom formAjaxDone', new Date().getTime() );\n\n   if( _json.errorno ){\n       _panel = JC.Dialog.alert( _json.errmsg || '操作失败, 请重新尝试!', 1 );\n   }else{\n       _panel = JC.msgbox( _json.errmsg || '操作成功', _submitButton, 0, function(){\n           reloadPage( \"?donetype=custom\" );\n       });\n   }\n};</xmp>\n     </dd>\n\n     <dt>formAjaxDoneAction = url</dt>\n     <dd>声明 ajax 提交完成后的返回路径, 如果没有, 提交完成后将不继续跳转操作</dd>\n</dl>\n\n<h2>submit button 可用的 html 属性</h2>\n<dl>\n     <dd>\n         基本上 form 可用的 html 属性, submit 就可用, 区别在于 submit 优化级更高\n     </dd>\n\n     <dt>formSubmitConfirm = string</dt>\n     <dd>提交表单时进行二次确认的提示信息</dt>\n\n     <dt>formConfirmCheckSelector = selector</dt>\n     <dd>提交表单时, 进行二次确认的条件判断</dt>\n\n     <dt>formConfirmCheckCallback = function</dt>\n     <dd>\n         提交表单时, 进行二次确认的条件判断, <b>window 变量域</b>\n<xmp>function formConfirmCheckCallback( _trigger, _evt, _ins ){\n   var _form = $(this);\n   JC.log( 'formConfirmCheckCallback', new Date().getTime() );\n   return _form.find('td.js_confirmCheck input[value=0]:checked').length;\n}</xmp>\n     </dt>\n</dl>\n\n<h2>reset button 可用的 html 属性</h2>\n<dl>\n     <dd>\n         如果 form 和 reset 定义了相同属性, reset 优先级更高\n     </dd>\n     <dt>formConfirmPopupType = string, default = dialog</dt>\n     <dd>定义提示框的类型: dialog, popup</dd>\n\n     <dt>formResetUrl = url</dt>\n     <dd>表单重置时, 返回的URL</dd>\n\n     <dt>formResetConfirm = string</dt>\n     <dd>重置表单时进行二次确认的提示信息</dt>\n\n     <dt>formPopupCloseMs = int, default = 2000</dt>\n     <dd>msgbox 弹框的显示时间</dd>\n</dl>\n\n<h2>普通 [a | button] 可用的 html 属性</h2>\n<dl>\n     <dt>buttonReturnUrl</dt>\n     <dd>点击button时, 返回的URL</dd>\n\n     <dt>returnConfirm = string</dt>\n     <dd>二次确认提示信息</dd>\n\n     <dt>popupType = string, default = confirm</dt>\n     <dd>弹框类型: confirm, dialog.confirm</dd>\n\n     <dt>popupstatus = int, default = 2</dt>\n     <dd>提示状态: 0: 成功, 1: 失败, 2: 警告</dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "version": "dev 0.1 2013-09-08",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "example": [
                "\n           <script>\n               JC.debug = true;\n               JC.use( 'Bizs.FormLogic, Calendar, plugins.json2' );\n\n               function formBeforeProcess( _evt, _ins ){\n                   var _form = $(this);\n                   JC.log( 'formBeforeProcess', new Date().getTime() );\n               }\n\n               function formAfterProcess( _evt, _ins ){\n                   var _form = $(this);\n                   JC.log( 'formAfterProcess', new Date().getTime() );\n                   //return false;\n               }\n\n               function formAjaxDone( _json, _submitButton, _ins ){\n                   var _form = $(this);\n                   JC.log( 'custom formAjaxDone', new Date().getTime() );\n\n                   if( _json.errorno ){\n                       _panel = JC.Dialog.alert( _json.errmsg || '操作失败, 请重新尝试!', 1 );\n                   }else{\n                       _panel = JC.msgbox( _json.errmsg || '操作成功', _submitButton, 0, function(){\n                           reloadPage( \"?donetype=custom\" );\n                       });\n                   }\n               };\n           </script>\n\n           <dl class=\"defdl\">\n               <dt>Bizs.FormLogic, get form example 3, nothing at done</dt>\n               <dd>\n                   <dl>\n                       <form action=\"./data/handler.php\" method=\"POST\"\n                           class=\"js_bizsFormLogic\"\n                           formType=\"ajax\"\n                           formAjaxMethod=\"POST\"\n                           formBeforeProcess=\"formBeforeProcess\"\n                           formAfterProcess=\"formAfterProcess\"\n                           formAjaxDone=\"formAjaxDone\"                            \n                           formAjaxDoneAction=\"?donetype=system\"\n                           >\n                           <dl>\n                               <dd>\n                                   文件框: <input type=\"text\" name=\"text\" reqmsg=\"文本框\" value=\"test3\" />\n                               </dd>\n                               <dd>\n                                   日期: <input type=\"text\" name=\"date\" datatype=\"date\" reqmsg=\"日期\" value=\"2015-02-20\" />\n                                   <em class=\"error\"></em>\n                               </dd>\n                               <dd>\n                                   下拉框:\n                                       <select name=\"dropdown\" reqmsg=\"下拉框\" >\n                                           <option value=\"\">请选择</option>\n                                           <option value=\"1\">条件1</option>\n                                           <option value=\"2\">条件2</option>\n                                           <option value=\"3\" selected>条件3</option>\n                                       </select>\n                               </dd>\n                               <dd>\n                                   <input type=\"hidden\" name=\"getform\" value=\"1\" />\n                                   <button type=\"submit\" formSubmitConfirm=\"确定要提交吗?\" >submit - dialog</button>\n                                   <button type=\"submit\" formConfirmPopupType=\"dialog\" \n                                                           formSubmitConfirm=\"确定要提交吗?\" >submit - popup</button>\n\n                                   <button type=\"reset\" formResetConfirm=\"确定要重置吗?\"  >reset</button>\n                                   <button type=\"reset\" formResetConfirm=\"确定要重置吗?\" formResetUrl=\"?\"  >reset - url</button>\n                                   <a href=\"?\">back</a>\n                               </dd>\n                           </dl>\n                       </form>\n                   </dl>\n               </dd>\n           </dl>     "
            ]
        },
        "window.Bizs.KillISPCache": {
            "name": "window.Bizs.KillISPCache",
            "shortname": "window.Bizs.KillISPCache",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../bizs/KillISPCache/KillISPCache.js",
            "line": 2,
            "description": "应用场景\n<br /><b>ISP 缓存问题 引起的用户串号</b>\n<br />ajax 或者动态添加的内容, 请显式调用  JC.KillISPCache.getInstance().process( newNodeContainer )\n<br /><b>这是个单例类</b>\n    \n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/window.Bizs.KillISPCache.html' target='_blank'>API docs</a>\n| <a href='../../bizs/KillISPCache/_demo' target='_blank'>demo link</a></p>\nrequire: <a href='../classes/window.jQuery.html'>jQuery</a>\n\n<h2>页面只要引用本文件, 默认会自动初始化 KillISPCache 逻辑</h2>\n<dl>\n     <dt>影响到的地方: </dt>\n     <dd>每个 a node 会添加 isp 参数</dd>\n     <dd>每个 form node 会添加 isp 参数</dd>\n     <dd>每个 ajax get 请求会添加 isp 参数</dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "version": "dev 0.1 2013-09-07",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "example": [
                "\n     <script>\n     //动态添加的内容需要显式调用 process 方法去处理相关逻辑\n     $.get( _url, function( _html ){\n         var _node = $(_html);\n         _node.appendTo( document.body );\n         JC.KillISPCache.getInstance().process( _node );\n     });\n     </script>"
            ]
        },
        "window.Bizs.MultiDate": {
            "name": "window.Bizs.MultiDate",
            "shortname": "window.Bizs.MultiDate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window.Bizs",
            "file": "../bizs/MultiDate/MultiDate.js",
            "line": 3,
            "description": "MultiDate 复合日历业务逻辑\n<p>\n     <b>require</b>: <a href='JC.Calendar.html'>JC.Calendar</a>\n     <br /><b>require</b>: <a href='window.jQuery.html'>jQuery</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/window.Bizs.MultiDate.html' target='_blank'>API docs</a>\n| <a href='../../bizs/MultiDate/_demo' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "version": "dev 0.1 2013-09-03",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team"
        },
        "JC.AjaxUpload": {
            "name": "JC.AjaxUpload",
            "shortname": "JC.AjaxUpload",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../comps/AjaxUpload/AjaxUpload.js",
            "line": 2,
            "description": "Ajax 文件上传\n<p>\n     <a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n     | <a href='http://jc.openjavascript.org/docs_api/classes/JC.AjaxUpload.html' target='_blank'>API docs</a>\n     | <a href='../../comps/AjaxUpload/_demo' target='_blank'>demo link</a>\n</p>\n<p>\n     <b>require</b>: <a href='window.jQuery.html'>jQuery</a>\n</p>\n<h2>可用的 html attribute</h2>\n<dl>\n     <dt>cauStyle = string, default = g1</dt>\n     <dd>\n         按钮显示的样式, <a href='../../comps/AjaxUpload/res/default/style.html' target='_blank'>可选样式</a>:\n         <dl>\n             <dt>绿色按钮</dt>\n             <dd>g1, g2, g3</dd>\n\n             <dt>白色/银色按钮</dt>\n             <dd>w1, w2, w3</dd>\n         </dl>\n     </dd>\n\n     <dt>cauButtonText = string, default = 上传文件</dt>\n     <dd>定义上传按钮的显示文本</dd>\n\n     <dt>cauUrl = url, require</dt>\n     <dd>上传文件的接口地址</dd>\n\n     <dt>cauFileExt = file ext, optional</dt>\n     <dd>允许上传的文件扩展名, 例: \".jpg, .jpeg, .png, .gif\"</dd>\n\n     <dt>cauFileName = string, default = file</dt>\n     <dd>上传文件的 name 属性</dd>\n\n     <dt>cauValueKey = string, default = url</dt>\n     <dd>返回数据用于赋值给 hidden/textbox 的字段</dd>\n\n     <dt>cauLabelKey = string, default = name</dt>\n     <dd>返回数据用于显示的字段</dd>\n\n     <dt>cauStatusLabel = selector, optional</dt>\n     <dd>开始上传时, 用于显示状态的 selector</dd>\n\n     <dt>cauDisplayLabel = selector, optional</dt>\n     <dd>上传完毕后, 用于显示文件名的 selector</dd>\n\n     <dt>cauUploadDoneCallback = function, optional</dt>\n     <dd>\n         文件上传完毕时, 触发的回调\n<xmp>function cauUploadDoneCallback( _json, _selector, _frame ){\n   var _ins = this;\n   //alert( _json ); //object object\n}</xmp>\n     </dd>\n</dl>",
            "extends": "JC.BaseMVC",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team",
            "date": "2013-09-26",
            "example": [
                "\n           <div>\n               <input type=\"hidden\" class=\"js_compAjaxUpload\" value=\"\"\n                   cauStyle=\"w1\"\n                   cauButtonText=\"上传资质文件\"\n                   cauUrl=\"/ignore/JQueryComps_dev/comps/AjaxUpload/_demo/data/handler.php\"\n                   cauFileExt=\".jpg, .jpeg, .png, .gif\"\n                   cauFileName=\"file\"\n                   cauLabelKey=\"name\"\n                   cauValueKey=\"url\"\n                   cauStatusLabel=\"/label.js_statusLabel\"\n                   cauDisplayLabel=\"/label.js_fileLabel\"\n                   />\n               <label class=\"js_fileLabel\" style=\"display:none\"></label>\n               <label class=\"js_statusLabel\" style=\"display:none\">文件上传中, 请稍候...</label>\n           </div>\n\n           POST 数据:\n               ------WebKitFormBoundaryb1Xd1FMBhVgBoEKD\n               Content-Disposition: form-data; name=\"file\"; filename=\"disk.jpg\"\n               Content-Type: image/jpeg\n\n           返回数据:\n               {\n                   \"errorno\": 0, \n                   \"data\":\n                   {\n                       \"url\": \"/ignore/JQueryComps_dev/comps/AjaxUpload/_demo/data/images/test.jpg\", \n                       \"name\": \"test.jpg\"\n                   }, \n                   \"errmsg\": \"\"\n               }"
            ]
        },
        "JC.AutoChecked": {
            "name": "JC.AutoChecked",
            "shortname": "JC.AutoChecked",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../comps/AutoChecked/AutoChecked.js",
            "line": 2,
            "description": "全选/反选\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.AutoChecked.html' target='_blank'>API docs</a>\n| <a href='../../comps/AutoChecked/_demo' target='_blank'>demo link</a></p>\n<p><b>require</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<h2>input[type=checkbox] 可用的 HTML 属性</h2>\n<dl>\n     <dt>checktype = string</dt>\n     <dd>\n         类型: all(全选), inverse(反选)\n     </dd>\n\n     <dt>checkfor = selector</dt>\n     <dd>需要全选/反选的 checkbox</dd>\n\n     <dt>checkall = selector</dt>\n     <dd>声明 checkall input, 仅在 checktype = inverse 时才需要</dd>\n\n     <dt>checktrigger = string of event name</dt>\n     <dd>点击全选反选后触发的事件, 可选</dd>\n</dl>",
            "is_constructor": 1,
            "version": "dev 0.1 2013-06-11",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team",
            "params": [
                {
                    "name": "_selector",
                    "description": "要初始化的全选反选的父级节点 或 input[checktype][checkfor]",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n           <h2>AJAX data:</h2>\n           <dl class=\"def example24\">\n               <dt>checkall example 24</dt>\n               <dd>\n                   <label>\n                       <input type=\"checkbox\" checktype=\"all\" checkfor=\"dl.example24 input[type=checkbox]\">\n                       全选\n                   </label>\n                   <label>\n                       <input type=\"checkbox\" checktype=\"inverse\" checkfor=\"dl.example24 input[type=checkbox]\" checkall=\"dl.example24 input[checktype=all]\">\n                       反选\n                   </label>\n               </dd>\n               <dd>\n                   <label>\n                       <input type='checkbox' value='' name='' checked />\n                       checkall24_1\n                   </label>\n                   <label>\n                       <input type='checkbox' value='' name='' checked />\n                       checkall24_2\n                   </label>\n                   <label>\n                       <input type='checkbox' value='' name='' checked />\n                       checkall24_3\n                   </label>\n                   <label>\n                       <input type='checkbox' value='' name='' checked />\n                       checkall24_4\n                   </label>\n                   <label>\n                       <input type='checkbox' value='' name='' checked />\n                       checkall24_5\n                   </label>\n               </dd>\n           </dl>\n\n           <script>\n           $(document).delegate( 'button.js_ajaxTest', 'click', function(){\n               var _p = $(this);\n               _p.prop('disabled', true);\n               setTimeout( function(){ _p.prop('disabled', false); }, 1000 );\n\n               $.get( './data/initCheckAll.php?rnd='+new Date().getTime(), function( _r ){\n                   var _selector = $(_r);\n                   $( $( 'body' ).children().first() ).before( _selector );\n                   JC.AutoChecked( _selector );\n               });\n           });\n           </script>"
            ]
        },
        "JC.AutoSelect": {
            "name": "JC.AutoSelect",
            "shortname": "JC.AutoSelect",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 3,
            "description": "<h2>select 级联下拉框无限联动</h2>\n<br />只要引用本脚本, 页面加载完毕时就会自动初始化级联下拉框功能\n<br /><br />动态添加的 DOM 需要显式调用 JC.AutoSelect( domSelector ) 进行初始化\n<br /><br />要使页面上的级联下拉框功能能够自动初始化, 需要在select标签上加入一些HTML 属性\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.AutoSelect.html' target='_blank'>API docs</a>\n| <a href='../../comps/AutoSelect/_demo' target='_blank'>demo link</a></p>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<h2>select 标签可用的 HTML 属性</h2>\n<dl>\n     <dt>defaultselect, 这个属性不需要赋值</dt>\n     <dd>该属性声明这是级联下拉框的第一个下拉框, <b>这是必填项,初始化时以这个为入口</b></dd>\n\n     <dt>selectvalue = string</dt>\n     <dd>下拉框的默认选中值</dd>\n\n     <dt>selecturl = AJAX 数据请求的URL</dt>\n     <dd>下拉框的数据请求接口, 符号 {0} 代表下拉框值的占位符</dd>\n\n     <dt>selectignoreinitrequest = bool, default = false</dt>\n     <dd>\n         首次初始化时, 是否需要请求新数据\n         <br />有时 联动框太多, 载入页面时, 后端直接把初始数据输出, 避免请求过多\n     </dd>\n\n     <dt>selecttarget = selector</dt>\n     <dd>下一级下拉框的选择器语法</dd>\n\n     <dt>selectdatacb = 静态数据请求回调</dt>\n     <dd>如果数据不需要 AJAX 请求, 可使用这个属性, 自行定义数据处理方式</dd>\n\n     <dt>selectrandomurl = bool, default = false</dt>\n     <dd>AJAX 请求时, 添加随机参数, 防止数据缓存</dd>\n\n     <dt>selecttriggerinitchange = bool, default = true</dt>\n     <dd>首次初始化时, 是否触发 change 事件</dd>\n\n     <dt>selecthideempty = bool, default = false</dt>\n     <dd>是否隐藏没有数据的 selecct</dd>\n\n     <dt>selectdatafilter = 请求数据后的处理回调</dt>\n     <dd>如果接口的数据不符合 select 的要求, 可通过这个属性定义数据过滤函数</dd>\n\n     <dt>selectbeforeinited = 初始化之前的回调</dt>\n\n     <dt>selectinited = 初始化后的回调</dt>\n\n     <dt>selectallchanged = 所有select请求完数据之后的回调</dt>\n</dl>\n<h2>option 标签可用的 HTML 属性</h2>\n<dl>\n     <dt>defaultoption, 这个属性不需要赋值</dt>\n     <dd>声明默认 option 选项, 更新option时, 有该属性的项不会被清除</dd>\n</dl>\n<h2>数据格式</h2>\n<p>\n     [ [id, name], [id, name] ... ]\n     <br /> 如果获取到的数据格式不是默认格式,\n     可以通过 <a href='JC.AutoSelect.html#property_dataFilter'>AutoSelect.dataFilter</a> 属性自定义函数, 进行数据过滤\n</p>",
            "static": 1,
            "version": "dev 0.2",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "date": "2013-07-28(.2), 2013-06-11(.1)",
            "params": [
                {
                    "name": "_selector",
                    "description": "要初始化的级联下拉框父级节点",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n       <h2>AJAX 返回内容</h2>\n       <code>\n           <dd>    \n               <select name='select102_1' defaultselect selecturl=\"data/shengshi_with_error_code.php?id=0\" selecttarget=\"select[name=select102_2]\">\n                   <option value=\"-1\" defaultoption>请选择</option>\n               </select>\n               <select name='select102_2' selecturl=\"data/shengshi_with_error_code.php?id={0}\" selecttarget=\"select[name=select102_3]\">\n                   <option value=\"-1\" defaultoption>请选择</option>\n               </select>\n               <select name='select102_3' selecturl=\"data/shengshi_with_error_code.php?id={0}\">\n                   <option value=\"-1\" defaultoption>请选择</option>\n               </select>\n           </dd>\n       </code>\n       <script>\n           $.get( './data/shengshi_html.php?rnd='+new Date().getTime(), function( _r ){\n               var _selector = $(_r);\n               $( 'dl.def > dt' ).after( _selector );\n               JC.AutoSelect( _selector );\n           });\n\n           JC.AutoSelect.dataFilter = \n               function( _data, _select ){\n                   var _r = _data;\n                   if( _data && !_data.length && _data.data ){\n                       _r = _data.data;\n                   }\n                   return _r;\n               };\n       </script>"
            ]
        },
        "JC.Calendar": {
            "name": "JC.Calendar",
            "shortname": "JC.Calendar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../comps/Calendar/Calendar.js",
            "line": 2,
            "description": "日期选择组件\n<br />全局访问请使用 JC.Calendar 或 Calendar\n<br />DOM 加载完毕后\n, Calendar会自动初始化页面所有日历组件, input[type=text][datatype=date]标签\n<br />Ajax 加载内容后, 如果有日历组件需求的话, 需要手动使用Calendar.init( _selector )\n<br />_selector 可以是 新加载的容器, 也可以是新加载的所有input\n<p><b>require</b>: <a href='window.jQuery.html'>jQuery</a>\n<br /><b>require</b>: <a href='.window.html#method_cloneDate'>window.cloneDate</a>\n<br /><b>require</b>: <a href='.window.html#method_parseISODate'>window.parseISODate</a>\n<br /><b>require</b>: <a href='.window.html#method_formatISODate'>window.formatISODate</a>\n<br /><b>require</b>: <a href='.window.html#method_maxDayOfMonth'>window.maxDayOfMonth</a>\n<br /><b>require</b>: <a href='.window.html#method_isSameDay'>window.isSameDay</a>\n<br /><b>require</b>: <a href='.window.html#method_isSameMonth'>window.isSameMonth</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.Calendar.html' target='_blank'>API docs</a>\n| <a href='../../comps/Calendar/_demo/' target='_blank'>demo link</a></p>\n<h2> 可用的html attribute, (input|button):(datatype|multidate)=(date|week|month|season) </h2> \n<dl>\n     <dt>defaultdate = ISO Date</dt>\n     <dd>默认显示日期, 如果 value 为空, 则尝试读取 defaultdate 属性</dd>\n\n     <dt>datatype = string</dt>\n     <dd>\n         声明日历控件的类型:\n         <p><b>date:</b> 日期日历</p>\n         <p><b>week:</b> 周日历</p>\n         <p><b>month:</b> 月日历</p>\n         <p><b>season:</b> 季日历</p>\n         <p><b>monthday:</b> 多选日期日历</p>\n     </dd>\n\n     <dt>multidate = string</dt>\n     <dd>\n         与 datatype 一样, 这个是扩展属性, 避免表单验证带来的逻辑冲突\n     </dd>\n\n     <dt>calendarshow = function</dt>\n     <dd>显示日历时的回调</dd>\n\n     <dt>calendarhide = function</dt>\n     <dd>隐藏日历时的回调</dd>\n\n     <dt>calendarlayoutchange = function</dt>\n     <dd>用户点击日历控件操作按钮后, 外观产生变化时触发的回调</dd>\n\n     <dt>calendarupdate = function</dt>\n     <dd>\n         赋值后触发的回调\n         <dl>\n             <dt>参数:</dt>\n             <dd><b>_startDate:</b> 开始日期</dd>\n             <dd><b>_endDate:</b> 结束日期</dd>\n         </dl>\n     </dd>\n\n     <dt>calendarclear = function</dt>\n     <dd>清空日期触发的回调</dd>\n\n     <dt>minvalue = ISO Date</dt>\n     <dd>日期的最小时间, YYYY-MM-DD</dd>\n\n     <dt>maxvalue = ISO Date</dt>\n     <dd>日期的最大时间, YYYY-MM-DD</dd>\n\n     <dt>currentcanselect = bool, default = true</dt>\n     <dd>当前日期是否能选择</dd>\n\n     <dt>multiselect = bool (目前支持 month: default=false, monthday: default = treu)</dt>\n     <dd>是否为多选日历</dd>\n\n     <dt>calendarupdatemultiselect = function</dt>\n     <dd>\n         多选日历赋值后触发的回调\n         <dl>\n             <dt>参数: _data:</dt>\n             <dd>\n                 [{\"start\": Date,\"end\": Date}[, {\"start\": Date,\"end\": Date}... ] ]\n             </dd>\n         </dl>\n     </dd>\n</dl>",
            "version": "dev 0.1, 2013-06-04",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team"
        },
        "JC.Fixed": {
            "name": "JC.Fixed",
            "shortname": "JC.Fixed",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../comps/Fixed/Fixed.js",
            "line": 6,
            "description": "内容固定于屏幕某个位置显示\n<dl>\n     <dd><b>require</b>: <a href='window.jQuery.html'>jQuery</a></dd>\n     <dd><b>require</b>: <a href='.window.html#property_$.support.isFixed'>$.support.isFixed</a></dd>\n</dl>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.Fixed.html' target='_blank'>API docs</a>\n| <a href='../../comps/Fixed/_demo' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "date": "2013-08-18",
            "example": [
                ""
            ]
        },
        "JC.Form": {
            "name": "JC.Form",
            "shortname": "JC.Form",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../comps/Form/Form.js",
            "line": 2,
            "description": "表单常用功能类 JC.Form\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.Form.html' target='_blank'>API docs</a>\n| <a href='../../comps/Form/_demo' target='_blank'>demo link</a></p>",
            "static": 1,
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team",
            "date": "2013-06-11"
        },
        "JC.LunarCalendar": {
            "name": "JC.LunarCalendar",
            "shortname": "JC.LunarCalendar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.LunarCalendar",
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 6,
            "description": "农历日历组件\n<br />全局访问请使用 JC.LunarCalendar 或 LunarCalendar\n<br />DOM 加载完毕后\n, LunarCalendar会自动初始化页面所有具备识别符的日历, 目前可识别: div.js_LunarCalendar, td.js_LunarCalendar, li.js_LunarCalendar\n<br />Ajax 加载内容后, 如果有日历组件需求的话, 需要手动初始化 var ins = new JC.LunarCalendar( _selector );\n<p>\n     初始化时, 如果日历是添加到某个selector里, 那么selector可以指定一些设置属性\n     <br /><b>hidecontrol</b>: 如果设置该属性, 那么日历将隐藏操作控件\n     <br /><b>minvalue</b>: 设置日历的有效最小选择范围, 格式YYYY-mm-dd\n     <br /><b>maxvalue</b>: 设置日历的有效最大选择范围, 格式YYYY-mm-dd\n     <br /><b>nopreviousfestivals</b>: 不显示上个月的节日\n     <br /><b>nonextfestivals</b>: 不显示下个月的节日\n</p>\n<p><b>require</b>: <a href='window.jQuery.html'>jQuery</a>\n<br /><b>require</b>: <a href='.window.html#method_cloneDate'>window.cloneDate</a>\n<br /><b>require</b>: <a href='.window.html#method_parseISODate'>window.parseISODate</a>\n<br /><b>require</b>: <a href='.window.html#method_maxDayOfMonth'>window.maxDayOfMonth</a>\n<br /><b>require</b>: <a href='.window.html#method_isSameDay'>window.isSameDay</a>\n<br /><b>require</b>: <a href='.window.html#method_isSameMonth'>window.isSameMonth</a>\n</p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.LunarCalendar.html' target='_blank'>API docs</a>\n| <a href='../../comps/LunarCalendar/_demo/' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_container",
                    "description": "指定要显示日历的选择器, 如果不显示指定该值, 默认为 document.body",
                    "type": "Selector"
                },
                {
                    "name": "_date",
                    "description": "日历的当前日期, 如果不显示指定该值, 默认为当天",
                    "type": "Date"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team",
            "date": "2013-06-13"
        },
        "JC.LunarCalendar.View": {
            "name": "JC.LunarCalendar.View",
            "shortname": "JC.LunarCalendar.View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.LunarCalendar",
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 498,
            "description": "LunarCalendar 视图类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_model",
                    "description": "",
                    "type": "JC.LunarCalendar.Model"
                }
            ]
        },
        "JC.LunarCalendar.Model": {
            "name": "JC.LunarCalendar.Model",
            "shortname": "JC.LunarCalendar.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.LunarCalendar",
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 692,
            "description": "LunarCalendar 数据模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_container",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_date",
                    "description": "",
                    "type": "Date"
                }
            ]
        },
        "JC.Panel": {
            "name": "JC.Panel",
            "shortname": "JC.Panel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../comps/Panel/Panel.js",
            "line": 5,
            "description": "弹出层基础类 JC.Panel\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.Panel.html' target='_blank'>API docs</a>\n| <a href='../../comps/Panel/_demo' target='_blank'>demo link</a></p>\n<p><b>require</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<h2>Panel Layout 可用的 html attribute</h2>\n<dl>\n     <dt>panelclickclose = bool</dt>\n     <dd>点击 Panel 外时, 是否关闭 panel</dd>\n\n     <dt>panelautoclose = bool</dt>\n     <dd>Panel 是否自动关闭, 默认关闭时间间隔 = 2000 ms</dd>\n\n     <dt>panelautoclosems = int, default = 2000 ms</dt>\n     <dd>自动关闭 Panel 的时间间隔</dd>\n</dl>\n<h2>a, button 可用的 html attribute( 自动生成弹框)</h2>\n<dl>\n     <dt>paneltype = string, require</dt>\n     <dd>\n         弹框类型: alert, confirm, msgbox, panel \n         <br />dialog.alert, dialog.confirm, dialog.msgbox, dialog\n     </dd>\n\n     <dt>panelmsg = string</dt>\n     <dd>要显示的内容</dd>\n\n     <dt>panelmsgBox = script selector</dt>\n     <dd>要显示的脚本模板, 如果需要显示大量 HTML, 应该使用这个属性</dd>\n\n     <dt>panelstatus = int, default = 0</dt>\n     <dd>\n         弹框状态: 0: 成功, 1: 失败, 2: 警告 \n         <br /><b>类型不为 panel, dialog 时生效</b>\n     </dd>\n\n     <dt>panelcallback = function</dt>\n     <dd>点击确定按钮的回调, <b>window 变量域</b></dd>\n\n     <dt>panelcancelcallback = function</dt>\n     <dd>点击取消按钮的回调, <b>window 变量域</b></dd>\n\n     <dt>panelclosecallback = function</dt>\n     <dd>弹框关闭时的回调, <b>window 变量域</b></dd>\n\n     <dt>panelbutton = int, default = 0</dt>\n     <dd>\n         要显示的按钮, 0: 无, 1: 确定, 2: 确定, 取消\n         <br /><b>类型为 panel, dialog 时生效</b>\n     </dd>\n\n     <dt>panelheader = string</dt>\n     <dd>\n         panel header 的显示内容\n         <br /><b>类型为 panel, dialog 时生效</b>\n     </dd>\n\n     <dt>panelheaderBox = script selector</dt>\n     <dd>\n         panel header 的显示内容\n         <br />要显示的脚本模板, 如果需要显示大量 HTML, 应该使用这个属性\n         <br /><b>类型为 panel, dialog 时生效</b>\n     </dd>\n\n     <dt>panelfooterbox = script selector</dt>\n     <dd>\n         panel footer 的显示内容\n         <br />要显示的脚本模板, 如果需要显示大量 HTML, 应该使用这个属性\n         <br /><b>类型为 panel, dialog 时生效</b>\n     </dd>\n\n     <dt>panelhideclose = bool, default = false</dt>\n     <dd>\n         是否隐藏关闭按钮\n         <br /><b>类型为 panel, dialog 时生效</b>\n     </dd>\n</dl>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "自定义弹框模板, 如果 _selector不能解析为 HTML, 将视为@param _headers",
                    "type": "Selector|string"
                },
                {
                    "name": "_headers",
                    "description": "定义模板的 header 文字, 如果 _selector 不能解析为HTML, 视视为@param _bodys",
                    "type": "String"
                },
                {
                    "name": "_bodys",
                    "description": "定义模板的 body 文字, 如果 _selector 不能解析为HTML, 视视为@param _footers",
                    "type": "String"
                },
                {
                    "name": "_footers",
                    "description": "定义模板的 footer 文字",
                    "type": "String"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team",
            "date": "2013-06-04",
            "example": [
                "\n           <script src=\"../../../lib.js\"></script>\n           <script>JC.use( 'Panel' ); </script>\n           <script>\n               var btnstr = [\n                   '<div style=\"text-align:center\" class=\"UButton\">'\n                   , '<button type=\"button\" eventtype=\"confirm\">确定</button>'\n                   , '<button type=\"button\" eventtype=\"cancel\">取消</button>\\n'\n                   , '</div>'\n               ].join('');\n               $(document).ready( function(_evt){\n                   tmpPanel = new JC.Panel( '默认panel', '<h2>test content</h2>' + btnstr, 'test footer');\n                   tmpPanel.on('close', function(_evt, _panel){\n                       JC.log('user close evnet');\n                   });\n                   tmpPanel.show( 0 );\n               });\n           </script>"
            ]
        },
        "JC.Panel.Model": {
            "name": "JC.Panel.Model",
            "shortname": "JC.Panel.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Panel",
            "file": "../comps/Panel/Panel.js",
            "line": 652,
            "description": "存储 Panel 的基础数据类\n<br /><b>这个类为 Panel 的私有类</b>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "自定义弹框模板, 如果 _selector不能解析为 HTML, 将视为@param _headers",
                    "type": "Selector|string"
                },
                {
                    "name": "_headers",
                    "description": "定义模板的 header 文字, 如果 _selector 不能解析为HTML, 视视为@param _bodys",
                    "type": "String"
                },
                {
                    "name": "_bodys",
                    "description": "定义模板的 body 文字, 如果 _selector 不能解析为HTML, 视视为@param _footers",
                    "type": "String"
                },
                {
                    "name": "_footers",
                    "description": "定义模板的 footer 文字",
                    "type": "String"
                }
            ]
        },
        "JC.Panel.View": {
            "name": "JC.Panel.View",
            "shortname": "View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC"
        },
        "JC.hideAllPanel": {
            "name": "JC.hideAllPanel",
            "shortname": "JC.hideAllPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../comps/Panel/Panel.js",
            "line": 1034,
            "description": "隐藏或者清除所有 Panel\n<h2>使用这个方法应当谨慎, 容易为DOM造成垃圾Panel</h2>\n<br /><b>注意</b>: 这是个方法, 写成class是为了方便生成文档",
            "is_constructor": 1,
            "static": 1,
            "params": [
                {
                    "name": "_isClose",
                    "description": "从DOM清除/隐藏所有Panel(包刮 JC.alert, JC.confirm, JC.Panel, JC.Dialog)\n                                    <br />, true = 从DOM 清除, false = 隐藏, 默认 = false( 隐藏 )",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n    JC.hideAllPanel();         //隐藏所有Panel\n    JC.hideAllPanel( true );   //从DOM 清除所有Panel"
            ]
        },
        "JC.hideAllPopup": {
            "name": "JC.hideAllPopup",
            "shortname": "JC.hideAllPopup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../comps/Panel/Panel.js",
            "line": 1057,
            "description": "隐藏 或 从DOM清除所有 JC.alert/JC.confirm\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_isClose",
                    "description": "为真从DOM清除JC.alert/JC.confirm, 为假隐藏, 默认为false",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n     JC.hideAllPopup();         //隐藏所有JC.alert, JC.confirm\n     JC.hideAllPopup( true );   //从 DOM 清除所有 JC.alert, JC.confirm"
            ]
        },
        "JC.msgbox": {
            "name": "JC.msgbox",
            "shortname": "JC.msgbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../comps/Panel/Panel.js",
            "line": 1253,
            "description": "msgbox 提示 popup\n<br /> 这个是不带蒙板 不带按钮的 popup 弹框\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a>, <a href='JC.Panel.html'>Panel</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.msgbox.html' target='_blank'>API docs</a>\n| <a href='../../comps/Panel/_demo' target='_blank'>demo link</a></p>",
            "extends": "JC.Panel",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_popupSrc",
                    "description": "触发弹框的事件源 selector, 不为空显示 缓动效果, 为空居中显示",
                    "type": "Selector"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "弹框自动关闭后的的回调, <b>如果 _cb 为 int 值, 将视为 _closeMs</b>",
                    "type": "Function"
                },
                {
                    "name": "_closeMs",
                    "description": "自动关闭的间隔, 单位毫秒, 默认 2000",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "<a href='JC.Panel.html'>JC.Panel</a>"
            }
        },
        "JC.alert": {
            "name": "JC.alert",
            "shortname": "JC.alert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../comps/Panel/Panel.js",
            "line": 1297,
            "description": "alert 提示 popup\n<br /> 这个是不带 蒙板的 popup 弹框\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a>, <a href='JC.Panel.html'>Panel</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.alert.html' target='_blank'>API docs</a>\n| <a href='../../comps/Panel/_demo' target='_blank'>demo link</a></p>",
            "extends": "JC.Panel",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_popupSrc",
                    "description": "触发弹框的事件源 selector, 不为空显示 缓动效果, 为空居中显示",
                    "type": "Selector"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "点击弹框确定按钮的回调",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "<a href='JC.Panel.html'>JC.Panel</a>"
            }
        },
        "JC.confirm": {
            "name": "JC.confirm",
            "shortname": "JC.confirm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../comps/Panel/Panel.js",
            "line": 1332,
            "description": "confirm 提示 popup\n<br /> 这个是不带 蒙板的 popup 弹框\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p>private property see: <a href='JC.alert.html'>JC.alert</a>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a>, <a href='JC.Panel.html'>Panel</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.confirm.html' target='_blank'>API docs</a>\n| <a href='../../comps/Panel/_demo' target='_blank'>demo link</a></p>",
            "extends": "JC.Panel",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_popupSrc",
                    "description": "触发弹框的事件源 selector, 不为空显示 缓动效果, 为空居中显示",
                    "type": "Selector"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "点击弹框确定按钮的回调",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "<a href='JC.Panel.html'>JC.Panel</a>"
            }
        },
        "JC.Dialog": {
            "name": "JC.Dialog",
            "shortname": "JC.Dialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Dialog",
            "file": "../comps/Panel/Panel.js",
            "line": 1821,
            "description": "带蒙板的会话弹框\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a>, <a href='JC.Panel.html'>Panel</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.Dialog.html' target='_blank'>API docs</a>\n| <a href='../../comps/Panel/_demo' target='_blank'>demo link</a></p>",
            "extends": "JC.Panel",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "自定义弹框模板, 如果 _selector不能解析为 HTML, 将视为@param _headers",
                    "type": "Selector|string"
                },
                {
                    "name": "_headers",
                    "description": "定义模板的 header 文字, 如果 _selector 不能解析为HTML, 视视为@param _bodys",
                    "type": "String"
                },
                {
                    "name": "_bodys",
                    "description": "定义模板的 body 文字, 如果 _selector 不能解析为HTML, 视视为@param _footers",
                    "type": "String"
                },
                {
                    "name": "_footers",
                    "description": "定义模板的 footer 文字",
                    "type": "String"
                }
            ],
            "return": {
                "description": "<a href='JC.Panel.html'>JC.Panel</a>"
            }
        },
        "JC.Dialog.msgbox": {
            "name": "JC.Dialog.msgbox",
            "shortname": "JC.Dialog.msgbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Dialog",
            "file": "../comps/Panel/Panel.js",
            "line": 1882,
            "description": "会话框 msgbox 提示 (不带按钮)\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p>private property see: <a href='JC.Dialog.html'>JC.Dialog</a>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a>, <a href='JC.Panel.html'>Panel</a>, <a href='JC.Dialog.html'>Dialog</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.Dialog.msgbox.html' target='_blank'>API docs</a>\n| <a href='../../comps/Panel/_demo' target='_blank'>demo link</a></p>",
            "extends": "JC.Panel",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "弹框自动关闭后的的回调, <b>如果 _cb 为 int 值, 将视为 _closeMs</b>",
                    "type": "Function"
                },
                {
                    "name": "_closeMs",
                    "description": "自动关闭的间隔, 单位毫秒, 默认 2000",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "<a href='JC.Panel.html'>JC.Panel</a>"
            }
        },
        "JC.Dialog.alert": {
            "name": "JC.Dialog.alert",
            "shortname": "JC.Dialog.alert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Dialog",
            "file": "../comps/Panel/Panel.js",
            "line": 1923,
            "description": "会话框 alert 提示\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p>private property see: <a href='JC.Dialog.html'>JC.Dialog</a>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a>, <a href='JC.Panel.html'>Panel</a>, <a href='JC.Dialog.html'>Dialog</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.Dialog.alert.html' target='_blank'>API docs</a>\n| <a href='../../comps/Panel/_demo' target='_blank'>demo link</a></p>",
            "extends": "JC.Panel",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "点击弹框确定按钮的回调",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "<a href='JC.Panel.html'>JC.Panel</a>"
            }
        },
        "JC.Dialog.confirm": {
            "name": "JC.Dialog.confirm",
            "shortname": "JC.Dialog.confirm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Dialog",
            "file": "../comps/Panel/Panel.js",
            "line": 1961,
            "description": "会话框 confirm 提示\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>\n<p>private property see: <a href='JC.Dialog.html'>JC.Dialog</a>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a>, <a href='JC.Panel.html'>Panel</a>, <a href='JC.Dialog.html'>Dialog</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.Dialog.confirm.html' target='_blank'>API docs</a>\n| <a href='../../comps/Panel/_demo' target='_blank'>demo link</a></p>",
            "extends": "JC.Panel",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "提示内容",
                    "type": "String"
                },
                {
                    "name": "_status",
                    "description": "显示弹框的状态, 0: 成功, 1: 错误, 2: 警告",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "点击弹框确定按钮的回调",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "<a href='JC.Panel.html'>JC.Panel</a>"
            }
        },
        "JC.Dialog.mask": {
            "name": "JC.Dialog.mask",
            "shortname": "JC.Dialog.mask",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Dialog",
            "file": "../comps/Panel/Panel.js",
            "line": 1999,
            "description": "显示或隐藏 蒙板\n<br /><b>注意, 这是个方法, 写 @class 属性是为了生成文档</b>",
            "static": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "_isHide",
                    "description": "空/假 显示蒙板, 为真 隐藏蒙板",
                    "type": "Bool"
                }
            ]
        },
        "JC.Slider": {
            "name": "JC.Slider",
            "shortname": "JC.Slider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Slider",
            "file": "../comps/Slider/Slider.js",
            "line": 3,
            "description": "Slider 划动菜单类\n<br />页面加载完毕后, Slider 会查找那些有 class = js_autoSlider 的标签进行自动初始化\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.Slider.html' target='_blank'>API docs</a>\n| <a href='../../comps/Slider/_demo' target='_blank'>demo link</a></p>\n<h2> 可用的 html attribute </h2>\n<dl>\n     <dt>slidersubitems</dt>\n     <dd>指定具体子元素是那些, selector ( 子元素默认是 layout的子标签 )</dd>\n\n     <dt>sliderleft</dt>\n     <dd>左移的触发selector</dd>\n\n     <dt>sliderright</dt>\n     <dd>右移的触发selector</dd>\n\n     <dt>sliderwidth</dt>\n     <dd>主容器宽度</dd>\n\n     <dt>slideritemwidth</dt>\n     <dd>子元素的宽度</dd>\n\n     <dt>sliderhowmanyitem</dt>\n     <dd>每次滚动多少个子元素, 默认1</dd>\n\n     <dt>sliderdefaultpage</dt>\n     <dd>默认显示第几页</dd>\n\n     <dt>sliderstepms</dt>\n     <dd>滚动效果运动的间隔时间(毫秒), 默认 5</dd>\n\n     <dt>sliderdurationms</dt>\n     <dd>滚动效果的总时间</dd>\n\n     <dt>sliderdirection</dt>\n     <dd>滚动的方向, 默认 horizontal, { horizontal, vertical }</dd>\n\n     <dt>sliderloop</dt>\n     <dd>是否循环滚动</dd>\n\n     <dt>sliderinitedcb</dt>\n     <dd>初始完毕后的回调函数, 便于进行更详细的声明</dd>\n\n     <dt>sliderautomove</dt>\n     <dd>是否自动滚动</dd>\n\n     <dt>sliderautomovems</dt>\n     <dd>自动滚动的间隔</dd>\n</dl>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "date": "2013-07-20",
            "example": [
                "\n           <style>\n               .hslide_list dd{ display: none; }\n\n               .hslide_list dd, .hslide_list dd img{\n                   width: 160px;\n                   height: 230px;\n               }\n\n               .slider_one_item dd, .slider_one_item dd img{\n                   width: 820px;\n                   height: 230px;\n               }\n           </style>\n           <link href='../../Slider/res/hslider/style.css' rel='stylesheet' />\n           <script src=\"../../../lib.js\"></script>\n           <script>\n               JC.debug = true;\n               JC.use( 'Slider' );\n\n               function sliderinitedcb(){\n                   var _sliderIns = this;\n\n                   JC.log( 'sliderinitedcb', new Date().getTime() );\n\n                   _sliderIns.on('outmin', function(){\n                       JC.log( 'slider outmin' );\n                   }).on('outmax', function(){\n                       JC.log( 'slider outmax' );\n                   }).on('movedone', function( _evt, _oldpointer, _newpointer){\n                       JC.log( 'slider movedone', _evt, _oldpointer, _newpointer );\n                   }).on('beforemove', function( _evt, _oldpointer, _newpointer ){\n                       JC.log( 'slider beforemove', _evt, _oldpointer, _newpointer );\n                   });\n               }\n           </script>\n           <table class=\"hslide_wra\">\n               <tr>\n                   <td class=\"hslide_left\">\n                       <a href=\"javascript:\" hidefocus=\"true\" style=\"outline:none;\" class=\"js_slideleft\">左边滚动</a>\n                   </td>\n                   <td class=\"hslide_mid\">\n                       <dl \n                           style=\"width:820px; height: 230px; margin:0 5px;\"\n                           class=\"hslide_list clearfix js_slideList js_autoSlider\" \n                           slidersubitems=\"> dd\" sliderleft=\"a.js_slideleft\" sliderright=\"a.js_slideright\" \n                           sliderwidth=\"820\" slideritemwidth=\"160\"\n                           sliderdirection=\"horizontal\" sliderhowmanyitem=\"5\"\n                           sliderloop=\"false\" sliderdurationms=\"300\"\n                           sliderinitedcb=\"sliderinitedcb\"\n                           >\n                           <dd style=\"display: block; left: 0; \" class=\"tipsItem\">content...</dd>\n                           <dd style=\"display: block; left: 0; \" class=\"tipsItem\">content...</dd>\n                           <dd style=\"display: block; left: 0; \" class=\"tipsItem\">content...</dd>\n                       </dl>\n                   </td>\n                   <td class=\"hslide_right\">\n                       <a href=\"javascript:\" hidefocus=\"true\" style=\"outline:none;\" class=\"js_slideright\">右边滚动</a>\n                   </td>\n               </tr>\n           </table>\n"
            ]
        },
        "JC.Slider.Model": {
            "name": "JC.Slider.Model",
            "shortname": "JC.Slider.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Slider",
            "file": "../comps/Slider/Slider.js",
            "line": 423,
            "description": "Slider 的通用模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_layout",
                    "description": "",
                    "type": "Selector"
                }
            ]
        },
        "JC.Suggest": {
            "name": "JC.Suggest",
            "shortname": "JC.Suggest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../comps/Suggest/Suggest.js",
            "line": 3,
            "description": "Suggest 关键词补全提示类\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.Suggest.html' target='_blank'>API docs</a>\n| <a href='../../comps/Suggest/_demo' target='_blank'>demo link</a></p>\n<h2>可用的 HTML attribute</h2>\n<dl>\n     <dt>sugwidth: int</dt>\n     <dd>显示列表的宽度</dd>\n\n     <dt>suglayout: selector</dt>\n     <dd>显示列表的容器</dd>\n\n     <dt>sugdatacallback: string</dt>\n     <dd>\n         请求 JSONP 数据的回调名\n         <br /><b>注意:</b> 是字符串, 不是函数, 并且确保 window 下没有同名函数\n     </dd>\n\n     <dt>suginitedcallback: string</dt>\n     <dd>\n         初始化完毕后的回调名称\n     </dd>\n\n     <dt>sugurl: string</dt>\n     <dd>\n         数据请求 URL API\n         <br />例: http://sug.so.360.cn/suggest/word?callback={1}&encodein=utf-8&encodeout=utf-8&word={0} \n         <br />{0}=关键词, {1}=回调名称\n     </dd>\n\n     <dt>sugqueryinterval: int, default = 200</dt>\n     <dd>\n         设置用户输入内容时, 响应的间隔, 避免不必要的请求\n     </dd>\n\n     <dt>sugneedscripttag: bool, default=true</dt>\n     <dd>\n         是否需要 自动添加 script 标签\n         <br />Sugggest 设计为支持三种数据格式: JSONP, AJAX, static data\n         <br />目前只支持 JSONP 数据\n     </dd>\n\n     <dt>sugselectedcallback: function</dt>\n     <dd>用户鼠标点击选择关键词后的回调</dd>\n\n     <dt>sugdatafilter: function</dt>\n     <dd>数据过滤回调</dd>\n\n     <dt>sugsubtagname: string, default = dd</dt>\n     <dd>显式定义 suggest 列表的子标签名</dd>\n\n     <dt>suglayouttpl: string</dt>\n     <dd>显式定义 suggest 列表显示模板</dd>\n\n     <dt>sugautoposition: bool, default = false</dt>\n     <dd>式声明是否要自动识别显示位置</dd>\n\n     <dt>sugoffsetleft: int, default = 0</dt>\n     <dd>声明显示时, x轴的偏移像素</dd>\n\n     <dt>sugoffsettop: int, default = 0</dt>\n     <dd>声明显示时, y轴的偏移像素</dd>\n\n     <dt>sugoffsetwidth: int, default = 0</dt>\n     <dd>首次初始化时, layout的偏移宽度</dd>\n\n     <dt>sugplaceholder: selector</dt>\n     <dd>声明自动定位时, 显示位置的占位符标签</dd>\n\n     <dt>sugprevententer: bool, default = false</dt>\n     <dd>回车时, 是否阻止默认事件, 为真将阻止表单提交事件</dd>\n</dl>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "date": "2013-08-11",
            "example": [
                ""
            ]
        },
        "JC.Tab": {
            "name": "JC.Tab",
            "shortname": "JC.Tab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tab",
            "file": "../comps/Tab/Tab.js",
            "line": 3,
            "description": "Tab 菜单类\n<br />DOM 加载完毕后\n, 只要鼠标移动到具有识别符的Tab上面, Tab就会自动初始化, 目前可识别: <b>.js_autoTab</b>( CSS class )\n<br />需要手动初始化, 请使用: var ins = new JC.Tab( _tabSelector );\n<h2>Tab 容器的HTML属性</h2>\n<dl>\n     <dt>tablabels</dt>\n     <dd>声明 tab 标签的选择器语法</dd>\n\n     <dt>tabcontainers</dt>\n     <dd>声明 tab 容器的选择器语法</dd>\n\n     <dt>tabactiveclass</dt>\n     <dd>声明 tab当前标签的显示样式名, 默认为 cur</dd>\n\n     <dt>tablabelparent</dt>\n     <dd>声明 tab的当前显示样式是在父节点, 默认为 tab label 节点</dd>\n\n     <dt>tabactivecallback</dt>\n     <dd>当 tab label 被触发时的回调</dd>\n\n     <dt>tabchangecallback</dt>\n     <dd>当 tab label 变更时的回调</dd>\n</dl>\n<h2>Label(标签) 容器的HTML属性(AJAX)</h2>\n<dl>\n     <dt>tabajaxurl</dt>\n     <dd>ajax 请求的 URL 地址</dd>\n\n     <dt>tabajaxmethod</dt>\n     <dd>ajax 请求的方法( get|post ), 默认 get</dd>\n\n     <dt>tabajaxdata</dt>\n     <dd>ajax 请求的 数据, json</dd>\n\n     <dt>tabajaxcallback</dt>\n     <dd>ajax 请求的回调</dd>\n</dl>\n<p><b>require</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.Tab.html' target='_blank'>API docs</a>\n| <a href='../../comps/Tab/_demo/' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "要初始化的 Tab 选择器",
                    "type": "Selector|string"
                },
                {
                    "name": "_triggerTarget",
                    "description": "初始完毕后要触发的 label",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 360 75 Team",
            "date": "2013-07-04",
            "example": [
                "\n           <link href='../../../comps/Tab/res/default/style.css' rel='stylesheet' />\n           <script src=\"../../../lib.js\"></script>\n           <script>\n               JC.debug = 1;\n               JC.use( 'Tab' );\n\n               httpRequire();\n\n               function tabactive( _evt, _container, _tabIns ){\n                   var _label = $(this);\n                   JC.log( 'tab ', _evt.type, _label.html(), new Date().getTime() );\n                   if( JC.Tab.isAjax( _label ) && ! JC.Tab.isAjaxInited( _label ) ){\n                       _container.html( '<h2>内容加载中...</h2>' );\n                   }\n               }\n\n               function tabchange( _container, _tabIns ){\n                   var _label = $(this);\n                   JC.log( 'tab change: ', _label.html(), new Date().getTime() );\n               }\n\n               $(document).ready( function(){\n                   JC.Tab.ajaxCallback =\n                       function( _data, _label, _container ){\n                           _data && ( _data = $.parseJSON( _data ) );\n                           if( _data && _data.errorno === 0 ){\n                               _container.html( printf( '<h2>JC.Tab.ajaxCallback</h2>{0}', _data.data ) );\n                           }else{\n                               Tab.isAjaxInited( _label, 0 );\n                               _container.html( '<h2>内容加载失败!</h2>' );\n                           }\n                       };\n               });\n\n               function ajaxcallback( _data, _label, _container ){\n                   _data && ( _data = $.parseJSON( _data ) );\n                   if( _data && _data.errorno === 0 ){\n                       _container.html( printf( '<h2>label attr ajaxcallback</h2>{0}', _data.data ) );\n                   }else{\n                       Tab.isAjaxInited( _label, 0 );\n                       _container.html( '<h2>内容加载失败!</h2>' );\n                   }\n               };\n           </script>\n\n           <dl class=\"def\">\n               <dt>JC.Tab 示例 - 静态内容</dt>\n               <dd>\n               <div class=\"le-tabview js_autoTab\" tablabels=\"ul.js_tabLabel > li > a\" tabcontainers=\"div.js_tabContent > div\" \n                                                   tabactiveclass=\"active\" tablabelparent=\"li\" \n                                                   tabactivecallback=\"tabactive\" tabchangecallback=\"tabchange\"\n                                                   >\n                       <ul class=\"le-tabs js_tabLabel\">\n                           <li class=\"active\"><a href=\"javascript:\">电视剧</a></li>\n                           <li><a href=\"javascript:\">电影</a></li>\n                           <li><a href=\"javascript:\">综艺</a></li>\n                           <li><a href=\"javascript:\">热点</a></li>\n                       </ul>\n                       <div class=\"views js_tabContent\">\n                           <div class=\"view-item active\">1. 集地议送能拿距还杨雷火，永鲜提只风超洋轻绿动视落清各只江执口。</div>\n                           <div class=\"view-item\">2. 相送黄血富打万念却烟会华它表本雷烟形烟消卷效难标否标滑固小实。</div>\n                           <div class=\"view-item\">3. 理往局背剧养认被站推简沉形括於穿短，精白自没路绿往优八益是入。</div>\n                           <div class=\"view-item\">4. 鲁杆格滑那双来班五材实死听顶脱本续克修先课丝另乡型茶父报孔图。</div>\n                       </div>\n                   </div>\n               </dd>\n           </dl>\n\n           <dl class=\"def\">\n               <dt>JC.Tab 示例 - 动态内容 - AJAX</dt>\n               <dd>\n               <div class=\"le-tabview js_autoTab\" tablabels=\"ul.js_tabLabel2 > li > a\" tabcontainers=\"div.js_tabContent2 > div\" \n                                                   tabactiveclass=\"active\" tablabelparent=\"li\" \n                                                   tabactivecallback=\"tabactive\" tabchangecallback=\"tabchange\"\n                                                   >\n                       <ul class=\"le-tabs js_tabLabel2\">\n                           <li class=\"active\"><a href=\"javascript:\">电视剧</a></li>\n                           <li><a href=\"javascript:\" tabajaxurl=\"data/test.php\" tabajaxmethod=\"post\" \n                                                     tabajaxdata=\"{a:1,b:2}\" tabajaxcallback=\"ajaxcallback\" >电影</a></li>\n                           <li><a href=\"javascript:\" tabajaxurl=\"data/test.php\" tabajaxcallback=\"ajaxcallback\" >综艺</a></li>\n                           <li><a href=\"javascript:\" tabajaxurl=\"data/test.php\" >热点</a></li>\n                       </ul>\n                       <div class=\"views js_tabContent2\">\n                           <div class=\"view-item active\">1. 集地议送能拿距还杨雷火，永鲜提只风超洋轻绿动视落清各只江执口。</div>\n                           <div class=\"view-item\"></div>\n                           <div class=\"view-item\"></div>\n                           <div class=\"view-item\"></div>\n                       </div>\n                   </div>\n               </dd>\n           </dl>"
            ]
        },
        "JC.Tab.Model": {
            "name": "JC.Tab.Model",
            "shortname": "JC.Tab.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tab",
            "file": "../comps/Tab/Tab.js",
            "line": 304,
            "description": "Tab 数据模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "要初始化的 Tab 选择器",
                    "type": "Selector|string"
                },
                {
                    "name": "_triggerTarget",
                    "description": "初始完毕后要触发的 label",
                    "type": "Selector|string"
                }
            ]
        },
        "JC.Tab.View": {
            "name": "JC.Tab.View",
            "shortname": "JC.Tab.View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tab",
            "file": "../comps/Tab/Tab.js",
            "line": 555,
            "description": "Tab 视图模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_model",
                    "description": "",
                    "type": "JC.Tab.Model"
                }
            ]
        },
        "JC.Tips": {
            "name": "JC.Tips",
            "shortname": "JC.Tips",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tips",
            "file": "../comps/Tips/Tips.js",
            "line": 3,
            "description": "Tips 提示信息类\n<br />显示标签的 title/tipsData 属性 为 Tips 样式\n<p>导入该类后, 页面加载完毕后, 会自己初始化所有带 title/tipsData 属性的标签为 Tips效果的标签\n<br />如果要禁用自动初始化, 请把静态属性  Tips.autoInit 置为 false</p>\n<p><b>注意:</b> Tips 默认构造函数只处理单一标签\n<br />, 如果需要处理多个标签, 请使用静态方法 Tips.init( _selector )</p>\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.Tips.html' target='_blank'>API docs</a>\n| <a href='../../comps/Tips/_demo' target='_blank'>demo link</a></p>\n<h2>可用的 html attribute</h2>\n<dl>\n     <dt>tipsinitedcallback: function</dt>\n     <dd>初始完毕时的回调</dd>\n\n     <dt>tipsshowcallback: function</dt>\n     <dd>显示后的回调</dd>\n\n     <dt>tipshidecallback: function</dt>\n     <dd>隐藏后的回调</dd>\n\n     <dt>tipstemplatebox: selector</dt>\n     <dd>指定tips的显示模板</dd>\n\n     <dt>tipsupdateonce: bool</dt>\n     <dd>tips 内容只更新一次, 这个属性应当与 tipstemplatebox同时使用</dd>\n\n</dl>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "要显示 Tips 效果的标签, 这是单一标签, 需要显示多个请显示 Tips.init 方法",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team",
            "date": "2013-06-23",
            "example": [
                "\n           <script src=\"../../../lib.js\"></script>\n           <script>\n               JC.use( 'Tips' );\n               $(document).ready( function(_evt){\n                   //默认是自动初始化, 也就是只要导入 JC.Tips 就会自己初始化 带 title/tipsData 属性的标签\n                   //下面示例是手动初始化\n                   JC.Tips.autoInit = false;\n                   JC.Tips.init( $( 'a[title]' ) ); \n               });\n           </script>"
            ]
        },
        "JC.Tips.Model": {
            "name": "JC.Tips.Model",
            "shortname": "JC.Tips.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tips",
            "file": "../comps/Tips/Tips.js",
            "line": 294,
            "description": "Tips 数据模型类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ]
        },
        "JC.Tips.View": {
            "name": "JC.Tips.View",
            "shortname": "JC.Tips.View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tips",
            "file": "../comps/Tips/Tips.js",
            "line": 443,
            "description": "Tips 视图类",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_model",
                    "description": "",
                    "type": "JC.Tips.Model"
                }
            ]
        },
        "JC.Tree": {
            "name": "JC.Tree",
            "shortname": "JC.Tree",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tree",
            "file": "../comps/Tree/Tree.js",
            "line": 3,
            "description": "树菜单类 JC.Tree\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a>, \n<a href='.window.html#method_printf'>window.printf</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.Tree.html' target='_blank'>API docs</a>\n| <a href='../../comps/Tree/_demo' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "树要显示的选择器",
                    "type": "Selector"
                },
                {
                    "name": "_data",
                    "description": "树菜单的数据",
                    "type": "Object"
                }
            ],
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team",
            "date": "2013-06-29",
            "example": [
                "\n           <link href='../../../comps/Tree/res/default/style.css' rel='stylesheet' />\n           <script src=\"../../../lib.js\"></script>\n           <script>\n               JC.use( 'Tree' );\n               $(document).ready( function(){\n                   var treeData = {\n                       data: {\"24\":[[\"25\",\"\\u4e8c\\u7ec4\\u4e00\\u961f\"],[\"26\",\"\\u4e8c\\u7ec4\\u4e8c\\u961f\"],[\"27\",\"\\u4e8c\\u7ec4\\u4e09\\u961f\"]],\"23\":[[\"28\",\"\\u9500\\u552e\\u4e8c\\u7ec4\"],[\"24\",\"\\u552e\\u524d\\u5ba1\\u6838\\u7ec4\"]]},\n                       root: [\"23\",'客户发展部']\n                   };\n                   var _tree = new JC.Tree( $('#tree_box2'), treeData );\n                       _tree.on('RenderLabel', function( _data ){\n                           var _node = $(this);\n                           _node.html( printf( '<a href=\"javascript:\" dataid=\"{0}\">{1}</a>', _data[0], _data[1] ) );\n                       });\n                       _tree.on('click', function( _evt ){\n                           var _p = $(this);\n                           JC.log( 'tree click:', _p.html(), _p.attr('dataid'), _p.attr('dataname') );\n                       });\n                       _tree.init();\n                       //_queryNode && _tree.open( _queryNode );\n               });\n           </script>\n           <div id=\"tree_box2\" class=\"tree_container\"></div>"
            ]
        },
        "JC.Tree.Model": {
            "name": "JC.Tree.Model",
            "shortname": "JC.Tree.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC.Tree",
            "file": "../comps/Tree/Tree.js",
            "line": 238,
            "description": "树的数据模型类",
            "is_constructor": 1
        },
        "JC.Valid": {
            "name": "JC.Valid",
            "shortname": "JC.Valid",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../comps/Valid/Valid.js",
            "line": 4,
            "description": "<b>表单验证</b> (单例模式)\n<br />全局访问请使用 JC.Valid 或 Valid\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.Valid.html' target='_blank'>API docs</a>\n| <a href='../../comps/Valid/_demo/' target='_blank'>demo link</a></p>\n<h2>Form 的可用 html attribute</h2>\n<dl>\n     <dt>errorabort = bool, default = true</dt>\n     <dd>\n         查检Form Control时, 如果发生错误是否继续检查下一个\n         <br />true: 继续检查, false, 停止检查下一个\n     </dd>\n\n     <dt>validmsg = bool | string</dt>\n     <dd>\n         内容填写正确时显示的 提示信息, class=validmsg\n         <br />如果 = 0, false, 将不显示提示信息\n         <br />如果 = 1, true, 将不显示提示文本\n     </dd>\n\n     <dt>validemdisplaytype = string, default = inline</dt>\n     <dd>\n         设置 表单所有控件的 em  CSS display 显示类型\n     </dd>\n</dl>\n<h2>Form Control的可用 html attribute</h2>\n<dl>\n     <dt>reqmsg = 错误提示</dt>\n     <dd>值不能为空, class=error errormsg</dd>\n\n     <dt>errmsg = 错误提示</dt>\n     <dd>格式错误, 但不验证为空的值, class=error errormsg</dd>\n\n     <dt>focusmsg = 控件获得焦点的提示信息</dt>\n     <dd>\n         这个只作提示用, class=focusmsg\n     </dd>\n\n     <dt>validmsg = bool | string</dt>\n     <dd>\n         内容填写正确时显示的 提示信息, class=validmsg\n         <br />如果 = 0, false, 将不显示提示信息\n         <br />如果 = 1, true, 将不显示提示文本\n     </dd>\n\n     <dt>emel = selector</dt>\n     <dd>显示错误信息的selector</dd>\n\n     <dt>validel = selector</dt>\n     <dd>显示正确信息的selector</dd>\n\n     <dt>focusel = selector</dt>\n     <dd>显示提示信息的selector</dd>\n\n     <dt>validemdisplaytype = string, default = inline</dt>\n     <dd>\n         设置 em 的 CSS display 显示类型\n     </dd>\n\n     <dt>ignoreprocess = bool, default = false</dt>\n     <dd>验证表单控件时, 是否忽略</dd>\n\n     <dt>minlength = int(最小长度)</dt>\n     <dd>验证内容的最小长度, 但不验证为空的值</dd>\n\n     <dt>maxlength = int(最大长度)</dt>\n     <dd>验证内容的最大长度, 但不验证为空的值</dd>\n\n     <dt>minvalue = [number|ISO date](最小值)</dt>\n     <dd>验证内容的最小值, 但不验证为空的值</dd>\n\n     <dt>maxvalue = [number|ISO date](最大值)</dt>\n     <dd>验证内容的最大值, 但不验证为空的值</dd>\n\n     <dt>validitemcallback = function name</dt>\n     <dd>\n         对一个 control 作检查后的回调, 无论正确与否都会触发, <b>window 变量域</b>\n<xmp>function validItemCallback( _item, _isValid){\n   JC.log( _item.attr('name'), _isValid );\n}</xmp>\n     </dd>\n\n     <dt>datatype: 常用数据类型</dt>\n     <dd><b>n:</b> 检查是否为正确的数字</dd>\n     <dd><b>n-i.f:</b> 检查数字格式是否附件要求, i[整数位数], f[浮点数位数], n-7.2 = 0.00 ~ 9999999.99</dd>\n     <dd>\n         <b>nrange:</b> 检查两个control的数值范围\n         <dl>\n             <dd>html attr <b>fromNEl:</b> 指定开始的 control</dd>\n             <dd>html attr <b>toNEl:</b> 指定结束的 control</dd>\n             <dd>如果不指定 fromNEl, toNEl, 默认是从父节点下面找到 nrange, 按顺序定为 fromNEl, toNEl</dd>\n         </dl>\n     </dd>\n     <dd><b>d:</b> 检查是否为正确的日期, YYYYMMDD, YYYY/MM/DD, YYYY-MM-DD, YYYY.MM.DD</dd>\n     <dd>\n         <b>daterange:</b> 检查两个control的日期范围\n         <dl>\n             <dd>html attr <b>fromDateEl:</b> 指定开始的 control</dd>\n             <dd>html attr <b>toDateEl:</b> 指定结束的 control</dd>\n             <dd>如果不指定 fromDateEl, toDateEl, 默认是从父节点下面找到 daterange, 按顺序定为 fromDateEl, toDateEl</dd>\n         </dl>\n     </dd>\n     <dd><b>time:</b> 是否为正确的时间, hh:mm:ss</dd>\n     <dd><b>minute:</b> 是否为正确的时间, hh:mm</dd>\n     <dd>\n         <b>bankcard:</b> 是否为正确的银行卡\n         <br />  格式为 d{19} | d{16} | 1111 1111 1111 1111 111 | 1111 1111 1111 1111111\n     </dd>\n     <dd>\n         <b>cnname:</b> 中文姓名\n         <br>格式: 汉字和大小写字母\n         <br>规则: 长度 2-32个字节, 非 ASCII 算2个字节\n     </dd>\n     <dd>\n         <b>username:</b> 注册用户名\n         <br>格式: a-zA-Z0-9_-\n         <br>规则: 首字母必须为 [a-zA-Z0-9], 长度 2 - 30\n     </dd>\n     <dd><b>idnumber:</b> 身份证号码, 15~18 位</dd>\n     <dd><b>mobilecode:</b> 手机号码, 11位, (13|14|15|16|18|19)[\\d]{9}</dd>\n     <dd><b>mobile:</b> mobilecode 的别名</dd>\n     <dd><b>mobilezonecode:</b> 带 国家代码的手机号码, [+国家代码] [零]11位数字</dd>\n     <dd><b>phonecode:</b> 电话号码, 7~8 位数字, [1-9][0-9]{6,7}</dd>\n     <dd><b>phone:</b> 带区号的电话号码, [区号][空格|空白|-]7~8位电话号码</dd>\n     <dd><b>phoneall:</b> 带国家代码, 区号, 分机号的电话号码, [+国家代码][区号][空格|空白|-]7~8位电话号码#1~6位</dd>\n     <dd><b>phonezone:</b> 电话区号, 3~4位数字. phonezone-n,m 可指定位数长度</dd>\n     <dd><b>phoneext:</b> 电话分机号, 1~6位数字</dd>\n     <dd><b>countrycode:</b> 地区代码, [+]1~6位数字</dd>\n     <dd><b>mobilephone:</b> mobilecode | phone</dd>\n     <dd><b>mobilephoneall:</b> mobilezonecode | phoneall</dd>\n     <dd><b>reg:</b> 自定义正则校验, /正则规则/[igm]</dd>\n     <dd>\n         <b>vcode:</b> 验证码, 0-9a-zA-Z, 长度 默认为4\n         <br />可通过 vcode-[\\d], 指定验证码长度\n     </dd>\n     <dd>\n         <b>text:</b> 显示声明检查的内容为文本类型\n         <br />默认就是 text, 没有特殊原因其实不用显示声明\n     </dd>\n     <dd>\n         <b>bytetext:</b> 声明按字节检查文本长度\n         <br /> ASCII 算一个字符, 非 ASCII 算两个字符\n     </dd>\n     <dd><b>url:</b> URL 格式, ftp, http, https</dd>\n     <dd><b>domain:</b> 匹配域名, 宽松模式, 允许匹配 http(s), 且结尾允许匹配反斜扛(/)</dd>\n     <dd><b>stricdomain:</b> 匹配域名, 严格模式, 不允许匹配 http(s), 且结尾不允许匹配反斜扛(/)</dd>\n     <dd><b>email:</b> 电子邮件</dd>\n     <dd><b>zipcode:</b> 邮政编码, 0~6位数字</dd>\n     <dd><b>taxcode:</b> 纳税人识别号, 长度: 15, 18, 20 </dd>\n\n     <dd>\n         <dl>\n             <dt>checkbox: 默认需要至少选中N 个 checkbox</dt>\n             <dd>\n                 默认必须选中一个 checkbox\n                 <br > 如果需要选中N个, 用这种格式 checkbox-n, checkbox-3 = 必须选中三个\n                 <br > datatarget: 声明所有 checkbox 的选择器\n             </dd>\n         </dl>\n     </dd>\n\n     <dd>\n         <dl>\n             <dt>file: 判断文件扩展名</dt>\n             <dd>属性名(文件扩展名列表): fileext</dd>\n             <dd>格式: .ext[, .ext]</dd>\n             <dd>\n<xmp>   <input type=\"file\" \n   reqmsg=\"文件\" \n   errmsg=\"允许上传的文件类型: .gif, .jpg, .jpeg, .png\"\n   datatype=\"file\" \n   fileext=\".gif, .jpg, .jpeg, .png\" \n   />\n   <label>.gif, .jpg, .jpeg, .png</label>\n   <em class=\"error\"></em>\n   <em class=\"validmsg\"></em>\n</xmp>\n                   </dd>\n         </dl>\n     </dd>\n\n     <dt>subdatatype: 特殊数据类型, 以逗号分隔多个属性</dt>\n     <dd>\n         <dl>\n             <dt>alternative: N 个 Control 必须至少有一个非空的值</dt>\n             <dd><b>datatarget:</b> 显式指定同一组 control, 默认在父级下查找[subdatatype=alternative]</dd>\n             <dd><b>alternativedatatarget:</b> 与 datatarget相同, 区别是优先级高于 datatarget</dd>\n             <dd><b>alternativemsg:</b> N 选一的错误提示</dd>\n         </dl>\n     </dd>\n     <dd>\n         <dl>\n             <dt>reconfirm: N 个 Control 的值必须保持一致</dt>\n             <dd><b>datatarget:</b> 显式指定同一组 control, 默认在父级下查找[subdatatype=reconfirm]</dd>\n             <dd><b>reconfirmdatatarget:</b> 与 datatarget相同, 区别是优先级高于 datatarget</dd>\n             <dd><b>reconfirmmsg:</b> 值不一致时的错误提示</dd>\n         </dl>\n     </dd>\n     <dd>\n         <dl>\n             <dt>unique: N 个 Control 的值必须保持唯一性, 不能有重复</dt>\n             <dd><b>datatarget:</b> 显式指定同一组 control, 默认在父级下查找[subdatatype=unique]</dd>\n             <dd><b>uniquedatatarget:</b> 与 datatarget相同, 区别是优先级高于 datatarget</dd>\n             <dd><b>uniquemsg:</b> 值有重复的提示信息</dd>\n             <dd>unique-n 可以指定 N 个为一组的匹配, unique-2 = 2个一组, unique-3: 三个一组</dd>\n         </dl>\n     </dd>\n</dl>",
            "static": 1,
            "version": "0.1,  2013-05-22",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team"
        },
        "window.jQuery": {
            "name": "window.jQuery",
            "shortname": "window.jQuery",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window",
            "file": "../lib.js",
            "line": 1,
            "description": "jQuery JavaScript Library v1.9.1\n<pre>http://jquery.com/\n\nIncludes Sizzle.js\nhttp://sizzlejs.com/\n\nCopyright 2005, 2012 jQuery Foundation, Inc. and other contributors\nReleased under the MIT license\nhttp://jquery.org/license\nDate: 2013-2-4</pre>",
            "global": ""
        },
        ".window": {
            "name": ".window",
            "shortname": ".window",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "",
            "file": "../lib.js",
            "line": 23,
            "description": "全局函数",
            "static": 1
        },
        "window.JC": {
            "name": "window.JC",
            "shortname": "window.JC",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window",
            "file": "../lib.js",
            "line": 750,
            "description": "JC jquery 组件库 资源调用控制类\n<br />这是一个单例模式, 全局访问使用 JC 或 window.JC\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/window.JC.html' target='_blank'>API docs</a>\n| <a href='../../_demo' target='_blank'>demo link</a></p>",
            "static": 1,
            "example": [
                " \n     JC.use( 组件名[,组件名] );"
            ],
            "author": "qiushaowei   <suches@btbtd.org> | 75 team",
            "date": "2013-08-04"
        },
        "window.UXC": {
            "name": "window.UXC",
            "shortname": "window.UXC",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "window",
            "file": "../lib.js",
            "line": 1037,
            "description": "UXC 是 JC 的别名\n<br />存在这个变量是为了向后兼容\n<br />20130804 之前的命名空间是 UXC, 这个命名空间在一段时间后将会清除, 请使用 JC 命名空间\n<p><b>see</b>: <a href='window.JC.html'>JC</a></p>",
            "static": 1,
            "date": "2013-05-22"
        },
        "JC.Bizs": {
            "name": "JC.Bizs",
            "shortname": "window.Bizs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../lib.js",
            "line": 1056,
            "description": "<h2>业务逻辑命名空间</h2>\n<br />这个命名空间的组件主要为满足业务需求, 不是通用组件~\n<br />但在某个项目中应该是常用组件~\n<dl>\n     <dt>业务组件的存放位置:</dt>\n     <dd>libpath/bizs/</dd>\n\n     <dt>使用业务组件</dt>\n     <dd> JC.use( 'Bizs.BizComps' ); //  libpath/bizs/BizComps/BizComps.js </dd>\n\n     <dt>使用业务文件</dt>\n     <dd> JC.use( 'bizs.BizFile' ); //   libpath/bizs/BizFile.js </dd>\n</dl>",
            "static": 1
        },
        "JC.BaseMVC": {
            "name": "JC.BaseMVC",
            "shortname": "JC.BaseMVC",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../lib.js",
            "line": 1081,
            "description": "MVC 抽象类 ( <b>仅供扩展用</b> )\n<p>这个类默认已经包含在lib.js里面, 不需要显式引用</p>   \n<p><b>require</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.BaseMVC.html' target='_blank'>API docs</a>\n| <a href='../../comps/BaseMVC/_demo' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2013-09-07",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team"
        },
        "JC.BaseMVC.Model": {
            "name": "JC.BaseMVC.Model",
            "shortname": "JC.BaseMVC.Model",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "namespace": "JC",
            "file": "../lib.js",
            "line": 1287,
            "description": "MVC Model 类( <b>仅供扩展用</b> )\n<p>这个类默认已经包含在lib.js里面, 不需要显式引用</p>   \n<p><b>require</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs_api/classes/JC.BaseMVC.Model.html' target='_blank'>API docs</a>\n| <a href='../../comps/BaseMVC/_demo' target='_blank'>demo link</a></p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "version": "dev 0.1 2013-09-11",
            "author": "qiushaowei   <suches@btbtd.org> | 75 Team"
        }
    },
    "classitems": [
        {
            "file": "../bizs/ActionLogic/ActionLogic.js",
            "line": 117,
            "description": "获取或设置 ActionLogic 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "ActionLogic instance"
            },
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/ActionLogic/ActionLogic.js",
            "line": 133,
            "description": "判断 selector 是否可以初始化 ActionLogic",
            "itemtype": "method",
            "name": "isActionLogic",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "bool"
            },
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/ActionLogic/ActionLogic.js",
            "line": 148,
            "description": "批量初始化 ActionLogic\n<br />页面加载完毕时, 已使用 事件代理 初始化\n<br />如果是弹框中的 ActionLogic, 由于事件冒泡被阻止了, 需要显示调用  init 方法",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/ActionLogic/ActionLogic.js",
            "line": 167,
            "description": "初始化 ActionLogic, 并执行",
            "itemtype": "method",
            "name": "process",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "Instance|null"
            },
            "static": 1,
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/ActionLogic/ActionLogic.js",
            "line": 195,
            "description": "脚本模板 Panel",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/ActionLogic/ActionLogic.js",
            "line": 201,
            "description": "显示 Panel",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/ActionLogic/ActionLogic.js",
            "line": 213,
            "description": "ajax Panel",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/ActionLogic/ActionLogic.js",
            "line": 243,
            "description": "跳转到 URL",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/ActionLogic/ActionLogic.js",
            "line": 252,
            "description": "ajax 执行操作",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/ActionLogic/ActionLogic.js",
            "line": 286,
            "description": "处理错误提示",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/ActionLogic/ActionLogic.js",
            "line": 318,
            "description": "处理二次确认",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/ActionLogic/ActionLogic.js",
            "line": 338,
            "description": "处理成功提示",
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/ActionLogic/ActionLogic.js",
            "line": 371,
            "description": "执行操作",
            "itemtype": "method",
            "name": "process",
            "return": {
                "description": "",
                "type": "ActionLogicInstance"
            },
            "class": "window.Bizs.ActionLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/CommonModify/CommonModify.js",
            "line": 197,
            "description": "获取 显示 CommonModify 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "window.Bizs.CommonModify",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/CommonModify/CommonModify.js",
            "line": 203,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "CommonModifyInstance"
            },
            "class": "window.Bizs.CommonModify",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/CommonModify/CommonModify.js",
            "line": 211,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "CommonModifyInstance"
            },
            "class": "window.Bizs.CommonModify",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/CommonModify/CommonModify.js",
            "line": 222,
            "description": "update current selector",
            "class": "window.Bizs.CommonModify",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/CommonModify/CommonModify.js",
            "line": 234,
            "description": "获取或设置 CommonModify 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "CommonModify instance"
            },
            "class": "window.Bizs.CommonModify",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/CommonModify/CommonModify.js",
            "line": 248,
            "description": "判断 selector 是否可以初始化 CommonModify",
            "itemtype": "method",
            "name": "isCommonModify",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "bool"
            },
            "class": "window.Bizs.CommonModify",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/DisableLogic/DisableLogic.js",
            "line": 159,
            "description": "获取 显示 DisableLogic 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "window.Bizs.DisableLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/DisableLogic/DisableLogic.js",
            "line": 165,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "DisableLogicInstance"
            },
            "class": "window.Bizs.DisableLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/DisableLogic/DisableLogic.js",
            "line": 173,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "DisableLogicInstance"
            },
            "class": "window.Bizs.DisableLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/DisableLogic/DisableLogic.js",
            "line": 181,
            "description": "获取或设置 DisableLogic 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "DisableLogic instance"
            },
            "class": "window.Bizs.DisableLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/DisableLogic/DisableLogic.js",
            "line": 201,
            "description": "初始化 _selector | document 可识别的 DisableLogic HTML属性",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector,",
                    "description": "default = document",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "class": "window.Bizs.DisableLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/FormLogic/FormLogic.js",
            "line": 258,
            "description": "获取或设置 FormLogic 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "FormLogic instance"
            },
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/FormLogic/FormLogic.js",
            "line": 280,
            "description": "处理 form 或者 _selector 的所有form.js_bizsFormLogic",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "Array of FormLogicInstance",
                "type": "Array"
            },
            "static": 1,
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/FormLogic/FormLogic.js",
            "line": 301,
            "description": "msgbox 提示框的自动关闭时间",
            "itemtype": "property",
            "name": "popupCloseMs",
            "type": "int",
            "default": "2000",
            "static": 1,
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/FormLogic/FormLogic.js",
            "line": 309,
            "description": "AJAX 表单的提交类型\n<br />plugins, form\n<br />plugins 可以支持文件上传",
            "itemtype": "property",
            "name": "popupCloseMs",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/FormLogic/FormLogic.js",
            "line": 319,
            "description": "表单提交后, 是否禁用提交按钮",
            "itemtype": "property",
            "name": "submitDisable",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/FormLogic/FormLogic.js",
            "line": 327,
            "description": "表单提交后, 是否重置表单内容",
            "itemtype": "property",
            "name": "resetAfterSubmit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/FormLogic/FormLogic.js",
            "line": 349,
            "description": "默认 form 提交处理事件\n这个如果是 AJAX 的话, 无法上传 文件",
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/FormLogic/FormLogic.js",
            "line": 418,
            "description": "jquery ajax 提交处理事件",
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/FormLogic/FormLogic.js",
            "line": 434,
            "description": "全局 AJAX 提交完成后的处理事件",
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/FormLogic/FormLogic.js",
            "line": 438,
            "description": "这是个神奇的BUG\nchrome 如果没有 reset button, 触发 reset 会导致页面刷新",
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/FormLogic/FormLogic.js",
            "line": 479,
            "description": "表单内容验证通过后, 开始提交前的处理事件",
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/FormLogic/FormLogic.js",
            "line": 490,
            "description": "jquery.form plugins 提交处理设置\n这个可以 AJAX 上传文件",
            "class": "window.Bizs.FormLogic",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/KillISPCache/KillISPCache.js",
            "line": 52,
            "description": "处理 _selector 的所有 child",
            "itemtype": "method",
            "name": "process",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_ignoreSameLinkText",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "",
                "type": "KillISPCacheInstance"
            },
            "class": "window.Bizs.KillISPCache",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/KillISPCache/KillISPCache.js",
            "line": 79,
            "description": "获取 KillISPCache 实例 ( 单例模式 )",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "KillISPCacheInstance"
            },
            "class": "window.Bizs.KillISPCache",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/KillISPCache/KillISPCache.js",
            "line": 91,
            "description": "是否忽略 url 跟 文本 相同的节点",
            "itemtype": "property",
            "name": "ignoreSameLinkText",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "window.Bizs.KillISPCache",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/KillISPCache/KillISPCache.js",
            "line": 99,
            "description": "自定义随机数的参数名",
            "itemtype": "property",
            "name": "randName",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "window.Bizs.KillISPCache",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/KillISPCache/KillISPCache.js",
            "line": 107,
            "description": "添加忽略随机数的 ULR",
            "itemtype": "method",
            "name": "ignoreUrl",
            "params": [
                {
                    "name": "_url!~YUIDOC_LINE~!return",
                    "description": "Array",
                    "type": "String|Array"
                }
            ],
            "static": 1,
            "class": "window.Bizs.KillISPCache",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/KillISPCache/KillISPCache.js",
            "line": 118,
            "description": "添加忽略随机数的 选择器",
            "itemtype": "method",
            "name": "ignoreSelector",
            "params": [
                {
                    "name": "_selector!~YUIDOC_LINE~!return",
                    "description": "Array",
                    "type": "Selector|Array"
                }
            ],
            "static": 1,
            "class": "window.Bizs.KillISPCache",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/MultiDate/MultiDate.js",
            "line": 88,
            "description": "获取 显示 MultiDate 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "window.Bizs.MultiDate",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/MultiDate/MultiDate.js",
            "line": 94,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "MultiDateInstance"
            },
            "class": "window.Bizs.MultiDate",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/MultiDate/MultiDate.js",
            "line": 102,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "MultiDateInstance"
            },
            "class": "window.Bizs.MultiDate",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/MultiDate/MultiDate.js",
            "line": 110,
            "description": "获取或设置 MultiDate 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "MultiDate instance"
            },
            "class": "window.Bizs.MultiDate",
            "namespace": "window.Bizs"
        },
        {
            "file": "../bizs/MultiDate/MultiDate.js",
            "line": 126,
            "description": "判断 selector 是否可以初始化 MultiDate",
            "itemtype": "method",
            "name": "isMultiDate",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "bool"
            },
            "class": "window.Bizs.MultiDate",
            "namespace": "window.Bizs"
        },
        {
            "file": "../comps/AjaxUpload/AjaxUpload.js",
            "line": 115,
            "description": "获取或设置 AjaxUpload 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "AjaxUploadInstance"
            },
            "static": 1,
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../comps/AjaxUpload/AjaxUpload.js",
            "line": 131,
            "description": "初始化可识别的组件",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "instance array",
                "type": "Array"
            },
            "static": 1,
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../comps/AjaxUpload/AjaxUpload.js",
            "line": 151,
            "description": "frame 文件名",
            "itemtype": "property",
            "name": "frameFileName",
            "type": "string",
            "default": "\"default.html\"",
            "static": 1,
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../comps/AjaxUpload/AjaxUpload.js",
            "line": 159,
            "description": "载入 frame 文件时, 是否添加随机数防止缓存",
            "itemtype": "property",
            "name": "randomFrame",
            "type": "bool",
            "default": "false",
            "static": 1,
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../comps/AjaxUpload/AjaxUpload.js",
            "line": 167,
            "description": "frame 文件夹位于库的位置",
            "itemtype": "property",
            "name": "_FRAME_DIR",
            "type": "string",
            "default": "\"comps/AjaxUpload/frame/\"",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../comps/AjaxUpload/AjaxUpload.js",
            "line": 176,
            "description": "初始化 frame 时递增的统计变量",
            "itemtype": "property",
            "name": "_INS_COUNT",
            "type": "int",
            "default": "1",
            "access": "protected",
            "tagname": "",
            "static": 1,
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../comps/AjaxUpload/AjaxUpload.js",
            "line": 196,
            "description": "iframe 加载完毕后触发的事件, 执行初始化操作",
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../comps/AjaxUpload/AjaxUpload.js",
            "line": 204,
            "description": "文件扩展名错误",
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../comps/AjaxUpload/AjaxUpload.js",
            "line": 211,
            "description": "上传前触发的事件",
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../comps/AjaxUpload/AjaxUpload.js",
            "line": 217,
            "description": "上传完毕触发的事件",
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../comps/AjaxUpload/AjaxUpload.js",
            "line": 247,
            "description": "frame 的按钮样式改变后触发的事件\n需要更新 frame 的宽高",
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../comps/AjaxUpload/AjaxUpload.js",
            "line": 264,
            "description": "手动更新数据",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "_d",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "AjaxUploadInstance"
            },
            "example": [
                "\n               JC.AjaxUpload.getInstance( _selector ).update( {\n                   \"errorno\": 0, \n                   \"data\":\n                   {\n                       \"url\": \"/ignore/JQueryComps_dev/comps/AjaxUpload/_demo/data/images/test.jpg\", \n                       \"name\": \"test.jpg\"\n                   }, \n                   \"errmsg\": \"\"\n               });"
            ],
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../comps/AjaxUpload/AjaxUpload.js",
            "line": 385,
            "description": "恢复默认状态",
            "class": "JC.AjaxUpload",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoChecked/AutoChecked.js",
            "line": 101,
            "description": "初始化 _selector 的所有 input[checktype][checkfor]",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "class": "JC.AutoChecked",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoChecked/AutoChecked.js",
            "line": 172,
            "description": "更新 全选状态",
            "itemtype": "method",
            "name": "update",
            "class": "JC.AutoChecked",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoChecked/AutoChecked.js",
            "line": 181,
            "description": "获取 显示 AutoChecked 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "JC.AutoChecked",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoChecked/AutoChecked.js",
            "line": 187,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "AutoCheckedInstance"
            },
            "class": "JC.AutoChecked",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoChecked/AutoChecked.js",
            "line": 195,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "AutoCheckedInstance"
            },
            "class": "JC.AutoChecked",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoChecked/AutoChecked.js",
            "line": 203,
            "description": "获取或设置 AutoChecked 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "AutoChecked instance"
            },
            "class": "JC.AutoChecked",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoChecked/AutoChecked.js",
            "line": 219,
            "description": "判断 selector 是否可以初始化 AutoChecked",
            "itemtype": "method",
            "name": "isAutoChecked",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "bool"
            },
            "class": "JC.AutoChecked",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 120,
            "description": "判断 selector 是否为符合自动初始化联动框的要求",
            "itemtype": "method",
            "name": "isSelect",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 137,
            "description": "是否自动隐藏空值的级联下拉框, 起始下拉框不会被隐藏\n<br />这个是全局设置, 如果需要对具体某个select进行处理, 对应的 HTML 属性 selecthideempty",
            "itemtype": "property",
            "name": "hideEmpty",
            "type": "bool",
            "default": "false",
            "static": 1,
            "example": [
                "\n               AutoSelect.hideEmpty = true;"
            ],
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 148,
            "description": "级联下拉框的数据过滤函数\n<br />默认数据格式: [ [id, name], [id, name] ... ]\n<br />如果获取到的数据格式非默认格式, 可通过本函数进行数据过滤\n<p>\n <b>注意, 这个是全局过滤, 如果要使用该函数进行数据过滤, 判断逻辑需要比较具体</b>\n <br />如果要对具体 select 进行数据过滤, 可以使用HTML属性 selectdatafilter 指定过滤函数\n</p>",
            "itemtype": "property",
            "name": "dataFilter",
            "type": "function",
            "default": "null",
            "static": 1,
            "example": [
                "\n                AutoSelect.dataFilter = \n                   function( _data, _select ){\n                       var _r = _data;\n                       if( _data && !_data.length && _data.data ){\n                           _r = _data.data;\n                       }\n                       return _r;\n                   };"
            ],
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 171,
            "description": "下拉框初始化功能都是未初始化 数据之前的回调\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectbeforeInited",
            "itemtype": "property",
            "name": "beforeInited",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 180,
            "description": "下拉框第一次初始完所有数据的回调\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectinited",
            "itemtype": "property",
            "name": "inited",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 189,
            "description": "下拉框每个项数据变更后的回调\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectchange",
            "itemtype": "property",
            "name": "change",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 198,
            "description": "下拉框所有项数据变更后的回调\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectallchanged",
            "itemtype": "property",
            "name": "allChanged",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 207,
            "description": "第一次初始化所有联动框时, 是否触发 change 事件\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selecttriggerinitchange",
            "itemtype": "property",
            "name": "triggerInitChange",
            "type": "bool",
            "default": "false",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 216,
            "description": "ajax 请求数据时, 是否添加随机参数防止缓存\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectrandomurl",
            "itemtype": "property",
            "name": "randomurl",
            "type": "bool",
            "default": "false",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 225,
            "description": "处理 ajax url 的回调处理函数\n<br />这个是全局回调, 如果需要对具体某一组进行处理, 对应的 HTML 属性 selectprocessurl",
            "itemtype": "property",
            "name": "processUrl",
            "type": "function",
            "default": "null",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 234,
            "description": "首次初始化时, 是否需要请求新数据\n<br />有时 联动框太多, 载入页面时, 后端直接把初始数据输出, 避免请求过多",
            "itemtype": "property",
            "name": "ignoreInitRequest",
            "type": "bool",
            "default": "false",
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 243,
            "description": "获取或设置 selector 的实例引用",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_ins",
                    "description": "",
                    "type": "AutoSelectControlerInstance"
                }
            ],
            "return": {
                "description": "AutoSelectControlerInstance"
            },
            "static": 1,
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 317,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "AutoSelectInstance"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 325,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "AutoSelectInstance"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 332,
            "description": "获取第一个 select",
            "itemtype": "method",
            "name": "first",
            "return": {
                "description": "selector"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 338,
            "description": "获取最后一个 select",
            "itemtype": "method",
            "name": "last",
            "return": {
                "description": "selector"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 344,
            "description": "获取所有 select",
            "itemtype": "method",
            "name": "items",
            "return": {
                "description": "selector"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 350,
            "description": "是否为第一个 select",
            "itemtype": "method",
            "name": "isFirst",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 357,
            "description": "是否为最后一个 select",
            "itemtype": "method",
            "name": "isLast",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 364,
            "description": "是否已经初始化过",
            "itemtype": "method",
            "name": "isInited",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 371,
            "description": "获取 select 的数据",
            "itemtype": "method",
            "name": "data",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "JSON"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 378,
            "description": "更新默认选中列表",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "_ls",
                    "description": "ids for selected, (string with \",\" or array of ids );",
                    "type": "Array|string"
                }
            ],
            "return": {
                "description": "AutoSelectInstance"
            },
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 763,
            "description": "判断下拉框的option里是否有给定的值",
            "params": [
                {
                    "name": "_select",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_val",
                    "description": "要查找的值",
                    "type": "String"
                }
            ],
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 833,
            "description": "初始化之事的事件",
            "itemtype": "event",
            "name": "SelectBeforeInited",
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 837,
            "description": "初始化后的事件",
            "itemtype": "event",
            "name": "SelectInited",
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 841,
            "description": "响应每个 select 的 change 事件",
            "itemtype": "event",
            "name": "SelectChange",
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 845,
            "description": "最后一个 select change 后的事件",
            "itemtype": "event",
            "name": "SelectAllChanged",
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 849,
            "description": "select 更新数据之前触发的事件",
            "itemtype": "event",
            "name": "SelectItemBeforeUpdate",
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 853,
            "description": "select 更新数据之后触发的事件",
            "itemtype": "event",
            "name": "SelectItemUpdated",
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/AutoSelect/AutoSelect.js",
            "line": 857,
            "description": "页面加载完毕时, 延时进行自动化, 延时可以避免来自其他逻辑的干扰",
            "class": "JC.AutoSelect",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 138,
            "description": "内部初始化函数",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 163,
            "description": "初始化相关操作事件",
            "itemtype": "method",
            "name": "_initHanlderEvent",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 245,
            "description": "显示 Calendar",
            "itemtype": "method",
            "name": "show",
            "return": {
                "description": "CalendarInstance"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 258,
            "description": "隐藏 Calendar",
            "itemtype": "method",
            "name": "hide",
            "return": {
                "description": "CalendarInstance"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 269,
            "description": "获取 显示 Calendar 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 275,
            "description": "获取 Calendar 外观的 选择器",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 281,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "CalendarInstance"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 289,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "CalendarInstance"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 296,
            "description": "用户操作日期控件时响应改变",
            "itemtype": "method",
            "name": "updateLayout",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 305,
            "description": "切换到不同日期控件源时, 更新对应的控件源",
            "itemtype": "method",
            "name": "updateSelector",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 316,
            "description": "用户改变年份时, 更新到对应的年份",
            "itemtype": "method",
            "name": "updateYear",
            "params": [
                {
                    "name": "_offset",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 327,
            "description": "用户改变月份时, 更新到对应的月份",
            "itemtype": "method",
            "name": "updateMonth",
            "params": [
                {
                    "name": "_offset",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 338,
            "description": "把选中的值赋给控件源\n<br />用户点击日期/确定按钮",
            "itemtype": "method",
            "name": "updateSelected",
            "params": [
                {
                    "name": "_userSelectedItem",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 350,
            "description": "显示日历外观到对应的控件源",
            "itemtype": "method",
            "name": "updatePosition",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 359,
            "description": "清除控件源内容",
            "itemtype": "method",
            "name": "clear",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 370,
            "description": "用户点击取消按钮时隐藏日历外观",
            "itemtype": "method",
            "name": "cancel",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 380,
            "description": "返回日历外观是否可见",
            "itemtype": "method",
            "name": "visible",
            "return": {
                "description": "bool"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 394,
            "description": "获取控件源的初始日期对象",
            "itemtype": "method",
            "name": "defaultDate",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 404,
            "description": "获取或设置 Calendar 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Calendar instance"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 420,
            "description": "保存所有类型的 Calendar 日期实例 \n<br />目前有 date, week, month, season 四种类型的实例\n<br />每种类型都是单例模式",
            "prototype": "_ins",
            "type": "object",
            "default": "empty",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 431,
            "description": "获取控件源的实例类型\n<br />目前有 date, week, month, season 四种类型的实例",
            "itemtype": "method",
            "name": "type",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 457,
            "description": "判断选择器是否为日历组件的对象",
            "itemtype": "method",
            "name": "isCalendar",
            "static": 1,
            "params": [
                {
                    "name": "_selector!~YUIDOC_LINE~!return",
                    "description": "bool",
                    "type": "Selector"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 491,
            "description": "请使用 isCalendar, 这个方法是为了向后兼容",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 495,
            "description": "弹出日期选择框",
            "itemtype": "method",
            "name": "pickDate",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "需要显示日期选择框的input[text]",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n           <dl>\n               <dd>\n                   <input type=\"text\" name=\"date6\" class=\"manualPickDate\" value=\"20110201\" />\n                   manual JC.Calendar.pickDate\n               </dd>\n               <dd>\n                   <input type=\"text\" name=\"date7\" class=\"manualPickDate\" />\n                   manual JC.Calendar.pickDate\n               </dd>\n           </dl>\n           <script>\n               $(document).delegate('input.manualPickDate', 'focus', function($evt){\n               JC.Calendar.pickDate( this );\n               });\n           </script>"
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 533,
            "description": "设置是否在 DOM 加载完毕后, 自动初始化所有日期控件",
            "itemtype": "property",
            "name": "autoInit",
            "default": "true",
            "type": "{bool}",
            "static": "<script>JC.Calendar.autoInit = true;</script>",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 542,
            "description": "设置默认显示的年份数, 该数为前后各多少年 默认为前后各10年",
            "itemtype": "property",
            "name": "defaultDateSpan",
            "type": "{int}",
            "default": "20",
            "static": "<script>JC.Calendar.defaultDateSpan = 20;</script>",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 551,
            "description": "最后一个显示日历组件的文本框",
            "itemtype": "property",
            "name": "lastIpt",
            "type": "selector",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 558,
            "description": "自定义日历组件模板\n<p>默认模板为_logic.tpl</p>\n<p>如果用户显示定义JC.Calendar.tpl的话, 将采用用户的模板</p>",
            "itemtype": "property",
            "name": "tpl",
            "type": "{string}",
            "default": "empty",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 568,
            "description": "初始化外观后的回调函数",
            "itemtype": "property",
            "name": "layoutInitedCallback",
            "type": "function",
            "static": 1,
            "default": "null",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 576,
            "description": "显示为可见时的回调",
            "itemtype": "property",
            "name": "layoutShowCallback",
            "type": "function",
            "static": 1,
            "default": "null",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 584,
            "description": "日历隐藏后的回调函数",
            "itemtype": "property",
            "name": "layoutHideCallback",
            "type": "function",
            "static": 1,
            "default": "null",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 592,
            "description": "DOM 点击的过滤函数\n<br />默认 dom 点击时, 判断事件源不为 input[datatype=date|daterange] 会隐藏 Calendar\n<br /> 通过该回调可自定义过滤, 返回 false 不执行隐藏操作",
            "itemtype": "property",
            "name": "domClickFilter",
            "type": "function",
            "static": 1,
            "default": "null",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 602,
            "description": "隐藏日历组件",
            "itemtype": "method",
            "name": "hide",
            "static": 1,
            "example": [
                "\n           <script>JC.Calendar.hide();</script>"
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 619,
            "description": "获取初始日期对象\n<p style=\"bold\">这个方法将要废除, 请使用 instance.defaultDate()</p>",
            "itemtype": "method",
            "name": "getDate",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "显示日历组件的input\nreturn   { date: date, minvalue: date|null, maxvalue: date|null, enddate: date|null }",
                    "type": "Selector"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 631,
            "description": "每周的中文对应数字",
            "itemtype": "property",
            "name": "cnWeek",
            "type": "string",
            "static": 1,
            "default": "日一二三四五六",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 639,
            "description": "100以内的中文对应数字",
            "itemtype": "property",
            "name": "cnUnit",
            "type": "string",
            "static": 1,
            "default": "十一二三四五六七八九",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 647,
            "description": "转换 100 以内的数字为中文数字",
            "itemtype": "method",
            "name": "getCnNum",
            "static": 1,
            "params": [
                {
                    "name": "_num",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 661,
            "description": "设置日历组件的显示位置",
            "itemtype": "method",
            "name": "position",
            "static": 1,
            "params": [
                {
                    "name": "_ipt",
                    "description": "需要显示日历组件的文本框",
                    "type": "Selector"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 672,
            "description": "这个方法后续版本不再使用, 请使用 Calendar.position",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 676,
            "description": "初始化日历组件的触发按钮",
            "itemtype": "method",
            "name": "_logic.initTrigger",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 743,
            "description": "克隆 Calendar 默认 Model, View 的原型属性",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "_model",
                    "description": "",
                    "type": "NewModel"
                },
                {
                    "name": "_view",
                    "description": "",
                    "type": "NewView"
                }
            ],
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1366,
            "description": "捕获用户更改年份 \n<p>监听 年份下拉框</p>",
            "itemtype": "event",
            "name": "year change",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1376,
            "description": "捕获用户更改年份 \n<p>监听 下一年按钮</p>",
            "itemtype": "event",
            "name": "next year",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1386,
            "description": "捕获用户更改年份 \n<p>监听 上一年按钮</p>",
            "itemtype": "event",
            "name": "previous year",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1396,
            "description": "增加或者减少一年\n<p>监听 年份map</p>",
            "itemtype": "event",
            "name": "year map click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1410,
            "description": "增加或者减少一个月\n<p>监听 月份map</p>",
            "itemtype": "event",
            "name": "month map click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1424,
            "description": "捕获用户更改月份 \n<p>监听 下一月按钮</p>",
            "itemtype": "event",
            "name": "next year",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1434,
            "description": "捕获用户更改月份\n<p>监听 上一月按钮</p>",
            "itemtype": "event",
            "name": "previous year",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1445,
            "description": "日期点击事件",
            "itemtype": "event",
            "name": "date click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1458,
            "description": "选择当前日期\n<p>监听确定按钮</p>",
            "itemtype": "event",
            "name": "confirm click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1468,
            "description": "清除文本框内容\n<p>监听 清空按钮</p>",
            "itemtype": "event",
            "name": "clear click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1478,
            "description": "取消日历组件, 相当于隐藏\n<p>监听 取消按钮</p>",
            "itemtype": "event",
            "name": "cancel click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1488,
            "description": "日历组件按钮点击事件",
            "itemtype": "event",
            "name": "calendar button click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1503,
            "description": "日历组件点击事件, 阻止冒泡, 防止被 document click事件隐藏",
            "itemtype": "event",
            "name": "UXCCalendar click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1512,
            "description": "DOM 加载完毕后, 初始化日历组件相关事件",
            "itemtype": "event",
            "name": "dom ready",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1518,
            "description": "延迟200毫秒初始化页面的所有日历控件\n之所以要延迟是可以让用户自己设置是否需要自动初始化",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1526,
            "description": "监听窗口滚动和改变大小, 实时变更日历组件显示位置",
            "itemtype": "event",
            "name": "window scroll, window resize",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1535,
            "description": "dom 点击时, 检查事件源是否为日历组件对象, 如果不是则会隐藏日历组件",
            "itemtype": "event",
            "name": "dom click",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1564,
            "description": "日历组件文本框获得焦点",
            "itemtype": "event",
            "name": "input focus",
            "access": "private",
            "tagname": "",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1586,
            "description": "自定义周弹框的模板HTML",
            "itemtype": "property",
            "name": "weekTpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1595,
            "description": "自定义周日历每周的起始日期 \n<br /> 0 - 6, 0=周日, 1=周一",
            "itemtype": "property",
            "name": "weekDayOffset",
            "static": 1,
            "type": "int",
            "default": "1",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1794,
            "description": "取一年中所有的星期, 及其开始结束日期",
            "itemtype": "method",
            "name": "weekOfYear",
            "static": 1,
            "params": [
                {
                    "name": "_year",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_dayOffset",
                    "description": "每周的默认开始为周几, 默认0(周日)",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Array"
            },
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1806,
            "description": "元旦开始的第一个星期一开始的一周为政治经济上的第一周",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 1831,
            "description": "自定义月份弹框的模板HTML",
            "itemtype": "property",
            "name": "monthTpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 2050,
            "description": "自定义周弹框的模板HTML",
            "itemtype": "property",
            "name": "seasonTpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 2226,
            "description": "多选日期弹框的模板HTML",
            "itemtype": "property",
            "name": "monthdayTpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 2235,
            "description": "多先日期弹框标题末尾的附加字样",
            "itemtype": "property",
            "name": "monthdayHeadAppendText",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Calendar/Calendar.js",
            "line": 2273,
            "description": "如果 atd 为空, 那么是 全选按钮触发的事件",
            "class": "JC.Calendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/Fixed/Fixed.js",
            "line": 53,
            "description": "显示 Fixed",
            "itemtype": "method",
            "name": "show",
            "return": {
                "description": "FixedIns"
            },
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../comps/Fixed/Fixed.js",
            "line": 59,
            "description": "隐藏 Fixed",
            "itemtype": "method",
            "name": "hide",
            "return": {
                "description": "FixedIns"
            },
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../comps/Fixed/Fixed.js",
            "line": 65,
            "description": "获取 Fixed 外观的 选择器",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../comps/Fixed/Fixed.js",
            "line": 71,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "FixedIns"
            },
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../comps/Fixed/Fixed.js",
            "line": 79,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "FixedIns"
            },
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../comps/Fixed/Fixed.js",
            "line": 87,
            "description": "获取或设置 Fixed 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Fixed instance"
            },
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../comps/Fixed/Fixed.js",
            "line": 103,
            "description": "页面加载完毕时, 是否自动初始化\n<br /> 识别 class=js_autoFixed",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../comps/Fixed/Fixed.js",
            "line": 112,
            "description": "滚动的持续时间( 时间运动 )",
            "itemtype": "property",
            "name": "durationms",
            "type": "int",
            "default": "300",
            "static": 1,
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../comps/Fixed/Fixed.js",
            "line": 120,
            "description": "每次滚动的时间间隔( 时间运动 )",
            "itemtype": "property",
            "name": "stepms",
            "type": "int",
            "default": "3",
            "static": 1,
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../comps/Fixed/Fixed.js",
            "line": 128,
            "description": "设置或者清除 interval\n<br />避免多个 interval 造成的干扰",
            "itemtype": "method",
            "name": "interval",
            "params": [
                {
                    "name": "_interval",
                    "description": "",
                    "type": "Interval"
                }
            ],
            "static": 1,
            "class": "JC.Fixed",
            "namespace": "JC"
        },
        {
            "file": "../comps/Form/Form.js",
            "line": 16,
            "description": "禁用按钮一定时间, 默认为1秒",
            "itemtype": "method",
            "name": "disableButton",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "要禁用button的选择器",
                    "type": "Selector"
                },
                {
                    "name": "_durationMs",
                    "description": "禁用多少时间, 单位毫秒, 默认1秒",
                    "type": "Int"
                }
            ],
            "class": "JC.Form",
            "namespace": "JC"
        },
        {
            "file": "../comps/Form/Form.js",
            "line": 34,
            "description": "select 级联下拉框无限联动\n<br />这个方法已经摘取出来, 单独成为一个类.\n<br />详情请见: <a href=\"../../docs_api/classes/JC.AutoSelect.html\">JC.AutoSelect.html</a>\n<br />目前摘出去的类与之前的逻辑保持向后兼容, 但在不久的将来将会清除这个方法",
            "itemtype": "method",
            "name": "initAutoSelect",
            "static": 1,
            "class": "JC.Form",
            "namespace": "JC"
        },
        {
            "file": "../comps/Form/Form.js",
            "line": 43,
            "description": "全选/反选\n<br />这个方法已经摘取出来, 单独成为一个类.\n<br />详情请见: <a href=\"../../docs_api/classes/JC.AutoChecked.html\">JC.AutoChecked.html</a>\n<br />目前摘出去的类与之前的逻辑保持向后兼容, 但在不久的将来将会清除这个方法",
            "itemtype": "method",
            "name": "initCheckAll",
            "static": 1,
            "class": "JC.Form",
            "namespace": "JC"
        },
        {
            "file": "../comps/Form/Form.js",
            "line": 57,
            "description": "表单自动填充 URL GET 参数\n<br />只要引用本脚本, DOM 加载完毕后, 页面上所有带 class js_autoFillUrlForm 的 form 都会自动初始化默认值\n<p><b>requires</b>: <a href='window.jQuery.html'>jQuery</a></p>\n<p><a href='https://github.com/openjavascript/jquerycomps' target='_blank'>JC Project Site</a>\n| <a href='http://jc.openjavascript.org/docs/docs_api/classes/JC.Form.html' target='_blank'>API docs</a>",
            "itemtype": "method",
            "name": "initAutoFill",
            "static": 1,
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 75 team",
            "date": "2013-06-13",
            "params": [
                {
                    "name": "_selector",
                    "description": "显示指定要初始化的区域, 默认为 document",
                    "type": "Selector|url string"
                },
                {
                    "name": "_url",
                    "description": "显示指定, 取初始化值的 URL, 默认为 location.href",
                    "type": "String"
                }
            ],
            "example": [
                "\n     JC.Form.initAutoFill( myCustomSelector, myUrl );"
            ],
            "class": "JC.Form",
            "namespace": "JC"
        },
        {
            "file": "../comps/Form/Form.js",
            "line": 149,
            "description": "自定义 URI decode 函数",
            "itemtype": "property",
            "name": "initAutoFill.decodeFunc",
            "static": 1,
            "type": "function",
            "default": "null",
            "class": "JC.Form",
            "namespace": "JC"
        },
        {
            "file": "../comps/Form/Form.js",
            "line": 165,
            "description": "判断下拉框的option里是否有给定的值",
            "itemtype": "method",
            "name": "initAutoFill.selectHasVal",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_select",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_val",
                    "description": "要查找的值",
                    "type": "String"
                }
            ],
            "class": "JC.Form",
            "namespace": "JC"
        },
        {
            "file": "../comps/Form/Form.js",
            "line": 192,
            "description": "文本框 值增减 应用\n<br />只要引用本脚本, 页面加载完毕时就会自动初始化 NumericStepper\n<br />所有带 class js_NStepperPlus, js_NStepperMinus 视为值加减按钮\n<br /><br />目标文本框可以添加一些HTML属性自己的规则, \n<br />nsminvalue=最小值(默认=0), nsmaxvalue=最大值(默认=100), nsstep=步长(默认=1), nsfixed=小数点位数(默认=0)\n<br />nschangecallback=值变改后的回调",
            "itemtype": "method",
            "name": "initNumericStepper",
            "static": 1,
            "version": "dev 0.1",
            "author": "qiushaowei   <suches@btbtd.org> | 360 75 Team",
            "date": "2013-07-05",
            "params": [
                {
                    "name": "_selector",
                    "description": "要初始化的全选反选的父级节点",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n            <dl class=\"def example1\">\n               <dt>JC.Form.initNumericStepper 默认值 0 - 100, step 1, fixed 0</dt>\n               <dd>\n                   <button class=\"NS_icon NS_minus js_NStepperMinus\" nstarget=\"input.js_ipt1\" ></button>\n                   <input type=\"text\" value=\"0\" class=\"js_ipt1\" />\n                   <button class=\"NS_icon NS_plus js_NStepperPlus\" nstarget=\"input.js_ipt1\" ></button>\n               </dd>\n           </dl>\n\n           <dl class=\"def example1\">\n               <dt>JC.Form.initNumericStepper -10 ~ 10, step 2, fixed 2</dt>\n               <dd>\n                   <button class=\"NS_icon NS_minus js_NStepperMinus\" nstarget=\"input.js_ipt2\" ></button>\n                   <input type=\"text\" value=\"4\" class=\"js_ipt2\" nsminvalue=\"-10\" nsmaxvalue=\"10\" nsstep=\"2\" nsfixed=\"2\" />\n                   <button class=\"NS_icon NS_plus js_NStepperPlus\" nstarget=\"input.js_ipt2\" ></button>\n               </dd>\n           </dl>"
            ],
            "class": "JC.Form",
            "namespace": "JC"
        },
        {
            "file": "../comps/Form/Form.js",
            "line": 251,
            "description": "文本框 值增减 值变改后的回调\n<br />这个是定义全局的回调函数, 要定义局部回调请在目标文本框上添加 nschangecallback=回调 HTML属性",
            "itemtype": "property",
            "name": "initNumericStepper.onchange",
            "type": "function",
            "static": 1,
            "class": "JC.Form",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 46,
            "description": "LunarCalendar 的数据模型对象",
            "itemtype": "property",
            "name": "_model",
            "type": "JC.LunarCalendar.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 53,
            "description": "LunarCalendar 的视图对像",
            "itemtype": "property",
            "name": "_view",
            "type": "JC.LunarCalendar.View",
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 63,
            "description": "自定义日历组件模板\n<p>默认模板为JC.LunarCalendar.Model#tpl</p>\n<p>如果用户显示定义JC.LunarCalendar.tpl的话, 将采用用户的模板</p>",
            "itemtype": "property",
            "name": "tpl",
            "type": "{string}",
            "default": "empty",
            "static": 1,
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 73,
            "description": "设置是否在 dom 加载完毕后, 自动初始化所有日期控件",
            "itemtype": "property",
            "name": "autoinit",
            "default": "true",
            "type": "{bool}",
            "static": "<script>JC.LunarCalendar.autoInit = true;</script>",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 82,
            "description": "设置默认显示的年份数, 该数为前后各多少年 默认为前后各10年",
            "itemtype": "property",
            "name": "defaultYearSpan",
            "type": "{int}",
            "default": "20",
            "static": "<script>JC.LunarCalendar.defaultYearSpan = 20;</script>",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 91,
            "description": "从所有的LunarCalendar取得当前选中的日期\n<br /> 如果用户没有显式选中某个日期, 将尝试获取当前日期, 如果两者都没有返回undefined",
            "itemtype": "method",
            "name": "getSelectedItemGlobal",
            "static": 1,
            "return": {
                "description": "如果能获取到选中的日期将返回 { date: 当天日期, item: 选中的a, td: 选中的td }",
                "type": "Object|undefined"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 115,
            "description": "从所有的LunarCalendar取得当前选中日期的日期对象\n<br /> 如果用户没有显式选中某个日期, 将尝试获取当前日期, 如果两者都没有返回undefined",
            "itemtype": "method",
            "name": "getSelectedDateGlobal",
            "static": 1,
            "return": {
                "description": "",
                "type": "Date|undefined"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 128,
            "description": "从时间截获取选择器对象",
            "itemtype": "method",
            "name": "getItemByTimestamp",
            "static": 1,
            "params": [
                {
                    "name": "_tm",
                    "description": "时间截, 如果时间截少于13位, 将自动补0到13位, ps: php时间截为10位",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "td selector, 如果 td class unable 不可选, 将忽略",
                "type": "Selector|undefined"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 151,
            "description": "添加或者清除工作日样式",
            "itemtype": "method",
            "name": "workday",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "要设置为工作日状态的 td",
                    "type": "Selector"
                },
                {
                    "name": "_customSet",
                    "description": "如果 _customSet 为 undefined, 将设为工作日. \n                                     如果 _customSet 非 undefined, 那么根据真假值判断清除工作日/添加工作日",
                    "type": "Any"
                }
            ],
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 167,
            "description": "判断 td 是否为工作日状态",
            "itemtype": "method",
            "name": "isWorkday",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 179,
            "description": "添加或者清除假日样式",
            "itemtype": "method",
            "name": "holiday",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "要设置为假日状态的 td",
                    "type": "Selector"
                },
                {
                    "name": "_customSet",
                    "description": "如果 _customSet 为 undefined, 将设为假日. \n                                     如果 _customSet 非 undefined, 那么根据真假值判断清除假日/添加假日",
                    "type": "Any"
                }
            ],
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 195,
            "description": "判断 td 是否为假日状态",
            "itemtype": "method",
            "name": "isHoliday",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 207,
            "description": "添加或者清除注释",
            "itemtype": "method",
            "name": "comment",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "要设置注释的 td",
                    "type": "Selector"
                },
                {
                    "name": "_customSet",
                    "description": "如果 _customSet 为 undefined, 将清除注释. \n                                     如果 _customSet 为 string, 将添加注释",
                    "type": "String|bool"
                }
            ],
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 234,
            "description": "判断 td 是否为注释状态",
            "itemtype": "method",
            "name": "isComment",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 246,
            "description": "返回 td 的注释",
            "itemtype": "method",
            "name": "getComment",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 261,
            "description": "用于分隔默认title和注释的分隔符",
            "itemtype": "property",
            "name": "commentSeparator",
            "type": "string",
            "default": "==========comment==========",
            "static": 1,
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 269,
            "description": "把注释添加到 a title 里",
            "itemtype": "method",
            "name": "commentTitle",
            "static": 1,
            "params": [
                {
                    "name": "_td",
                    "description": "要设置注释的 a 父容器 td",
                    "type": "Selector"
                },
                {
                    "name": "_title",
                    "description": "如果 _title 为真, 将把注释添加到a title里. \n                                     如果 _title 为假, 将从 a title 里删除注释",
                    "type": "String|undefined"
                }
            ],
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 295,
            "description": "从JSON数据更新日历状态( 工作日, 休息日, 注释 )\n<br /> 注意, 该方法更新页面上所有的 LunarCalendar",
            "itemtype": "method",
            "name": "updateStatus",
            "static": 1,
            "params": [
                {
                    "name": "_data",
                    "description": "{ phpTimestamp:{ dayaction: 0|1|2, comment: string}, ... }\n<pre>      \n         dayaction: \n         0: delete workday/holiday\n         1: workday\n         2: holiday\n</pre>",
                    "type": "Object"
                }
            ],
            "example": [
                "\n     LunarCalendar.updateStatus(  {\n                                           \"1369843200\": {\n                                               \"dayaction\": 2,\n                                               \"comment\": \"dfdfgdsfgsdfgsdg<b></b>'\\\"'asdf\\\"\\\"'sdf\"\n                                           },\n                                           \"1370966400\": {\n                                               \"dayaction\": 0,\n                                               \"comment\": \"asdfasdfsa\"\n                                           },\n                                           \"1371139200\": {\n                                               \"dayaction\": 1\n                                           },\n                                           \"1371225600\": {\n                                               \"dayaction\": 0,\n                                               \"comment\": \"dddd\"\n                                           }\n                                       });"
            ],
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 382,
            "description": "LunarCalendar 内部初始化",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 393,
            "description": "更新日历视图为自定义的日期",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "_date",
                    "description": "更新日历视图为 _date 所在日期的月份",
                    "type": "Date"
                }
            ],
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 403,
            "description": "显示下一个月的日期",
            "itemtype": "method",
            "name": "nextMonth",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 413,
            "description": "显示上一个月的日期",
            "itemtype": "method",
            "name": "preMonth",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 423,
            "description": "显示下一年的日期",
            "itemtype": "method",
            "name": "nextYear",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 433,
            "description": "显示上一年的日期",
            "itemtype": "method",
            "name": "preYear",
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 443,
            "description": "获取默认时间对象",
            "itemtype": "method",
            "name": "getDate",
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 449,
            "description": "获取所有的默认时间对象",
            "itemtype": "method",
            "name": "getAllDate",
            "return": {
                "description": "{ date: 默认时间, minvalue: 有效最小时间\n                       , maxvalue: 有效最大时间, beginDate: 日历的起始时间, endDate: 日历的结束时间 }",
                "type": "Object"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 456,
            "description": "获取当前选中的日期, 如果用户没有显式选择, 将查找当前日期, 如果两者都没有的话返回undefined",
            "itemtype": "method",
            "name": "getSelectedDate",
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 479,
            "description": "获取初始化日历的选择器对象",
            "itemtype": "method",
            "name": "getContainer",
            "return": {
                "description": "selector"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 485,
            "description": "获取日历的主选择器对象",
            "itemtype": "method",
            "name": "getLayout",
            "return": {
                "description": "selector"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 491,
            "description": "判断日历是否隐藏操作控件",
            "itemtype": "method",
            "name": "isHideControl",
            "return": {
                "description": "bool"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 506,
            "description": "LunarCalendar model 对象",
            "itemtype": "property",
            "name": "_model",
            "type": "JC.LunarCalendar.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 513,
            "description": "LunarCalendar 的主容器",
            "itemtype": "property",
            "name": "layout",
            "type": "selector",
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 524,
            "description": "初始化 View",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 536,
            "description": "初始化日历外观",
            "itemtype": "method",
            "name": "initLayout",
            "params": [
                {
                    "name": "_date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 551,
            "description": "初始化年份",
            "itemtype": "method",
            "name": "initYear",
            "params": [
                {
                    "name": "_dateObj",
                    "description": "",
                    "type": "DateObject"
                }
            ],
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 560,
            "description": "初始化月份",
            "itemtype": "method",
            "name": "initMonth",
            "params": [
                {
                    "name": "_dateObj",
                    "description": "",
                    "type": "DateObject"
                }
            ],
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 569,
            "description": "初始化月份的所有日期",
            "itemtype": "method",
            "name": "_logic.initMonthDate",
            "params": [
                {
                    "name": "_dateObj",
                    "description": "保存所有相关日期的对象",
                    "type": "DateObjects"
                }
            ],
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 670,
            "description": "把具体的公历和农历日期写进a标签的title里",
            "itemtype": "method",
            "name": "addTitle",
            "params": [
                {
                    "name": "_td",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 680,
            "description": "检查是否要隐藏操作控件",
            "itemtype": "method",
            "name": "hideControl",
            "class": "JC.LunarCalendar.View",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 701,
            "description": "LunarCalendar 所要显示的selector",
            "itemtype": "property",
            "name": "container",
            "type": "selector",
            "default": "document.body",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 708,
            "description": "初始化时的时期",
            "itemtype": "property",
            "name": "date",
            "type": "date",
            "default": "new Date()",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 715,
            "description": "日历默认模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "JC.LunarCalendar._deftpl",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 722,
            "description": "显示日历时所需要的所有日期对象",
            "itemtype": "property",
            "name": "dateObj",
            "type": "Object",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 728,
            "description": "a 标签 title 的临时存储对象",
            "itemtype": "property",
            "name": "_titleObj",
            "type": "Object",
            "default": "{}",
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 758,
            "description": "获取初始日期对象",
            "itemtype": "method",
            "name": "getDate",
            "params": [
                {
                    "name": "_selector",
                    "description": "显示日历组件的input",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 779,
            "description": "把日期赋值给文本框",
            "itemtype": "method",
            "name": "setDate",
            "params": [
                {
                    "name": "_timestamp",
                    "description": "日期对象的时间戳",
                    "type": "Int"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 789,
            "description": "给文本框赋值, 日期为控件的当前日期",
            "itemtype": "method",
            "name": "setSelectedDate",
            "return": {
                "description": "0/1",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 805,
            "description": "监听上一年按钮",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 814,
            "description": "监听上一月按钮",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 823,
            "description": "监听下一月按钮",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 832,
            "description": "监听下一年按钮",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 841,
            "description": "监听年份按钮, 是否要显示年份列表",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 863,
            "description": "监听月份按钮, 是否要显示月份列表",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 877,
            "description": "监听年份列表选择状态",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 887,
            "description": "监听月份列表选择状态",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 897,
            "description": "监听日期单元格点击事件",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 919,
            "description": "监听body点击事件, 点击时隐藏日历控件的年份和月份列表",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 925,
            "description": "DOM 加载完毕后, 初始化日历组件",
            "itemtype": "event",
            "name": "dom ready",
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 939,
            "description": "LunarCalendar 日历默认模板",
            "itemtype": "property",
            "name": "_deftpl",
            "type": "string",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar.Model",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 1020,
            "description": "返回农历和国历的所在日期的所有节日\n<br /> 假日条目数据样例: { 'name': '春节', 'fullname': '春节', 'priority': 8 }\n<br /> 返回数据格式: { 'dayName': 农历日期/节日名, 'festivals': 节日数组, 'isHoliday': 是否为假日 }",
            "itemtype": "method",
            "name": "getFestivals",
            "static": 1,
            "params": [
                {
                    "name": "_lunarDate",
                    "description": "农历日期对象, 由JC.LunarCalendar.gregorianToLunar 获取",
                    "type": "Object"
                },
                {
                    "name": "_greDate",
                    "description": "日期对象",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Object"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 1212,
            "description": "为数字添加前置0",
            "itemtype": "method",
            "name": "JC.LunarCalendar.getFestival.intPad",
            "params": [
                {
                    "name": "_n",
                    "description": "需要添加前置0的数字",
                    "type": "Int"
                },
                {
                    "name": "_len",
                    "description": "需要添加_len个0, 默认为2",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "JC.LunarCalendar",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/LunarCalendar/LunarCalendar.js",
            "line": 1231,
            "description": "从公历日期获得农历日期\n<br /> 返回的数据格式\n<pre>\n       {\n           shengxiao: ''   //生肖\n           , ganzhi: ''    //干支\n           , yue: ''       //月份\n           , ri: ''        //日\n           , shi: ''       //时\n           , year: ''      //农历数字年\n           , month: ''     //农历数字月\n           , day: ''       //农历数字天\n           , hour: ''      //农历数字时\n       };\n</pre>",
            "itemtype": "method",
            "name": "gregorianToLunar",
            "static": 1,
            "params": [
                {
                    "name": "_date",
                    "description": "要获取农历日期的时间对象",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Object"
            },
            "class": "JC.LunarCalendar",
            "namespace": "JC.LunarCalendar"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 118,
            "description": "存放数据的model层, see <a href='JC.Panel.Model.html'>Panel.Model</a>",
            "itemtype": "property",
            "name": "_model",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 124,
            "description": "控制视图的view层, see <a href='JC.Panel.View.html'>Panel.View</a>",
            "itemtype": "property",
            "name": "_view",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 133,
            "description": "从 selector 获取 Panel 的实例\n<br /><b>如果从DOM初始化, 不进行判断的话, 会重复初始化多次</b>",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Panel instance"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 148,
            "description": "显示Panel时, 是否 focus 到 按钮上\nfocusButton",
            "itemtype": "property",
            "name": "focusButton",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 157,
            "description": "页面点击时, 是否自动关闭 Panel",
            "itemtype": "property",
            "name": "clickClose",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 165,
            "description": "自动关闭的时间间隔, 单位毫秒\n<br />调用 ins.autoClose() 时生效",
            "itemtype": "property",
            "name": "autoCloseMs",
            "type": "int",
            "default": "2000",
            "static": 1,
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 174,
            "description": "修正弹框的默认显示宽度",
            "itemtype": "method",
            "name": "_fixWidth",
            "params": [
                {
                    "name": "_msg",
                    "description": "查显示的文本",
                    "type": "String"
                },
                {
                    "name": "_panel",
                    "description": "",
                    "type": "JC.Panel"
                },
                {
                    "name": "_minWidth",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_maxWidth",
                    "description": "",
                    "type": "Int"
                }
            ],
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 197,
            "description": "获取 显示的 BUTTON",
            "itemtype": "method",
            "name": "_getButton",
            "params": [
                {
                    "name": "_type",
                    "description": "0: 没有 BUTTON, 1: confirm, 2: confirm + cancel",
                    "type": "Int"
                }
            ],
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 221,
            "description": "初始化Panel",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 231,
            "description": "初始化Panel 默认事件",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 254,
            "description": "为Panel绑定事件\n<br /> 内置事件类型有 show, hide, close, center, confirm, cancel\n, beforeshow, beforehide, beforeclose, beforecenter\n<br /> 用户可通过 HTML eventtype 属性自定义事件类型",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "_evtName",
                    "description": "要绑定的事件名",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "要绑定的事件回调函数",
                    "type": "Function"
                }
            ],
            "example": [
                "\n               //绑定内置事件\n               <button type=\"button\" eventtype=\"close\">text</button>\n               <script>\n               panelInstace.on( 'close', function( _evt, _panel ){ do something } );\n               </script>\n\n               //绑定自定义事件\n               <button type=\"button\" eventtype=\"userevent\">text</button>\n               <script>\n               panelInstace.on( 'userevent', function( _evt, _pan:el ){ do something } );\n               </script>"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 280,
            "description": "显示 Panel\n<br /> Panel初始后, 默认是隐藏状态, 显示 Panel 需要显式调用 show 方法",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "_position",
                    "description": "指定 panel 要显示的位置, \n <br />如果 _position 为 int:  0, 表示屏幕居中显示\n <br />如果 _position 为 selector:  Paenl 的显示位置将基于 _position 的上下左右",
                    "type": "Int|selector"
                }
            ],
            "example": [
                "\n     panelInstace.show();            //默认显示\n     panelInstace.show( 0 );         //居中显示\n     panelInstace.show( _selector ); //位于 _selector 的上下左右"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 333,
            "description": "设置Panel的显示位置基于 _src 的左右上下",
            "itemtype": "method",
            "name": "positionWith",
            "params": [
                {
                    "name": "_src",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_selectorDiretion",
                    "description": "如果 _src 为 selector, _selectorDiretion 可以指定 top, 显示在上方",
                    "type": "String"
                }
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 345,
            "description": "隐藏 Panel\n<br /> 隐藏 Panel 设置 css display:none, 不会从DOM 删除 Panel",
            "itemtype": "method",
            "name": "hide",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 356,
            "description": "关闭 Panel\n<br /> <b>关闭 Panel 是直接从 DOM 中删除 Panel</b>",
            "itemtype": "method",
            "name": "close",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 368,
            "description": "判断点击页面时, 是否自动关闭 Panel",
            "itemtype": "method",
            "name": "isClickClose",
            "return": {
                "description": "bool"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 377,
            "description": "点击页面时, 添加自动隐藏功能",
            "itemtype": "method",
            "name": "clickClose",
            "params": [
                {
                    "name": "_removeAutoClose",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 388,
            "description": "clickClose 的别名\n<br />这个方法的存在是为了向后兼容, 请使用 clickClose",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 397,
            "description": "添加自动关闭功能",
            "itemtype": "method",
            "name": "autoClose",
            "params": [
                {
                    "name": "_removeAutoClose",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 423,
            "description": "focus 到 button\n<br />优先查找 input[eventtype=confirm], input[type=submit], button[eventtype=confirm], button[type=submit]\n<br />input[eventtype=cancel], input[type=buton], button[eventtype=cancel], button[type=button]",
            "itemtype": "method",
            "name": "focusButton",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 430,
            "description": "从DOM清除Panel\n<br /> <b>close 方法清除 Panel可以被用户阻止, 该方法不会被用户阻止</b>",
            "itemtype": "method",
            "name": "dispose",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 441,
            "description": "把 Panel 位置设为屏幕居中",
            "itemtype": "method",
            "name": "center",
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 452,
            "description": "返回 Panel 的 jquery dom选择器对象\n<br />这个方法以后将会清除, 请使用 layout 方法",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "",
                "type": "Selector"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 459,
            "description": "返回 Panel 的 jquery dom选择器对象",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "",
                "type": "Selector"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 465,
            "description": "从 Panel 选择器中查找内容\n<br />添加这个方法是为了方便jquery 使用者的习惯",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 473,
            "description": "触发 Panel 已绑定的事件\n<br />用户可以使用该方法主动触发绑定的事件",
            "itemtype": "method",
            "name": "trigger",
            "params": [
                {
                    "name": "_evtName",
                    "description": "要触发的事件名, 必填参数",
                    "type": "String"
                },
                {
                    "name": "_srcElement",
                    "description": "触发事件的源对象, 可选参数",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n     panelInstace.trigger('close');\n     panelInstace.trigger('userevent', sourceElement);"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 509,
            "description": "获取或者设置 Panel Header 的HTML内容\n<br />如果 Panel默认没有 Header的话, 使用该方法 _html 非空可动态创建一个Header",
            "itemtype": "method",
            "name": "header",
            "params": [
                {
                    "name": "_html",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "header 的HTML内容",
                "type": "String"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 523,
            "description": "获取或者设置 Panel body 的HTML内容",
            "itemtype": "method",
            "name": "body",
            "params": [
                {
                    "name": "_html",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "body 的HTML内容",
                "type": "String"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 536,
            "description": "获取或者设置 Panel footer 的HTML内容\n<br />如果 Panel默认没有 footer的话, 使用该方法 _html 非空可动态创建一个footer",
            "itemtype": "method",
            "name": "footer",
            "params": [
                {
                    "name": "_html",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "footer 的HTML内容",
                "type": "String"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 550,
            "description": "获取或者设置 Panel 的HTML内容",
            "itemtype": "method",
            "name": "panel",
            "params": [
                {
                    "name": "_html",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "panel 的HTML内容",
                "type": "String"
            },
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 564,
            "description": "Panel 显示前会触发的事件<br/>\n这个事件在用户调用 _panelInstance.show() 时触发",
            "itemtype": "event",
            "name": "beforeshow",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'beforeshow', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 572,
            "description": "显示Panel时会触发的事件",
            "itemtype": "event",
            "name": "show",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'show', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 579,
            "description": "Panel 隐藏前会触发的事件<br/>\n<br />这个事件在用户调用 _panelInstance.hide() 时触发",
            "itemtype": "event",
            "name": "beforehide",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'beforehide', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 587,
            "description": "Panel 隐藏时会触发的事件<br/>\n<br />这个事件在用户调用 _panelInstance.hide() 时触发",
            "itemtype": "event",
            "name": "hide",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'hide', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 595,
            "description": "Panel 关闭前会触发的事件<br/>\n这个事件在用户调用 _panelInstance.close() 时触发",
            "itemtype": "event",
            "name": "beforeclose",
            "type": "function",
            "example": [
                "     \n     <button type=\"button\" eventtype=\"close\">text</button>\n     <script>\n     panelInstace.on( 'beforeclose', function( _evt, _panelInstance ){ do something });\n     </script>"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 606,
            "description": "关闭事件",
            "itemtype": "event",
            "name": "close",
            "type": "function",
            "example": [
                "     \n     <button type=\"button\" eventtype=\"close\">text</button>\n     <script>\n     panelInstace.on( 'close', function( _evt, _panelInstance ){ do something });\n     </script>"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 616,
            "description": "Panel 居中显示前会触发的事件<br/>\n这个事件在用户调用 _panelInstance.center() 时触发",
            "itemtype": "event",
            "name": "beforecenter",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'beforecenter', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 624,
            "description": "Panel 居中后会触发的事件",
            "itemtype": "event",
            "name": "center",
            "type": "function",
            "example": [
                "     \n     panelInstace.on( 'center', function( _evt, _panelInstance ){ do something });"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 631,
            "description": "Panel 点击确认按钮触发的事件",
            "itemtype": "event",
            "name": "confirm",
            "type": "function",
            "example": [
                "     \n     <button type=\"button\" eventtype=\"confirm\">text</button>\n     <script>\n     panelInstace.on( 'confirm', function( _evt, _panelInstance ){ do something });\n     </script>"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 641,
            "description": "Panel 点击确取消按钮触发的事件",
            "itemtype": "event",
            "name": "cancel",
            "type": "function",
            "example": [
                "     \n     <button type=\"button\" eventtype=\"cancel\">text</button>\n     <script>\n     panelInstace.on( 'cancel', function( _evt, _panelInstance ){ do something });\n     </script>"
            ],
            "class": "JC.Panel",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 664,
            "description": "panel 的 HTML 对象或者字符串\n<br /> 这是初始化时的原始数据",
            "itemtype": "property",
            "name": "selector",
            "type": "selector|string",
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 671,
            "description": "header 内容 \n<br /> 这是初始化时的原始数据",
            "itemtype": "property",
            "name": "headers",
            "type": "string",
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 678,
            "description": "body 内容\n<br /> 这是初始化时的原始数据",
            "itemtype": "property",
            "name": "bodys",
            "type": "string",
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 685,
            "description": "footers 内容\n<br /> 这是初始化时的原始数据",
            "itemtype": "property",
            "name": "footers",
            "type": "string",
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 692,
            "description": "panel 初始化后的 selector 对象",
            "itemtype": "property",
            "name": "panel",
            "type": "selector",
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 698,
            "description": "存储用户事件和默认事件的对象",
            "itemtype": "property",
            "name": "_events",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 709,
            "description": "Model 初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Model instance"
            },
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 735,
            "description": "添加事件方法",
            "itemtype": "method",
            "name": "addEvent",
            "params": [
                {
                    "name": "_evtName",
                    "description": "事件名",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "事件的回调函数",
                    "type": "Function"
                }
            ],
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 751,
            "description": "获取事件方法",
            "itemtype": "method",
            "name": "getEvent",
            "params": [
                {
                    "name": "_evtName",
                    "description": "事件名",
                    "type": "String"
                }
            ],
            "return": {
                "description": "某类事件类型的所有回调",
                "type": "Array"
            },
            "class": "JC.Panel.Model",
            "namespace": "JC.Panel"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 804,
            "description": "Panel的基础数据类, see <a href='JC.Panel.Model.html'>Panel.Model</a>",
            "itemtype": "property",
            "name": "_model",
            "type": "Panel.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel.View",
            "namespace": "JC.Panel"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 811,
            "description": "默认模板",
            "prototype": "_tpl",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel.View",
            "namespace": "JC.Panel"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 823,
            "description": "View 的初始方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel.View"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 847,
            "description": "设置Panel的显示位置基于 _src 的左右上下",
            "itemtype": "method",
            "name": "positionWith",
            "params": [
                {
                    "name": "_src",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.Panel.View"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 884,
            "description": "显示 Panel",
            "itemtype": "method",
            "name": "show",
            "class": "JC.Panel.View"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 893,
            "description": "focus button",
            "itemtype": "method",
            "name": "focus button",
            "class": "JC.Panel.View"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 904,
            "description": "隐藏 Panel",
            "itemtype": "method",
            "name": "hide",
            "class": "JC.Panel.View"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 912,
            "description": "关闭 Panel",
            "itemtype": "method",
            "name": "close",
            "class": "JC.Panel.View"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 921,
            "description": "获取 Panel 的 selector 对象",
            "itemtype": "method",
            "name": "getPanel",
            "return": {
                "description": "selector"
            },
            "class": "JC.Panel.View"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 933,
            "description": "获取或设置Panel的 header 内容, see <a href='JC.Panel.html#method_header'>Panel.header</a>",
            "itemtype": "method",
            "name": "getHeader",
            "params": [
                {
                    "name": "_udata",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Panel.View"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 953,
            "description": "获取或设置Panel的 body 内容, see <a href='JC.Panel.html#method_body'>Panel.body</a>",
            "itemtype": "method",
            "name": "getBody",
            "params": [
                {
                    "name": "_udata",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Panel.View"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 969,
            "description": "获取或设置Panel的 footer 内容, see <a href='JC.Panel.html#method_footer'>Panel.footer</a>",
            "itemtype": "method",
            "name": "getFooter",
            "params": [
                {
                    "name": "_udata",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Panel.View"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 989,
            "description": "居中显示 Panel",
            "itemtype": "method",
            "name": "center",
            "class": "JC.Panel.View"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1021,
            "description": "Panel 的默认模板",
            "access": "private",
            "tagname": "",
            "class": "JC.Panel.View"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1079,
            "description": "监听Panel的所有点击事件\n<br />如果事件源有 eventtype 属性, 则会触发eventtype的事件类型",
            "itemtype": "event",
            "name": "Panel click",
            "access": "private",
            "tagname": "",
            "class": "JC.hideAllPopup",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1132,
            "description": "从 HTML 属性 自动执行 popup",
            "attr": "{function}  panelcancelcallback cancel  回调",
            "class": "JC.hideAllPopup",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1174,
            "description": "隐藏关闭按钮",
            "class": "JC.hideAllPopup",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1289,
            "description": "自定义 JC.msgbox 的显示模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "undefined",
            "static": 1,
            "class": "JC.msgbox",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1324,
            "description": "自定义 JC.alert 的显示模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "undefined",
            "static": 1,
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1360,
            "description": "自定义 JC.confirm 的显示模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "undefined",
            "static": 1,
            "class": "JC.confirm",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1368,
            "description": "弹框逻辑处理方法集",
            "itemtype": "property",
            "name": "_logic",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1375,
            "description": "弹框最小宽度",
            "itemtype": "property",
            "name": "_logic.minWidth",
            "type": "int",
            "default": "180",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1384,
            "description": "弹框最大宽度",
            "itemtype": "property",
            "name": "_logic.maxWidth",
            "type": "int",
            "default": "500",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1393,
            "description": "显示时 X轴的偏移值",
            "itemtype": "property",
            "name": "_logic.xoffset",
            "type": "number",
            "default": "9",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1402,
            "description": "显示时 Y轴的偏移值",
            "itemtype": "property",
            "name": "_logic.yoffset",
            "type": "number",
            "default": "3",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1411,
            "description": "设置弹框的唯一性",
            "itemtype": "method",
            "name": "_logic.popupIdentifier",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "JC.Panel"
                }
            ],
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1435,
            "description": "弹框通用处理方法",
            "itemtype": "method",
            "name": "_logic.popup",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_tpl",
                    "description": "弹框模板",
                    "type": "String"
                },
                {
                    "name": "_msg",
                    "description": "弹框提示",
                    "type": "String"
                },
                {
                    "name": "_popupSrc",
                    "description": "弹框事件源对象",
                    "type": "Selector"
                },
                {
                    "name": "_status",
                    "description": "弹框状态",
                    "type": "Int"
                },
                {
                    "name": "_cb",
                    "description": "confirm 回调",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "JC.Panel"
            },
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1507,
            "description": "隐藏弹框缓动效果",
            "itemtype": "method",
            "name": "_logic.hideEffect",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "JC.Panel"
                },
                {
                    "name": "_popupSrc",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_doneCb",
                    "description": "缓动完成后的回调",
                    "type": "Function"
                }
            ],
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1560,
            "description": "隐藏弹框缓动效果",
            "itemtype": "method",
            "name": "_logic.showEffect",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "JC.Panel"
                },
                {
                    "name": "_popupSrc",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1615,
            "description": "设置 Panel 的默认X,Y轴",
            "itemtype": "method",
            "name": "_logic.onresize",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1651,
            "description": "取得弹框最要显示的 y 轴",
            "itemtype": "method",
            "name": "_logic.getTop",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_scrTop",
                    "description": "滚动条Y位置",
                    "type": "Number"
                },
                {
                    "name": "_srcHeight",
                    "description": "事件源 高度",
                    "type": "Number"
                },
                {
                    "name": "_targetHeight",
                    "description": "弹框高度",
                    "type": "Number"
                },
                {
                    "name": "_offset",
                    "description": "Y轴偏移值",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1672,
            "description": "取得弹框最要显示的 x 轴",
            "itemtype": "method",
            "name": "_logic.getLeft",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_scrTop",
                    "description": "滚动条Y位置",
                    "type": "Number"
                },
                {
                    "name": "_srcHeight",
                    "description": "事件源 高度",
                    "type": "Number"
                },
                {
                    "name": "_targetHeight",
                    "description": "弹框高度",
                    "type": "Number"
                },
                {
                    "name": "_offset",
                    "description": "Y轴偏移值",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1695,
            "description": "修正弹框的默认显示宽度",
            "itemtype": "method",
            "name": "_logic.fixWidth",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_msg",
                    "description": "查显示的文本",
                    "type": "String"
                },
                {
                    "name": "_panel",
                    "description": "",
                    "type": "JC.Panel"
                }
            ],
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1712,
            "description": "获取弹框的显示状态, 默认为0(成功)",
            "itemtype": "method",
            "name": "_logic.fixWidth",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_status",
                    "description": "弹框状态: 0:成功, 1:失败, 2:警告",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1730,
            "description": "保存弹框的所有默认模板",
            "itemtype": "property",
            "name": "_logic.tpls",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1738,
            "description": "msgbox 弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.msgbox",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1758,
            "description": "alert 弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.alert",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1781,
            "description": "confirm 弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.confirm",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1807,
            "description": "响应窗口改变大小",
            "class": "JC.alert",
            "namespace": "JC"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1915,
            "description": "自定义 JC.Dialog.alert 的显示模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "undefined",
            "static": 1,
            "class": "JC.Dialog.msgbox",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1953,
            "description": "自定义 JC.Dialog.alert 的显示模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "undefined",
            "static": 1,
            "class": "JC.Dialog.alert",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 1991,
            "description": "自定义 JC.Dialog.confirm 的显示模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "undefined",
            "static": 1,
            "class": "JC.Dialog.confirm",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2013,
            "description": "会话弹框逻辑处理方法集",
            "itemtype": "property",
            "name": "_logic",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2020,
            "description": "延时处理的指针属性",
            "itemtype": "property",
            "name": "_logic.timeout",
            "type": "setTimeout",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2028,
            "description": "延时显示弹框\n<br />延时是为了使用户绑定的 show 事件能够被执行",
            "itemtype": "property",
            "name": "_logic.showMs",
            "type": "int     millisecond",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2037,
            "description": "弹框最小宽度",
            "itemtype": "property",
            "name": "_logic.minWidth",
            "type": "int",
            "default": "180",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2046,
            "description": "弹框最大宽度",
            "itemtype": "property",
            "name": "_logic.maxWidth",
            "type": "int",
            "default": "500",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2055,
            "description": "设置会话弹框的唯一性",
            "itemtype": "method",
            "name": "_logic.dialogIdentifier",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_panel",
                    "description": "",
                    "type": "JC.Panel"
                }
            ],
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2078,
            "description": "显示蒙板",
            "itemtype": "method",
            "name": "_logic.showMask",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2098,
            "description": "隐藏蒙板",
            "itemtype": "method",
            "name": "_logic.hideMask",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2110,
            "description": "窗口改变大小时, 改变蒙板的大小,\n<br />这个方法主要为了兼容 IE6",
            "itemtype": "method",
            "name": "_logic.setMaskSizeForIe6",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2133,
            "description": "获取弹框的显示状态, 默认为0(成功)",
            "itemtype": "method",
            "name": "_logic.fixWidth",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_status",
                    "description": "弹框状态: 0:成功, 1:失败, 2:警告",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2151,
            "description": "修正弹框的默认显示宽度",
            "itemtype": "method",
            "name": "_logic.fixWidth",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_msg",
                    "description": "查显示的文本",
                    "type": "String"
                },
                {
                    "name": "_panel",
                    "description": "",
                    "type": "JC.Panel"
                }
            ],
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2167,
            "description": "保存会话弹框的所有默认模板",
            "itemtype": "property",
            "name": "_logic.tpls",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2175,
            "description": "msgbox 会话弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.msgbox",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2195,
            "description": "alert 会话弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.alert",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2218,
            "description": "confirm 会话弹框的默认模板",
            "itemtype": "property",
            "name": "_logic.tpls.confirm",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2242,
            "description": "会话弹框的蒙板模板",
            "itemtype": "property",
            "name": "_logic.tpls.mask",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Panel/Panel.js",
            "line": 2256,
            "description": "响应窗口改变大小和滚动",
            "class": "JC.Dialog",
            "namespace": "JC.Dialog"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 131,
            "description": "初始化数据模型",
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 135,
            "description": "初始化视图模型( 根据不同的滚动方向, 初始化不同的视图类 )",
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 147,
            "description": "内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "bool"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 175,
            "description": "自定义事件绑定函数\n<br />使用 jquery on 方法绑定 为 Slider 实例绑定事件",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 188,
            "description": "自定义事件触发函数\n<br />使用 jquery trigger 方法绑定 为 Slider 实例函数自定义事件",
            "itemtype": "method",
            "name": "trigger",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 200,
            "description": "控制 Slider 向左或向右划动",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "_backwrad",
                    "description": "_backwrad = ture(向左), false(向右), 默认false",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 207,
            "description": "控制 Slider 划动到指定索引",
            "itemtype": "method",
            "name": "moveTo",
            "params": [
                {
                    "name": "_newpointer",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 214,
            "description": "获取 Slider 的总索引数",
            "itemtype": "method",
            "name": "totalpage",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 220,
            "description": "获取 Slider 的当前索引数",
            "itemtype": "method",
            "name": "pointer",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 226,
            "description": "获取指定索引页的 selector 对象",
            "itemtype": "method",
            "name": "page",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "array"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 233,
            "description": "获取 Slider 的主外观容器",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 239,
            "description": "查找 layout 的内容",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 280,
            "description": "初始化自动滚动\n<br />如果 layout 的 html属性 sliderautomove=ture, 则会执行本函数",
            "itemtype": "method",
            "name": "_initAutoMove",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "SliderInstance"
            },
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 341,
            "itemtype": "event",
            "name": "inited",
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 344,
            "itemtype": "event",
            "name": "beforemove",
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 347,
            "itemtype": "event",
            "name": "movedone",
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 350,
            "itemtype": "event",
            "name": "outmin",
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 353,
            "itemtype": "event",
            "name": "outmax",
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 356,
            "description": "页面加载完毕后, 是否自动初始化 带有 class=js_autoSlider 的应用",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 364,
            "description": "批量初始化 Slider",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "array"
            },
            "static": 1,
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 397,
            "description": "从 selector 获得 或 设置 Slider 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_ins",
                    "description": "",
                    "type": "SliderInstance"
                }
            ],
            "return": {
                "description": "SliderInstance"
            },
            "static": 1,
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 410,
            "description": "判断 selector 是否具备 实例化 Slider 的条件",
            "itemtype": "method",
            "name": "isSlider",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "class": "JC.Slider",
            "namespace": "JC"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 431,
            "description": "保存 layout 的引用",
            "itemtype": "property",
            "name": "_layout",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 438,
            "description": "自动移动的方向\n<br /> true = 向右|向下, false = 向左|向上",
            "itemtype": "property",
            "name": "_moveDirection",
            "type": "bool",
            "default": "true",
            "access": "private",
            "tagname": "",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 447,
            "description": "滚动时的 interval 引用",
            "itemtype": "property",
            "name": "_interval",
            "type": "interval",
            "access": "private",
            "tagname": "",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 454,
            "description": "自动滚动时的 timeout 引用",
            "itemtype": "property",
            "name": "_timeout",
            "type": "timeout",
            "access": "private",
            "tagname": "",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 466,
            "description": "内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Slider.Model"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 487,
            "description": "获取 slider 外观的 selector",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 493,
            "description": "获取 左移的 selector",
            "itemtype": "method",
            "name": "leftbutton",
            "return": {
                "description": "selector"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 499,
            "description": "获取 右移的 selector",
            "itemtype": "method",
            "name": "rightbutton",
            "return": {
                "description": "selector"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 505,
            "description": "获取移动方向\n<br />horizontal, vertical",
            "itemtype": "method",
            "name": "direction",
            "default": "horizontal",
            "return": {
                "description": "string"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 513,
            "description": "获取/设置自动移动的方向\n<br /> true = 向右|向下, false = 向左|向上",
            "itemtype": "method",
            "name": "moveDirection",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 526,
            "description": "获取每次移动多少项",
            "itemtype": "method",
            "name": "howmanyitem",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 532,
            "description": "获取宽度",
            "itemtype": "method",
            "name": "width",
            "default": "800",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 539,
            "description": "获取高度",
            "itemtype": "method",
            "name": "height",
            "default": "230",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 546,
            "description": "获取项宽度",
            "itemtype": "method",
            "name": "itemwidth",
            "default": "160",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 553,
            "description": "获取项高度",
            "itemtype": "method",
            "name": "itemheight",
            "default": "230",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 560,
            "description": "每次移动的总时间, 单位毫秒",
            "itemtype": "method",
            "name": "loop",
            "default": "false",
            "return": {
                "description": "bool"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 567,
            "description": "获取每次移动间隔的毫秒数",
            "itemtype": "method",
            "name": "stepms",
            "default": "10",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 574,
            "description": "获取每次移动持续的毫秒数",
            "itemtype": "method",
            "name": "durationms",
            "default": "300",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 581,
            "description": "获取自动滚动的间隔",
            "itemtype": "method",
            "name": "automovems",
            "default": "2000",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 588,
            "description": "获取是否自动滚动",
            "itemtype": "method",
            "name": "automove",
            "default": "false",
            "return": {
                "description": "bool"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 595,
            "description": "获取默认显示的索引",
            "itemtype": "method",
            "name": "defaultpage",
            "return": {
                "description": "int"
            },
            "default": "0",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 602,
            "description": "获取划动的所有项",
            "itemtype": "method",
            "name": "subitems",
            "return": {
                "description": "selector"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 616,
            "description": "获取分页总数\n<br /> Math.ceil( subitems / howmanyitem )",
            "itemtype": "method",
            "name": "totalpage",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 632,
            "description": "获取指定页的所有划动项",
            "itemtype": "method",
            "name": "page",
            "params": [
                {
                    "name": "_index",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "array"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 651,
            "description": "获取/设置当前索引位置",
            "itemtype": "method",
            "name": "pointer",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 663,
            "description": "获取新的划动位置\n<br />根据划向的方向 和 是否循环",
            "itemtype": "method",
            "name": "newpointer",
            "params": [
                {
                    "name": "_isbackward",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 679,
            "description": "修正指针的索引位置, 防止范围溢出",
            "itemtype": "method",
            "name": "fixpointer",
            "params": [
                {
                    "name": "_pointer",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 697,
            "description": "获取自动萌动的新索引",
            "itemtype": "method",
            "name": "automoveNewPointer",
            "return": {
                "description": "int"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 728,
            "description": "获取/设置 划动的 interval 对象",
            "itemtype": "method",
            "name": "interval",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Interval"
                }
            ],
            "return": {
                "description": "interval"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 739,
            "description": "清除划动的 interval",
            "itemtype": "method",
            "name": "clearInterval",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 747,
            "description": "获取/设置 自动划动的 timeout",
            "itemtype": "method",
            "name": "timeout",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Timeout"
                }
            ],
            "return": {
                "description": "timeout"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 758,
            "description": "清除自动划动的 timeout",
            "itemtype": "method",
            "name": "clearTimeout",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 766,
            "description": "获取/设置当前鼠标是否位于 slider 及其控件上面",
            "itemtype": "method",
            "name": "controlover",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 777,
            "description": "获取初始化后的回调函数",
            "itemtype": "method",
            "name": "initedcb",
            "return": {
                "description": "function|undefined"
            },
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Slider/Slider.js",
            "line": 964,
            "description": "页面加载后, 自动初始化符合 Slider 规则的 Slider",
            "class": "JC.Slider.Model",
            "namespace": "JC.Slider"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 122,
            "description": "suggest_so({ \"p\" : true,\n              \"q\" : \"shinee\",\n              \"s\" : [ \"shinee 综艺\",\n                  \"shinee美好的一天\",\n                  \"shinee hello baby\",\n                  \"shinee吧\",\n                  \"shinee泰民\",\n                  \"shinee fx\",\n                  \"shinee快乐大本营\",\n                  \"shinee钟铉车祸\",\n                  \"shinee年下男的约会\",\n                  \"shinee dream girl\"\n                ]\n            });",
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 154,
            "description": "显示 Suggest",
            "itemtype": "method",
            "name": "show",
            "return": {
                "description": "SuggestInstance"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 160,
            "description": "隐藏 Suggest",
            "itemtype": "method",
            "name": "hide",
            "return": {
                "description": "SuggestInstance"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 166,
            "description": "获取 显示 Suggest 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 172,
            "description": "获取 Suggest 外观的 选择器",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 178,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "SuggestInstance"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 186,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "SuggestInstance"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 350,
            "description": "获取或设置 Suggest 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setter",
                    "description": "",
                    "type": "SuggestInstace|null"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Suggest instance"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 367,
            "description": "判断 selector 是否可以初始化 Suggest",
            "itemtype": "method",
            "name": "isSuggest",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "bool"
            },
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 382,
            "description": "设置 Suggest 是否需要自动初始化",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 390,
            "description": "自定义列表显示模板",
            "itemtype": "property",
            "name": "layoutTpl",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 398,
            "description": "数据过滤回调",
            "itemtype": "property",
            "name": "dataFilter",
            "type": "function",
            "default": "undefined",
            "static": 1,
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 406,
            "description": "保存所有初始化过的实例",
            "itemtype": "property",
            "name": "_allIns",
            "type": "array",
            "default": "[]",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 415,
            "description": "隐藏其他 Suggest 显示列表",
            "itemtype": "method",
            "name": "_hideOther",
            "params": [
                {
                    "name": "_ins",
                    "description": "",
                    "type": "SuggestInstance"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 738,
            "description": "初始化完后的事件",
            "itemtype": "event",
            "name": "SuggestInited",
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 742,
            "description": "获得新数据的事件",
            "itemtype": "event",
            "name": "SuggestUpdate",
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 746,
            "description": "数据更新完毕后的事件",
            "itemtype": "event",
            "name": "SuggestUpdated",
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 750,
            "description": "显示前的事件",
            "itemtype": "event",
            "name": "SuggestBeforeShow",
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Suggest/Suggest.js",
            "line": 754,
            "description": "显示后的事件",
            "itemtype": "event",
            "name": "SuggestShow",
            "class": "JC.Suggest",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 151,
            "description": "Tab 模型类的实例",
            "itemtype": "property",
            "name": "_model",
            "type": "JC.Tab.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 158,
            "description": "Tab 视图类的实例",
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 166,
            "description": "页面加载完毕后, 是否要添加自动初始化事件\n<br /> 自动初始化是 鼠标移动到 Tab 容器时去执行的, 不是页面加载完毕后就开始自动初始化",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 175,
            "description": "label 当前状态的样式",
            "itemtype": "property",
            "name": "activeClass",
            "type": "string",
            "default": "cur",
            "static": 1,
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 183,
            "description": "label 的触发事件",
            "itemtype": "property",
            "name": "activeEvent",
            "type": "string",
            "default": "click",
            "static": 1,
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 191,
            "description": "获取或设置 Tab 容器的 Tab 实例属性",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setter",
                    "description": "_setter 不为空是设置",
                    "type": "JC.Tab"
                }
            ],
            "static": 1,
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 207,
            "description": "全局的 ajax 处理回调",
            "itemtype": "property",
            "name": "ajaxCallback",
            "type": "function",
            "default": "null",
            "static": 1,
            "example": [
                "\n           $(document).ready( function(){\n               JC.Tab.ajaxCallback =\n                   function( _data, _label, _container, _textStatus, _jqXHR ){\n                       _data && ( _data = $.parseJSON( _data ) );\n                       if( _data && _data.errorno === 0 ){\n                           _container.html( printf( '<h2>JC.Tab.ajaxCallback</h2>{0}', _data.data ) );\n                       }else{\n                           Tab.isAjaxInited( _label, 0 );\n                           _container.html( '<h2>内容加载失败!</h2>' );\n                       }\n                   };\n           });"
            ],
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 228,
            "description": "ajax 请求是否添加随机参数 rnd, 以防止页面缓存的结果差异",
            "itemtype": "property",
            "name": "ajaxRandom",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 236,
            "description": "判断一个 label 是否为 ajax",
            "itemtype": "method",
            "name": "isAjax",
            "static": 1,
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "",
                "type": "String|undefined"
            },
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 247,
            "description": "判断一个 ajax label 是否已经初始化过\n<br /> 这个方法需要跟 Tab.isAjax 结合判断才更为准确",
            "itemtype": "method",
            "name": "isAjaxInited",
            "static": 1,
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setter",
                    "description": "如果 _setter 不为空, 则进行赋值",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n       function tabactive( _evt, _container, _tabIns ){\n           var _label = $(this);\n           JC.log( 'tab ', _evt.type, _label.html(), new Date().getTime() );\n           if( JC.Tab.isAjax( _label ) && ! JC.Tab.isAjaxInited( _label ) ){\n               _container.html( '<h2>内容加载中...</h2>' );\n           }\n       }"
            ],
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 270,
            "description": "Tab 内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 287,
            "description": "把 _label 设置为活动状态",
            "itemtype": "method",
            "name": "active",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.Tab",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 313,
            "description": "Tab 的主容器",
            "itemtype": "property",
            "name": "_layout",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 320,
            "description": "Tab 初始完毕后要触发的label, 可选",
            "itemtype": "property",
            "name": "_triggerTarget",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 327,
            "description": "Tab 的标签列表选择器",
            "itemtype": "property",
            "name": "_tablabels",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 334,
            "description": "Tab 的内容列表选择器",
            "itemtype": "property",
            "name": "_tabcontainers",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 341,
            "description": "当前标签的所在索引位置",
            "itemtype": "property",
            "name": "currentIndex",
            "type": "int",
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 352,
            "description": "Tab Model 内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 380,
            "description": "判断是否从 layout 下查找内容",
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 387,
            "description": "获取 Tab 的主容器",
            "itemtype": "method",
            "name": "layout",
            "return": {
                "description": "selector"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 393,
            "description": "获取 Tab 所有 label 或 特定索引的 label",
            "itemtype": "method",
            "name": "tablabels",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 403,
            "description": "获取 Tab 所有内容container 或 特定索引的 container",
            "itemtype": "method",
            "name": "tabcontainers",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 413,
            "description": "获取初始化要触发的 label",
            "itemtype": "method",
            "name": "triggerTarget",
            "return": {
                "description": "selector"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 419,
            "description": "判断一个容器是否 符合 Tab 数据要求",
            "itemtype": "method",
            "name": "layoutIsTab",
            "return": {
                "description": "bool"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 425,
            "description": "获取 Tab 活动状态的 class",
            "itemtype": "method",
            "name": "activeClass",
            "return": {
                "description": "string"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 431,
            "description": "获取 Tab label 的触发事件名称",
            "itemtype": "method",
            "name": "activeEvent",
            "return": {
                "description": "string"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 437,
            "description": "判断 label 是否符合要求, 或者设置一个 label为符合要求",
            "itemtype": "method",
            "name": "tablabel",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 450,
            "description": "判断 container 是否符合要求, 或者设置一个 container为符合要求",
            "itemtype": "method",
            "name": "tabcontent",
            "params": [
                {
                    "name": "_content",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 464,
            "description": "获取或设置 label 的索引位置",
            "itemtype": "method",
            "name": "tabindex",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "int"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 478,
            "description": "获取Tab label 触发事件后的回调",
            "itemtype": "method",
            "name": "tabactivecallback",
            "return": {
                "description": "function"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 489,
            "description": "获取 Tab label 变更后的回调",
            "itemtype": "method",
            "name": "tabchangecallback",
            "return": {
                "description": "function"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 500,
            "description": "获取 Tab label 活动状态显示样式的标签",
            "itemtype": "method",
            "name": "tablabelparent",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 514,
            "description": "获取 ajax label 的 URL",
            "itemtype": "method",
            "name": "tabajaxurl",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 521,
            "description": "获取 ajax label 的请求方法 get/post",
            "itemtype": "method",
            "name": "tabajaxmethod",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 528,
            "description": "获取 ajax label 的请求数据",
            "itemtype": "method",
            "name": "tabajaxdata",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "object"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 542,
            "description": "获取 ajax label 请求URL后的回调",
            "itemtype": "method",
            "name": "tabajaxcallback",
            "params": [
                {
                    "name": "_label",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "function"
            },
            "class": "JC.Tab.Model",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 563,
            "description": "Tab 数据模型类实例引用",
            "itemtype": "property",
            "name": "_model",
            "type": "{JC.Tab.Model}",
            "access": "private",
            "tagname": "",
            "class": "JC.Tab.View",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 573,
            "description": "Tab 视图类初始化方法",
            "itemtype": "method",
            "name": "init",
            "class": "JC.Tab.View",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 595,
            "description": "设置特定索引位置的 label 为活动状态",
            "itemtype": "method",
            "name": "active",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "JC.Tab.View",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 619,
            "description": "请求特定索引位置的 ajax tab 数据",
            "itemtype": "method",
            "name": "activeAjax",
            "params": [
                {
                    "name": "_ix",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "JC.Tab.View",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tab/Tab.js",
            "line": 647,
            "description": "自动化初始 Tab 实例\n如果 Tab.autoInit = true, 鼠标移至 Tab 后会自动初始化 Tab",
            "class": "JC.Tab.View",
            "namespace": "JC.Tab"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 59,
            "description": "数据模型类实例引用",
            "itemtype": "property",
            "name": "_model",
            "type": "JC.Tips.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 66,
            "description": "视图类实例引用",
            "itemtype": "property",
            "name": "_view",
            "type": "JC.Tips.View",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 78,
            "description": "初始化 Tips 内部属性",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 100,
            "description": "显示 Tips",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "_evt",
                    "description": "_evt 可以是事件/或者带 pageX && pageY 属性的 Object\n                                 <br />pageX 和 pageY 是显示位于整个文档的绝对 x/y 轴位置",
                    "type": "Event|object"
                }
            ],
            "return": {
                "description": "TipsInstance"
            },
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 112,
            "description": "隐藏 Tips",
            "itemtype": "method",
            "name": "hide",
            "return": {
                "description": "TipsInstance"
            },
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 118,
            "description": "获取 显示 tips 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 124,
            "description": "获取 tips 外观的 选择器",
            "itemtype": "method",
            "name": "layout",
            "params": [
                {
                    "name": "_update",
                    "description": "是否更新 Tips 数据",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 131,
            "description": "获取 tips 显示的内容",
            "itemtype": "method",
            "name": "data",
            "return": {
                "description": "string"
            },
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 137,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "TipsInstance"
            },
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 145,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "TipsInstance"
            },
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 153,
            "description": "tips 初始化实例后的触发的事件\n<br />在HTML属性定义回调 tipsinitedcallback =\"function name\"",
            "itemtype": "event",
            "name": "TipsInited",
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 158,
            "description": "tips 显示后的回调\n<br />在HTML属性定义回调 tipsshowcallback=\"function name\"",
            "itemtype": "event",
            "name": "TipsShow",
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 163,
            "description": "tips 显示前的回调\n<br />在HTML属性定义回调 tipsbeforeshowcallback=\"function name\"",
            "itemtype": "event",
            "name": "TipsBeforeShow",
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 168,
            "description": "tips 隐藏后的回调\n<br />在HTML属性定义回调 tipshidecallback=\"function name\"",
            "itemtype": "event",
            "name": "TipsHide",
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 173,
            "description": "批量初始化 Tips 效果",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "_selector",
                    "description": "选择器列表对象, 如果带 title/tipsData 属性则会初始化 Tips 效果",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "example": [
                "\n           <script src=\"../../../lib.js\"></script>\n           <script>\n               JC.use( 'Tips' );\n               $(document).ready( function(_evt){\n                   JC.Tips.autoInit = false;\n                   JC.Tips.init( $( 'a' ) ); \n               });\n           </script>"
            ],
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 201,
            "description": "隐藏 Tips",
            "itemtype": "method",
            "name": "hide",
            "static": 1,
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 210,
            "description": "页面加载完毕后, 是否自动初始化",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 218,
            "description": "用户自定义模板\n<br /> 如果用户显式覆盖此属性, Tips 会使用用户定义的模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "null",
            "static": 1,
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 227,
            "description": "设置 Tips 超过边界的默认偏移像素\n<p>\nbottom: 边界超过屏幕底部的偏移\n<br />left: 边界低于屏幕左侧的偏移\n<br />top: 边界低于屏幕顶部的偏移\n</p>",
            "itemtype": "property",
            "name": "offset",
            "type": "{point object}",
            "default": "{ 'bottom': { 'x': 15, 'y': 15 }, 'left': { 'x': -28, 'y': 5 }, 'top': { 'x': -2, 'y': -22 } };",
            "static": 1,
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 244,
            "description": "Tips 的最小宽度",
            "itemtype": "property",
            "name": "minWidth",
            "type": "int",
            "default": "200",
            "static": 1,
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 252,
            "description": "Tips 的最大宽度",
            "itemtype": "property",
            "name": "maxWidth",
            "type": "int",
            "default": "400",
            "static": 1,
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 260,
            "description": "把 tag 的 title 属性 转为 tipsData \n<p><b>注意:</b> 这个方法只有当 Tips.autoInit 为假时, 或者浏览器会 IE时才会生效\n<br />Tips.autoInit 为真时, 非IE浏览器无需转换\n<br />如果为IE浏览器, 无论 Tips.autoInit 为真假, 都会进行转换\n<br />方法内部已经做了判断, 可以直接调用, 对IE会生效\n, 这个方法的存在是因为 IE 的 title为延时显示, 所以tips显示后, 默认title会盖在tips上面\n</p>",
            "itemtype": "method",
            "name": "titleToTipsdata",
            "params": [
                {
                    "name": "_selector",
                    "description": "要转title 为 tipsData的选择器列表",
                    "type": "Selector"
                }
            ],
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 280,
            "description": "从 selector 获得 或 设置 Tips 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_ins",
                    "description": "",
                    "type": "TipsInstance"
                }
            ],
            "return": {
                "description": "TipsInstance"
            },
            "static": 1,
            "class": "JC.Tips",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 302,
            "description": "tips 默认模板",
            "itemtype": "property",
            "name": "tpl",
            "type": "string",
            "default": "<div class=\"UTips\"></div>",
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 309,
            "description": "保存 tips 的触发源选择器",
            "itemtype": "property",
            "name": "_selector",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 316,
            "description": "tips 的显示内容\n<br />标签的 title/tipsData 会保存在这个属性, 然后 title/tipsData 会被清除掉",
            "itemtype": "property",
            "name": "_data",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 328,
            "description": "初始化 tips 模型类",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 340,
            "description": "获取/更新 tips 显示内容",
            "itemtype": "method",
            "name": "data",
            "params": [
                {
                    "name": "_update",
                    "description": "是否更新 tips 数据",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 351,
            "description": "更新 tips 数据",
            "itemtype": "method",
            "name": "update",
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 364,
            "description": "判断 selector 是否初始化过 Tips 功能",
            "itemtype": "method",
            "name": "isInited",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 375,
            "description": "获取 tips 触发源选择器",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "JC.Tips.Model",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 451,
            "description": "保存 Tips 数据模型类的实例引用",
            "itemtype": "property",
            "name": "_model",
            "type": "JC.Tips.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 458,
            "description": "保存 Tips 的显示外观选择器",
            "itemtype": "property",
            "name": "_layout",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 468,
            "description": "初始化 Tips 视图类",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 480,
            "description": "显示 Tips",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "_evt",
                    "description": "_evt 可以是事件/或者带 pageX && pageY 属性的 Object\n                                 <br />pageX 和 pageY 是显示位于整个文档的绝对 x/y 轴位置",
                    "type": "Event|object"
                }
            ],
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 517,
            "description": "隐藏 Tips",
            "itemtype": "method",
            "name": "hide",
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 525,
            "description": "获取 Tips 外观的 选择器",
            "itemtype": "method",
            "name": "layout",
            "params": [
                {
                    "name": "_update",
                    "description": "是否更新 Tips 数据",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 555,
            "description": "鼠标移动到 Tips 触发源的触发事件",
            "itemtype": "method",
            "name": "tipMouseenter",
            "params": [
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 587,
            "description": "Tips 的默认模板",
            "itemtype": "property",
            "name": "_defTpl",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tips/Tips.js",
            "line": 595,
            "description": "页面加载完毕后, 是否自动初始化 Tips",
            "class": "JC.Tips.View",
            "namespace": "JC.Tips"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 50,
            "description": "树的数据模型引用",
            "itemtype": "property",
            "name": "_model",
            "type": "JC.Tree.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 57,
            "description": "树的视图模型引用",
            "itemtype": "property",
            "name": "_view",
            "type": "JC.Tree.View",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 65,
            "description": "从选择器获取 树的 实例, 如果实例有限, 加以判断可避免重复初始化",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "JC.Tree Instance|undefined"
            },
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 77,
            "description": "树的数据过滤函数\n<br /> 如果树的初始数据格式不符合要求, 可通过该属性定义函数进行数据修正",
            "itemtype": "property",
            "name": "dataFilter",
            "type": "function",
            "default": "undefined",
            "static": 1,
            "example": [
                "\n           JC.Tree.dataFilter =\n           function( _data ){\n               var _r = {};\n\n               if( _data ){\n                   if( _data.root.length > 2 ){\n                       _data.root.shift();\n                       _r.root = _data.root;\n                    }\n                   _r.data = {};\n                   for( var k in _data.data ){\n                       _r.data[ k ] = [];\n                       for( var i = 0, j = _data.data[k].length; i < j; i++ ){\n                           if( _data.data[k][i].length < 3 ) continue;\n                           _data.data[k][i].shift();\n                           _r.data[k].push( _data.data[k][i] );\n                       }\n                   }\n               }\n               return _r;\n           };"
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 110,
            "description": "初始化树\n<br /> 实例化树后, 需要显式调用该方法初始化树的可视状态",
            "itemtype": "method",
            "name": "init",
            "example": [
                "\n               var _tree = new JC.Tree( $('#tree_box'), treeData );\n               _tree.init();"
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 124,
            "description": "展开树到某个具体节点, 或者展开树的所有节点",
            "itemtype": "method",
            "name": "open",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "如果_nodeId='undefined', 将会展开树的所有节点\n                                     <br />_nodeId 不为空, 将展开树到 _nodeId 所在的节点",
                    "type": "String|int"
                }
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 139,
            "description": "关闭某个节点, 或者关闭整个树",
            "itemtype": "method",
            "name": "close",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "如果_nodeId='undefined', 将会关闭树的所有节点\n                                     <br />_nodeId 不为空, 将关闭树 _nodeId 所在的节点",
                    "type": "String|int"
                }
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 154,
            "description": "获取树的 ID 前缀\n<br />每个树都会有自己的随机ID前缀",
            "itemtype": "method",
            "name": "idPrefix",
            "return": {
                "description": "树的ID前缀",
                "type": "String"
            },
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 161,
            "description": "获取树的节点 label",
            "itemtype": "method",
            "name": "getItem",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "",
                    "type": "String|int"
                }
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 172,
            "description": "绑定树内部事件\n<br /><b>注意:</b> 所有事件名最终会被转换成小写",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 185,
            "description": "获取树的某类事件类型的所有回调",
            "itemtype": "method",
            "name": "event",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 192,
            "description": "获取或设置树的高亮节点\n<br /><b>注意:</b> 这个只是数据层面的设置, 不会影响视觉效果",
            "itemtype": "method",
            "name": "highlight",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 204,
            "description": "树节点的点击事件",
            "itemtype": "event",
            "name": "click",
            "params": [
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "example": [
                "\n           _tree.on('click', function( _evt ){\n               var _p = $(this);\n               JC.log( 'tree click:', _p.html(), _p.attr('dataid'), _p.attr('dataname') );\n           });"
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 215,
            "description": "树节点的展现事件",
            "itemtype": "event",
            "name": "RenderLabel",
            "params": [
                {
                    "name": "_data",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n           _tree.on('RenderLabel', function( _data ){\n               var _node = $(this);\n               _node.html( printf( '<a href=\"javascript:\" dataid=\"{0}\">{1}</a>', _data[0], _data[1] ) );\n           });"
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 227,
            "description": "树文件夹的点击事件",
            "itemtype": "event",
            "name": "FolderClick",
            "params": [
                {
                    "name": "_evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "example": [
                "\n           _tree.on('FolderClick', function( _evt ){\n               var _p = $(this);\n               alert( 'folder click' );\n           });"
            ],
            "class": "JC.Tree",
            "namespace": "JC"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 245,
            "description": "树要展示的容器",
            "itemtype": "property",
            "name": "_container",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 252,
            "description": "展现树需要的数据",
            "itemtype": "property",
            "name": "_data",
            "type": "object",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 259,
            "description": "树的随机ID前缀",
            "itemtype": "property",
            "name": "_id",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 266,
            "description": "树当前的高亮节点",
            "itemtype": "property",
            "name": "_highlight",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 273,
            "description": "保存树的所有绑定事件",
            "itemtype": "property",
            "name": "_events",
            "type": "object",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 285,
            "description": "树模型类内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 295,
            "description": "获取树所要展示的容器",
            "itemtype": "method",
            "name": "container",
            "return": {
                "description": "selector"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 301,
            "description": "获取节点将要显示的ID",
            "itemtype": "method",
            "name": "id",
            "params": [
                {
                    "name": "_id",
                    "description": "节点的原始ID",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string  节点的最终ID"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 308,
            "description": "获取树的随机ID前缀",
            "itemtype": "method",
            "name": "idPrefix",
            "return": {
                "description": "string"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 314,
            "description": "获取树的原始数据",
            "itemtype": "method",
            "name": "data",
            "return": {
                "description": "object"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 320,
            "description": "获取树生成后的根节点",
            "itemtype": "method",
            "name": "root",
            "return": {
                "description": "selector"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 326,
            "description": "获取ID的具体节点",
            "itemtype": "method",
            "name": "child",
            "params": [
                {
                    "name": "_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 333,
            "description": "判断原始数据的某个ID是否有子级节点",
            "itemtype": "method",
            "name": "hasChild",
            "params": [
                {
                    "name": "_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 340,
            "description": "获取树的某类绑定事件的所有回调",
            "itemtype": "method",
            "name": "event",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array|undefined"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 351,
            "description": "添加树内部事件",
            "itemtype": "method",
            "name": "addEvent",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 363,
            "description": "获取或设置树的高亮节点\n<br /><b>注意:</b> 这个只是数据层面的设置, 不会影响视觉效果",
            "itemtype": "method",
            "name": "highlight",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 376,
            "description": "树的视图模型类",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 380,
            "description": "树的数据模型引用",
            "itemtype": "property",
            "name": "_model",
            "type": "JC.Tree.Model",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 387,
            "description": "树生成后的根节点",
            "itemtype": "property",
            "name": "_treeRoot",
            "type": "selector",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 397,
            "description": "初始化树的可视状态",
            "itemtype": "method",
            "name": "init",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 407,
            "description": "获取或设置树生成后的根节点",
            "itemtype": "method",
            "name": "treeRoot",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 418,
            "description": "处理树的展现效果",
            "itemtype": "method",
            "name": "_process",
            "params": [
                {
                    "name": "_data",
                    "description": "节点数据",
                    "type": "Array"
                },
                {
                    "name": "_parentNode",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 439,
            "description": "初始化树根节点",
            "itemtype": "method",
            "name": "_initRoot",
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 469,
            "description": "初始化树的文件夹节点",
            "itemtype": "method",
            "name": "_initFolder",
            "params": [
                {
                    "name": "_parentNode",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "_isLast",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 494,
            "description": "初始化树的文件节点",
            "itemtype": "method",
            "name": "_initFile",
            "params": [
                {
                    "name": "_parentNode",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "_isLast",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 515,
            "description": "初始化树的节点标签",
            "itemtype": "method",
            "name": "_initLabel",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "_data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 539,
            "description": "展开树的所有节点",
            "itemtype": "method",
            "name": "openAll",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 550,
            "description": "关闭树的所有节点",
            "itemtype": "method",
            "name": "closeAll",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 562,
            "description": "展开树到具体节点",
            "itemtype": "method",
            "name": "open",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 587,
            "description": "关闭树的具体节点",
            "itemtype": "method",
            "name": "close",
            "params": [
                {
                    "name": "_nodeId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 606,
            "description": "树的最后的 hover 节点\n<br />树的 hover 是全局属性, 页面上的所有树只会有一个当前 hover",
            "itemtype": "property",
            "name": "lastHover",
            "type": "selector",
            "default": "null",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 622,
            "description": "捕获树文件标签的点击事件",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Tree/Tree.js",
            "line": 650,
            "description": "捕获树文件夹图标的点击事件",
            "class": "JC.Tree.Model",
            "namespace": "JC.Tree"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 224,
            "description": "兼容函数式使用",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 273,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "ValidInstance"
            },
            "access": "private",
            "tagname": "",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 282,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "ValidInstance"
            },
            "access": "private",
            "tagname": "",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 290,
            "description": "分析_item是否附合规则要求",
            "itemtype": "method",
            "name": "parse",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 440,
            "description": "验证一个表单项, 如 文本框, 下拉框, 复选框, 单选框, 文本域, 隐藏域",
            "itemtype": "method",
            "name": "check",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "需要验证规则正确与否的表单/表单项( <b>可同时传递多个_item</b> )",
                    "type": "Selector"
                }
            ],
            "example": [
                " \n         JC.Valid.check( $( selector ) );\n         JC.Valid.check( $( selector ), $( anotherSelector );\n         JC.Valid.check( document.getElementById( item ) );\n\n         if( !JC.Valid.check( $('form') ) ){\n             _evt.preventDefault();\n             return false;\n         }"
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 458,
            "description": "这个方法是 <a href='JC.Valid.html#method_check'>Valid.check</a> 的别名",
            "itemtype": "method",
            "name": "checkAll",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "-   需要验证规则正确与否的表单/表单项",
                    "type": "Selector"
                }
            ],
            "see": [
                "Valid.check"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 465,
            "description": "获取 Valid 的实例 ( <b>Valid 是单例模式</b> )",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Valid instance"
            },
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 473,
            "description": "判断 selector 是否 Valid 的处理对象",
            "itemtype": "method",
            "name": "isValid",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 481,
            "description": "把一个表单项的状态设为正确状态",
            "itemtype": "method",
            "name": "setValid",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_tm",
                    "description": "延时 _tm 毫秒显示处理结果, 默认=150",
                    "type": "Int"
                }
            ],
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 489,
            "description": "把一个表单项的状态设为错误状态",
            "itemtype": "method",
            "name": "setError",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_msgAttr",
                    "description": "- 显示指定需要读取的错误信息属性名, 默认为 reqmsg, errmsg, 通过该属性可以指定别的属性名\n                                   <br /> 如果 _msgAttr 的第一个字符为空格, 将视为提示信息, 并自动生成属性 autoGenerateErrorMsg",
                    "type": "String"
                },
                {
                    "name": "_fullMsg",
                    "description": "- 显示指定错误信息为属性的值, 而不是自动添加的 请上传/选择/填写",
                    "type": "Bool"
                }
            ],
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 507,
            "description": "显示 focusmsg 属性的提示信息( 如果有的话 )",
            "itemtype": "method",
            "name": "focusmsg",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_setHide",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 516,
            "description": "focus 时,是否总是显示 focusmsg 提示信息",
            "itemtype": "property",
            "name": "focusmsgEverytime",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 524,
            "description": "设置 em 的 css display 属性",
            "itemtype": "property",
            "name": "emDisplayType",
            "type": "string",
            "default": "inline",
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 533,
            "description": "验证正确时, 是否显示正确的样式",
            "itemtype": "property",
            "name": "showValidStatus",
            "type": "bool",
            "default": "false",
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 541,
            "description": "清除Valid生成的错误样式",
            "itemtype": "method",
            "name": "clearError",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "-     需要清除错误的选择器",
                    "type": "Form|input|textarea|select|file|password"
                }
            ],
            "example": [
                "\n         JC.Valid.clearError( 'form' );\n         JC.Valid.clearError( 'input.some' );"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 552,
            "description": "验证发生错误时, 是否终止继续验证\n<br /> 为真终止继续验证, 为假将验证表单的所有项, 默认为 false",
            "itemtype": "property",
            "name": "errorAbort",
            "type": "bool",
            "default": "false",
            "static": 1,
            "example": [
                "\n           $(document).ready( function($evt){\n               JC.Valid.errorAbort = true;\n           });"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 565,
            "description": "是否自动清除两边的空格",
            "itemtype": "property",
            "name": "autoTrim",
            "type": "bool",
            "default": "true",
            "static": 1,
            "example": [
                "\n           $(document).ready( function($evt){\n               JC.Valid.autoTrim = false;\n           });"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 577,
            "description": "对一个 control 作检查后的回调, 无论正确与否都会触发",
            "itemtype": "property",
            "name": "itemCallback",
            "type": "function",
            "default": "undefined",
            "static": 1,
            "example": [
                "\n           $(document).ready( function($evt){\n               JC.Valid.itemCallback =\n                   function( _item, _isValid ){\n                       JC.log( 'JC.Valid.itemCallback _isValid:', _isValid );\n                   };\n           });"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 593,
            "description": "检查一个表单是否有内容",
            "itemtype": "method",
            "name": "formHasValue",
            "params": [
                {
                    "name": "_fm",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_ignoreSelector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "example": [
                "\n            $('form.js-valid').on('submit', function( $evt ){\n               var _p = $(this);\n\n               if( !JC.Valid.formHasValue( _p ) ){\n                   $evt.preventDefault();\n                   JC.alert( '表单内容为空, 不能提交!', _p.find('button[type=submit]'), 1 );\n                   return false;\n               }\n\n               if( !JC.Valid.check( _p ) ){\n                   $evt.preventDefault();\n                   return false;\n               }\n           });"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 620,
            "description": "判断 表单控件是否为忽略检查 或者 设置 表单控件是否为忽略检查",
            "itemtype": "method",
            "name": "ignore",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_delIgnore",
                    "description": "是否删除忽略属性, 如果为 undefined 将不执行 添加删除操作",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 652,
            "description": "定义 form control",
            "itemtype": "property",
            "name": "_formControls",
            "return": {
                "description": "bool"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC",
            "subprops": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ]
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 661,
            "description": "判断 _selector 是否为 form control",
            "itemtype": "method",
            "name": "isFormControl",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 698,
            "description": "获取 _item 的检查类型",
            "itemtype": "method",
            "name": "parseDatatype",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 715,
            "description": "获取 _item 的检查子类型, 所有可用的检查子类型位于 _logic.subdatatype 对象",
            "itemtype": "method",
            "name": "parseSubdatatype",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector|string"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 869,
            "description": "检查内容的长度",
            "itemtype": "method",
            "name": "lengthValid",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{integer}   maxlength       内容最大长度",
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_name\" minlength=\"2\" maxlength=\"120\" reqmsg=\"公司名称\" errmsg=\"请检查格式,长度2-120\" /> <em>公司名称描述</em>\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 896,
            "description": "根据特殊的 datatype 实现不同的计算方法",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 922,
            "description": "检查是否为正确的数字<br />\n<br>默认范围 0 - Math.pow(10, 10)",
            "itemtype": "method",
            "name": "n",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{integer|optional}      maxvalue    - 数值的上限",
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_n\" errmsg=\"请填写正确的正整数\" datatype=\"n\" >\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_n1\" errmsg=\"请填写正确的数字, 范围1-100\" datatype=\"n\" minvalue=\"1\", maxvalue=\"100\" >\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_n2\" errmsg=\"请填写正确的数字\" datatype=\"n-7.2\" >\n               </div>\n"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 988,
            "description": "检查两个输入框的数值\n<br /> 数字格式为 0-pow(10,10)\n<br /> 带小数点使用 nrange-int.float, 例: nrange-1.2  nrange-2.2\n<br /> <b>注意:</b> 如果不显示指定 fromNEl, toNEl, \n             将会从父级查找 datatype=nrange属性的input, 如果数量等于2, 则会进行验证, 不等2将忽略",
            "itemtype": "method",
            "name": "nrange",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{date string|optional}  maxvalue    - 数值的上限",
            "example": [
                "\n           <div class=\"f-l label\">\n               <label>(datatype nrange)正数:<br/><b style=\"color:red\">注意: 这个是大小颠倒位置的nrange</b></label>\n               大<input type=\"text\" name=\"company_n10\" id=\"company_n10\" fromNEl=\"company_n11\"\n                   errmsg=\"请填写正确的数值范围\" datatype=\"nrange\" emEl=\"nrange_n1011\" >\n               - 小<input type=\"text\" name=\"company_n11\" id=\"company_n11\" toNEl=\"company_n10\"\n                   errmsg=\"请填写正确的数值范围\" datatype=\"nrange\" emEl=\"nrange_n1011\" >\n               <em id=\"nrange_n1011\"></em>\n           </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1062,
            "description": "检查是否为合法的日期,\n<br />日期格式为 YYYYMMDD, YYYY/MM/DD, YYYY-MM-DD, YYYY.MM.DD",
            "itemtype": "method",
            "name": "d",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{date string|optional}  maxvalue    - 日期的上限",
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_d\" errmsg=\"请填写正确的日期范围2013-05-01 - 2013-05-31\" datatype=\"daterange\" minvalue=\"2013-05-01\" maxvalue=\"2013-05-31\" >\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1097,
            "description": "检查两个输入框的日期\n<br />日期格式为 YYYYMMDD, YYYY/MM/DD, YYYY-MM-DD, YYYY.MM.DD\n<br /> <b>注意:</b> 如果不显示指定 fromDateEl, toDateEl, \n             将会从父级查找 datatype=daterange属性的input, 如果数量等于2, 则会进行验证, 不等2将忽略",
            "itemtype": "method",
            "name": "daterange",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{date string|optional}  maxvalue    - 日期的上限",
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_daterange\" errmsg=\"请填写正确的日期范围,并且起始日期不能大于结束日期\" id=\"start_date\" \n                       datatype=\"daterange\" toDateEl=\"end_date\" emEl=\"date-err-em\" >\n                   - <input type=\"TEXT\" name=\"company_daterange\" errmsg=\"请填写正确的日期范围,并且起始日期不能大于结束日期\" id=\"end_date\" \n                       datatype=\"daterange\" fromDateEl=\"start_date\" emEl=\"date-err-em\" >\n                   <br /><em id=\"date-err-em\"></em>\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1168,
            "description": "检查时间格式, 格式为 hh:mm:ss",
            "itemtype": "method",
            "name": "time",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_time\" errmsg=\"正确的时间, 格式为 hh:mm:ss\" datatype=\"time\" >\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1185,
            "description": "检查时间格式, 格式为 hh:mm",
            "itemtype": "method",
            "name": "minute",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_time\" errmsg=\"正确的时间, 格式为 hh:mm\" datatype=\"minute\" >\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1202,
            "description": "检查银行卡号码\n<br />格式为 d{19} | d{16} | 1111 1111 1111 1111 111 | 1111 1111 1111 1111111",
            "itemtype": "method",
            "name": "bankcard",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_idnumber\" \n                       datatype=\"idnumber\" errmsg=\"请填写正确的身份证号码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1222,
            "description": "检查中文姓名\n<br>格式: 汉字和大小写字母\n<br>规则: 长度 2-32个字节, 非 ASCII 算2个字节",
            "itemtype": "method",
            "name": "cnname",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_cnname\" \n                       datatype=\"cnname\" reqmsg=\"姓名\" errmsg=\"请填写正确的姓名\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1243,
            "description": "检查注册用户名\n<br>格式: a-zA-Z0-9_-\n<br>规则: 首字母必须为 [a-zA-Z0-9], 长度 2 - 30",
            "itemtype": "method",
            "name": "username",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_username\" \n                       datatype=\"username\" reqmsg=\"用户名\" errmsg=\"请填写正确的用户名\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1263,
            "description": "检查身份证号码<br />\n目前只使用最简单的位数判断~ 有待完善",
            "itemtype": "method",
            "name": "idnumber",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n           <div class=\"f-l\">\n               <input type=\"TEXT\" name=\"company_idnumber\" \n                   datatype=\"idnumber\" errmsg=\"请填写正确的身份证号码\">\n           </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1282,
            "description": "检查手机号码<br />",
            "itemtype": "method",
            "name": "mobilecode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n           <div class=\"f-l\">\n               <input type=\"TEXT\" name=\"company_mobile\" \n                   datatype=\"mobilecode\" subdatatype=\"alternative\" datatarget=\"input[name=company_phonecode]\" alternativemsg=\" \"\n                   errmsg=\"请填写正确的手机号码\">\n           </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1302,
            "description": "检查手机号码\n<br />这个方法是 mobilecode 的别名",
            "itemtype": "method",
            "name": "mobile",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1315,
            "description": "检查手机号码加强方法\n<br>格式: [+国家代码] [零]11位数字",
            "itemtype": "method",
            "name": "mobilezonecode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_mobilezone\" \n                       datatype=\"mobilezonecode\" \n                       errmsg=\"请填写正确的手机号码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1336,
            "description": "检查电话号码\n<br>格式: 7/8位数字",
            "itemtype": "method",
            "name": "phonecode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div>\n                   <input type='TEXT' name='company_phonecode' style=\"width:80px;\" value='' size=\"8\" \n                       datatype=\"phonecode\" errmsg=\"请检查电话号码格式\" emEl=\"#phone-err-em\" />\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1355,
            "description": "检查电话号码\n<br>格式: [区号]7/8位电话号码",
            "itemtype": "method",
            "name": "phone",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_phone\" \n                       datatype=\"phone\" \n                       errmsg=\"请填写正确的电话号码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1376,
            "description": "检查电话号码\n<br>格式: [+国家代码][ ][电话区号][ ]7/8位电话号码[#分机号]",
            "itemtype": "method",
            "name": "phoneall",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_noError",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_mobilezone\" \n                       datatype=\"phoneall\" \n                       errmsg=\"请填写正确的电话号码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1398,
            "description": "检查电话区号",
            "itemtype": "method",
            "name": "phonezone",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div>\n                   <input type='TEXT' name='company_phonezone' style=\"width:40px;\" value='' size=\"4\" \n                       datatype=\"phonezone\" emEl=\"#phone-err-em\" errmsg=\"请填写正确的电话区号\" />\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1421,
            "description": "检查电话分机号码",
            "itemtype": "method",
            "name": "phoneext",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div>\n                   <input type='TEXT' name='company_phoneext' style=\"width:40px;\" value='' size=\"4\" \n                       datatype=\"phoneext\" emEl=\"#phone-err-em\" errmsg=\"请填写正确的分机号\" />\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1439,
            "description": "检查手机号码/电话号码\n<br />这个方法是原有方法的混合验证 mobilecode + phone",
            "itemtype": "method",
            "name": "mobilephone",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l label\">\n                   <label>(datatype mobilephone, phone + mobilecode)手机号码或电话号码:</label>\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"text\" name=\"company_mobilephone\" \n                       datatype=\"mobilephone\"\n                       errmsg=\"请填写正确的手机/电话号码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1463,
            "description": "检查手机号码/电话号码, 泛匹配\n<br />这个方法是原有方法的混合验证 mobilezonecode + phoneall",
            "itemtype": "method",
            "name": "mobilephoneall",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l label\">\n                   <label>(datatype mobilephoneall, phoneall + mobilezonecode)手机号码或电话号码:</label>\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"text\" name=\"company_mobilephoneall\" \n                       datatype=\"mobilephoneall\"\n                       errmsg=\"请填写正确的手机/电话号码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1486,
            "description": "自定义正则校验",
            "itemtype": "method",
            "name": "reg",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{string}    reg-pattern     正则规则 /规则/选项",
            "example": [
                "\n                   <div><input type=\"TEXT\" name=\"company_addr\" datatype=\"reg\" reg-pattern=\"/^[\\s\\S]{2,120}$/i\" errmsg=\"请填写正确的地址\"></div>\n                   <div><input type=\"TEXT\" name=\"company_addr\" datatype=\"reg-/^[\\s\\S]{2,120}$/i\" errmsg=\"请填写正确的地址\"></div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1512,
            "description": "检查验证码<br />\n格式: 为 0-9a-zA-Z, 长度 默认为4",
            "itemtype": "method",
            "name": "vcode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "attr": "{string}    datatype    vcode|vcode-[\\d]+",
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_vcode\" style=\"width: 40px;\"\n                       datatype=\"vcode\" reqmsg=\"验证码\" errmsg=\"请填写正确的验证码\">\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_vcode\" style=\"width: 40px;\"\n                       datatype=\"vcode-5\" errmsg=\"请填写正确的验证码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1538,
            "description": "检查文本长度",
            "itemtype": "method",
            "name": "text",
            "access": "private",
            "tagname": "",
            "static": 1,
            "see": [
                "length"
            ],
            "attr": "{string}    datatype    text",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1547,
            "description": "检查文本的字节长度",
            "itemtype": "method",
            "name": "bytetext",
            "access": "private",
            "tagname": "",
            "static": 1,
            "see": [
                "length"
            ],
            "attr": "{string}    datatype    bytetext",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1556,
            "description": "检查富文本的字节\n<br />TODO: 完成富文本长度检查",
            "itemtype": "method",
            "name": "richtext",
            "access": "private",
            "tagname": "",
            "static": 1,
            "see": [
                "length"
            ],
            "attr": "{string}    datatype    richtext",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1566,
            "description": "计算字符串的字节长度, 非 ASCII 0-255的字符视为两个字节",
            "itemtype": "method",
            "name": "bytelen",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_s",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1577,
            "description": "检查URL",
            "itemtype": "method",
            "name": "url",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_url\" datatype=\"url\" errmsg=\"请填写正确的网址\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1595,
            "description": "检查域名",
            "itemtype": "method",
            "name": "domain",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item!~YUIDOC_LINE~!",
                    "description": "<div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_domain\" datatype=\"domain\" reqmsg=\"域名\" errmsg=\"请填写正确的域名\">\n               </div>",
                    "type": "Selector"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1613,
            "description": "检查域名",
            "itemtype": "method",
            "name": "stricdomain",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item!~YUIDOC_LINE~!",
                    "description": "<div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_domain\" datatype=\"stricdomain\" reqmsg=\"域名\" errmsg=\"请填写正确的域名\">\n               </div>",
                    "type": "Selector"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1630,
            "description": "检查电子邮件",
            "itemtype": "method",
            "name": "email",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_email\" datatype=\"email\" reqmsg=\"邮箱\" errmsg=\"请填写正确的邮箱\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1647,
            "description": "检查地区代码",
            "itemtype": "method",
            "name": "countrycode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_countrycode\" datatype=\"countrycode\" errmsg=\"请填写正确的地区代码\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1664,
            "description": "检查邮政编码",
            "itemtype": "method",
            "name": "zipcode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_zipcode\" datatype=\"zipcode\" errmsg=\"请填写正确的邮编\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1681,
            "description": "纳税人识别号, 15, 18, 20位字符",
            "itemtype": "method",
            "name": "taxcode",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"\" datatype=\"taxcode\" errmsg=\"请填空正确的纳税人识别号\">\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1702,
            "description": "此类型检查 2|N 个对象填写的值必须一致\n常用于注意时密码验证/重置密码",
            "itemtype": "method",
            "name": "reconfirm",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <dd>\n               <div class=\"f-l label\">\n                   <label>(datatype text, subdatatype reconfirm)用户密码:</label>\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"PASSWORD\" name=\"company_pwd\" \n                   datatype=\"text\" subdatatype=\"reconfirm\" datatarget=\"input[name=company_repwd]\" reconfirmmsg=\"用户密码和确认密码不一致\"\n                   minlength=\"6\" maxlength=\"15\" reqmsg=\"用户密码\" errmsg=\"请填写正确的用户密码\">\n               </div>\n               </dd>\n\n               <dd>\n               <div class=\"f-l label\">\n                   <label>(datatype text, subdatatype reconfirm)确认密码:</label>\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"PASSWORD\" name=\"company_repwd\" \n                   datatype=\"text\" subdatatype=\"reconfirm\" datatarget=\"input[name=company_pwd]\" reconfirmmsg=\"确认密码和用户密码不一致\"\n                   minlength=\"6\" maxlength=\"15\" reqmsg=\"确认密码\" errmsg=\"请填写正确的确认密码\">\n               </div>\n               </dd>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1790,
            "description": "此类型检查 2|N个对象必须至少有一个是有输入内容的, \n<br> 常用于 手机/电话 二填一",
            "itemtype": "method",
            "name": "alternative",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <dd>\n               <div class=\"f-l label\">\n                   <label>(datatype phonezone, phonecode, phoneext)电话号码:</label>\n               </div>\n               <div class=\"f-l\">\n                   <input type='TEXT' name='company_phonezone' style=\"width:40px;\" value='' size=\"4\" \n                       datatype=\"phonezone\" emEl=\"#phone-err-em\" errmsg=\"请填写正确的电话区号\" />\n                   - <input type='TEXT' name='company_phonecode' style=\"width:80px;\" value='' size=\"8\" \n                       datatype=\"phonecode\" subdatatype=\"alternative\" datatarget=\"input[name=company_mobile]\" alternativemsg=\"电话号码和手机号码至少填写一个\"\n                       errmsg=\"请检查电话号码格式\" emEl=\"#phone-err-em\" />\n                   - <input type='TEXT' name='company_phoneext' style=\"width:40px;\" value='' size=\"4\" \n                       datatype=\"phoneext\" emEl=\"#phone-err-em\" errmsg=\"请填写正确的分机号\" />\n                   <em id=\"phone-err-em\"></em>\n               </div>\n               </dd>\n\n               <dd>\n               <div class=\"f-l label\">\n                   <label>(datatype mobilecode)手机号码:</label>\n               </div>\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_mobile\" \n                       datatype=\"mobilecode\" subdatatype=\"alternative\" datatarget=\"input[name=company_phonecode]\" alternativemsg=\" \"\n                       errmsg=\"请填写正确的手机号码\">\n               </div>\n               </dd>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 1887,
            "description": "N 个值必须保持唯一性, 不能有重复",
            "itemtype": "method",
            "name": "unique",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 2012,
            "description": "获取 _selector 对象\n<br />这个方法的存在是为了向后兼容qwrap, qwrap DOM参数都为ID",
            "itemtype": "method",
            "name": "getElement",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 2035,
            "description": "获取对应的错误信息, 默认的错误信息有 reqmsg, errmsg, <br />\n注意: 错误信息第一个字符如果为空格的话, 将完全使用用户定义的错误信息, 将不会动态添加 请上传/选择/填写",
            "itemtype": "method",
            "name": "errorMsg",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_msgAttr",
                    "description": "- 显示指定需要读取的错误信息属性名, 默认为 reqmsg, errmsg, 通过该属性可以指定别的属性名",
                    "type": "String"
                },
                {
                    "name": "_fullMsg",
                    "description": "- 显示指定错误信息为属性的值, 而不是自动添加的 请上传/选择/填写",
                    "type": "Bool"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 2070,
            "description": "检查内容是否为空,\n<br>如果声明了该属性, 那么 value 须不为空",
            "itemtype": "method",
            "name": "reqmsg",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "example": [
                "\n               <div class=\"f-l\">\n                   <input type=\"TEXT\" name=\"company_name\" reqmsg=\"公司名称\" /> <em>公司名称描述</em>\n               </div>"
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 2157,
            "description": "这里需要优化检查, 目前会重复检查",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 2247,
            "description": "验证文件扩展名",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 2296,
            "description": "显示正确的视觉效果",
            "itemtype": "method",
            "name": "valid",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_tm",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "_noStyle",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 2353,
            "description": "显示错误的视觉效果",
            "itemtype": "method",
            "name": "error",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_msgAttr",
                    "description": "- 显示指定需要读取的错误信息属性名, 默认为 reqmsg, errmsg, 通过该属性可以指定别的属性名",
                    "type": "String"
                },
                {
                    "name": "_fullMsg",
                    "description": "- 显示指定错误信息为属性的值, 而不是自动添加的 请上传/选择/填写",
                    "type": "Bool"
                }
            ],
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 2448,
            "description": "解析错误时触发的时件",
            "itemtype": "event",
            "name": "ValidError",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 2452,
            "description": "解析正确时触发的时件",
            "itemtype": "event",
            "name": "ValidCorrect",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 2456,
            "description": "响应表单子对象的 blur事件, 触发事件时, 检查并显示错误或正确的视觉效果",
            "access": "private",
            "tagname": "",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 2464,
            "description": "响应表单子对象的 change 事件, 触发事件时, 检查并显示错误或正确的视觉效果",
            "access": "private",
            "tagname": "",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 2471,
            "description": "响应表单子对象的 focus 事件, 触发事件时, 如果有 focusmsg 属性, 则显示对应的提示信息",
            "access": "private",
            "tagname": "",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../comps/Valid/Valid.js",
            "line": 2479,
            "description": "响应表单子对象的 blur事件, 触发事件时, 如果有 focusmsg 属性, 则显示对应的提示信息",
            "access": "private",
            "tagname": "",
            "class": "JC.Valid",
            "namespace": "JC"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 3,
            "description": "Top level namespace for Jasmine, a lightweight JavaScript BDD/spec/testing framework.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 10,
            "access": "private",
            "tagname": "",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 17,
            "description": "Use <code>jasmine.undefined</code> instead of <code>undefined</code>, since <code>undefined</code> is just\na plain old variable and may be redefined by somebody else.",
            "access": "private",
            "tagname": "",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 25,
            "description": "Show diagnostic messages in the console if set to true",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 31,
            "description": "Default interval in milliseconds for event loop yields (e.g. to allow network activity or to refresh the screen with the HTML-based runner). Small values here may result in slow test running. Zero means no updates until all tests have completed.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 37,
            "description": "Default timeout interval in milliseconds for waitsFor() blocks.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 50,
            "description": "Allows for bound functions to be compared.  Internal use only.",
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "base",
                    "description": "bound 'this' for the function",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "function to find",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 114,
            "description": "Getter for the Jasmine environment. Ensures one gets created",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 122,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 132,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 142,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 152,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "typeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 163,
            "description": "Pretty printer for expecations.  Takes any object and turns it into a human-readable string.",
            "params": [
                {
                    "name": "value",
                    "description": "an object to be outputted",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 175,
            "description": "Returns true if the object is a DOM Node.",
            "params": [
                {
                    "name": "obj",
                    "description": "object to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 185,
            "description": "Returns a matchable 'generic' object of the class type.  For use in expecations of type when values don't matter.",
            "example": [
                "\n// don't care about which function is passed in, as long as it's a function\nexpect(mySpy).toHaveBeenCalledWith(jasmine.any(Function));"
            ],
            "params": [
                {
                    "name": "clazz",
                    "description": "",
                    "type": "Class"
                }
            ],
            "return": {
                "description": "matchable object of the type clazz"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 199,
            "description": "Returns a matchable subset of a JSON object. For use in expectations when you don't care about all of the\nattributes on the object.",
            "example": [
                "\n// don't care about any other attributes than foo.\nexpect(mySpy).toHaveBeenCalledWith(jasmine.objectContaining({foo: \"bar\"});"
            ],
            "params": [
                {
                    "name": "sample",
                    "description": "sample",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "matchable object for the sample"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 214,
            "description": "Jasmine Spies are test doubles that can act as stubs, spies, fakes or when used in an expecation, mocks.\n\nSpies should be created in test setup, before expectations.  They can then be checked, using the standard Jasmine\nexpectation syntax. Spies can be checked if they were called or not and what the calling params were.\n\nA Spy has the following fields: wasCalled, callCount, mostRecentCall, and argsForCall (see docs).\n\nSpies are torn down at the end of every spec.\n\nNote: Do <b>not</b> call new jasmine.Spy() directly - a spy must be created using spyOn, jasmine.createSpy or jasmine.createSpyObj.",
            "example": [
                "\n// a stub\nvar myStub = jasmine.createSpy('myStub');  // can be used anywhere\n\n// spy example\nvar foo = {\n  not: function(bool) { return !bool; }\n}\n\n// actual foo.not will not be called, execution stops\nspyOn(foo, 'not');\n\n// foo.not spied upon, execution will continue to implementation\nspyOn(foo, 'not').andCallThrough();\n\n// fake example\nvar foo = {\n  not: function(bool) { return !bool; }\n}\n\n// foo.not(val) will return val\nspyOn(foo, 'not').andCallFake(function(value) {return value;});\n\n// mock example\nfoo.not(7 == 7);\nexpect(foo.not).toHaveBeenCalled();\nexpect(foo.not).toHaveBeenCalledWith(true);"
            ],
            "is_constructor": 1,
            "see": [
                "spyOn",
                "jasmine.createSpy",
                "jasmine.createSpyObj"
            ],
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 259,
            "description": "The name of the spy, if provided.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 263,
            "description": "Is this Object a spy?",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 267,
            "description": "The actual function this spy stubs.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 272,
            "description": "Tracking of the most recent call to the spy.",
            "example": [
                "\nvar mySpy = jasmine.createSpy('foo');\nmySpy(1, 2);\nmySpy.mostRecentCall.args = [1, 2];"
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 281,
            "description": "Holds arguments for each call to the spy, indexed by call count",
            "example": [
                "\nvar mySpy = jasmine.createSpy('foo');\nmySpy(1, 2);\nmySpy(7, 8);\nmySpy.mostRecentCall.args = [7, 8];\nmySpy.argsForCall[0] = [1, 2];\nmySpy.argsForCall[1] = [7, 8];"
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 295,
            "description": "Tells a spy to call through to the actual implemenatation.",
            "example": [
                "\nvar foo = {\n  bar: function() { // do some stuff }\n}\n\n// defining a spy on an existing property: foo.bar\nspyOn(foo, 'bar').andCallThrough();"
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 311,
            "description": "For setting the return value of a spy.",
            "example": [
                "\n// defining a spy from scratch: foo() returns 'baz'\nvar foo = jasmine.createSpy('spy on foo').andReturn('baz');\n\n// defining a spy on an existing property: foo.bar() returns 'baz'\nspyOn(foo, 'bar').andReturn('baz');"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 330,
            "description": "For throwing an exception when a spy is called.",
            "example": [
                "\n// defining a spy from scratch: foo() throws an exception w/ message 'ouch'\nvar foo = jasmine.createSpy('spy on foo').andThrow('baz');\n\n// defining a spy on an existing property: foo.bar() throws an exception w/ message 'ouch'\nspyOn(foo, 'bar').andThrow('baz');"
            ],
            "params": [
                {
                    "name": "exceptionMsg",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 349,
            "description": "Calls an alternate implementation when a spy is called.",
            "example": [
                "\nvar baz = function() {\n  // do some stuff, return something\n}\n// defining a spy from scratch: foo() calls the function baz\nvar foo = jasmine.createSpy('spy on foo').andCall(baz);\n\n// defining a spy on an existing property: foo.bar() calls an anonymnous function\nspyOn(foo, 'bar').andCall(function() { return 'baz';} );"
            ],
            "params": [
                {
                    "name": "fakeFunc",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 369,
            "description": "Resets all of a spy's the tracking variables so that it can be used again.",
            "example": [
                "\nspyOn(foo, 'bar');\n\nfoo.bar();\n\nexpect(foo.bar.callCount).toEqual(1);\n\nfoo.bar.reset();\n\nexpect(foo.bar.callCount).toEqual(0);"
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 415,
            "description": "Determines whether an object is a spy.",
            "params": [
                {
                    "name": "putativeSpy",
                    "description": "",
                    "type": "jasmine.Spy|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 425,
            "description": "Creates a more complicated spy: an Object that has every property a function that is a spy.  Used for stubbing something\nlarge in one call.",
            "params": [
                {
                    "name": "baseName",
                    "description": "name of spy class",
                    "type": "String"
                },
                {
                    "name": "methodNames",
                    "description": "array of names of methods to make spies",
                    "type": "Array"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 443,
            "description": "All parameters are pretty-printed and concatenated together, then written to the current spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 453,
            "description": "Function that installs a spy on an existing object's method name.  Used within a Spec to create a spy.",
            "example": [
                "\n// spy example\nvar foo = {\n  not: function(bool) { return !bool; }\n}\nspyOn(foo, 'not'); // actual foo.not will not be called, execution stops"
            ],
            "see": [
                "jasmine.createSpy"
            ],
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "methodName",
                    "description": ""
                }
            ],
            "return": {
                "description": "a Jasmine spy that can be chained with all spy methods"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 473,
            "description": "Creates a Jasmine spec that will be added to the current suite.\n\n// TODO: pending tests",
            "example": [
                "\nit('should be true', function() {\n  expect(true).toEqual(true);\n});"
            ],
            "params": [
                {
                    "name": "desc",
                    "description": "description of this specification",
                    "type": "String"
                },
                {
                    "name": "func",
                    "description": "defines the preconditions and expectations of the spec",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 491,
            "description": "Creates a <em>disabled</em> Jasmine spec.\n\nA convenience method that allows existing specs to be disabled temporarily during development.",
            "params": [
                {
                    "name": "desc",
                    "description": "description of this specification",
                    "type": "String"
                },
                {
                    "name": "func",
                    "description": "defines the preconditions and expectations of the spec",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 504,
            "description": "Starts a chain for a Jasmine expectation.\n\nIt is passed an Object that is the actual value and should chain to one of the many\njasmine.Matchers functions.",
            "params": [
                {
                    "name": "actual",
                    "description": "Actual value to test against and expected value",
                    "type": "Object"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 517,
            "description": "Defines part of a jasmine spec.  Used in cominbination with waits or waitsFor in asynchrnous specs.",
            "params": [
                {
                    "name": "func",
                    "description": "Function that defines part of a jasmine spec.",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 527,
            "description": "Waits a fixed time period before moving to the next block.",
            "deprecated": true,
            "deprecationMessage": "Use waitsFor() instead",
            "params": [
                {
                    "name": "timeout",
                    "description": "milliseconds to wait",
                    "type": "Number"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 538,
            "description": "Waits for the latchFunction to return true before proceeding to the next block.",
            "params": [
                {
                    "name": "latchFunction",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "optional_timeoutMessage",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optional_timeout",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 550,
            "description": "A function that is called before each spec in a suite.\n\nUsed for spec setup, including validating assumptions.",
            "params": [
                {
                    "name": "beforeEachFunction",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 562,
            "description": "A function that is called after each spec in a suite.\n\nUsed for restoring any state that is hijacked during spec execution.",
            "params": [
                {
                    "name": "afterEachFunction",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 574,
            "description": "Defines a suite of specifications.\n\nStores the description and all defined specs in the Jasmine environment as one suite of specs. Variables declared\nare accessible by calls to beforeEach, it, and afterEach. Describe blocks can be nested, allowing for specialization\nof setup in some tests.",
            "example": [
                "\n// TODO: a simple suite\n\n// TODO: a simple suite with a nested describe block"
            ],
            "params": [
                {
                    "name": "description",
                    "description": "A string, usually the class under test.",
                    "type": "String"
                },
                {
                    "name": "specDefinitions",
                    "description": "function that defines several specs.",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 594,
            "description": "Disables a suite of specifications.  Used to disable some suites in a file, or files, temporarily during development.",
            "params": [
                {
                    "name": "description",
                    "description": "A string, usually the class under test.",
                    "type": "String"
                },
                {
                    "name": "specDefinitions",
                    "description": "function that defines several specs.",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 633,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 638,
            "description": "Declare that a child class inherit it's prototype from the parent class.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "childClass",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "parentClass",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 646,
            "access": "private",
            "tagname": "",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 700,
            "description": "Environment for Jasmine",
            "is_constructor": 1,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 738,
            "return": {
                "description": "an object containing jasmine version build info, if set."
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 749,
            "return": {
                "description": "string containing jasmine version build info, if set."
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 766,
            "return": {
                "description": "a sequential integer starting at 0"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 773,
            "return": {
                "description": "a sequential integer starting at 0"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 780,
            "description": "Register a reporter to receive status updates from Jasmine.",
            "params": [
                {
                    "name": "reporter",
                    "description": "An object which will receive status updates.",
                    "type": "jasmine.Reporter"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 977,
            "is_constructor": 1,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1008,
            "description": "Blocks are functions with executable code that make up a spec.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "func",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "spec",
                    "description": "",
                    "type": "jasmine.Spec"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1030,
            "is_constructor": 1,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1132,
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "actual",
                    "description": ""
                },
                {
                    "name": "spec",
                    "description": "",
                    "type": "jasmine.Spec"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1209,
            "description": "toBe: compares the actual to the expected using ===",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1217,
            "description": "toNotBe: compares the actual to the expected using !==",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toBe() instead.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1226,
            "description": "toEqual: compares the actual to the expected using common sense equality. Handles Objects, Arrays, etc.",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1235,
            "description": "toNotEqual: compares the actual to the expected using the ! of jasmine.Matchers.toEqual",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toEqual() instead.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1244,
            "description": "Matcher that compares the actual to the expected using a regular expression.  Constructs a RegExp, so takes\na pattern or a String.",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1254,
            "description": "Matcher that compares the actual to the expected using the boolean inverse of jasmine.Matchers.toMatch",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toMatch() instead.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1263,
            "description": "Matcher that compares the actual to jasmine.undefined.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1270,
            "description": "Matcher that compares the actual to jasmine.undefined.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1277,
            "description": "Matcher that compares the actual to null.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1284,
            "description": "Matcher that boolean not-nots the actual.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1292,
            "description": "Matcher that boolean nots the actual.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1300,
            "description": "Matcher that checks to see if the actual, a Jasmine spy, was called.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1322,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1325,
            "description": "Matcher that checks to see if the actual, a Jasmine spy, was not called.",
            "deprecated": true,
            "deprecationMessage": "Use expect(xxx).not.toHaveBeenCalled() instead",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1349,
            "description": "Matcher that checks to see if the actual, a Jasmine spy, was called with a set of parameters.",
            "example": [
                "\n"
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1378,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1381,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1398,
            "description": "Matcher that checks that the expected item is an element in the actual Array.",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1407,
            "description": "Matcher that checks that the expected item is NOT an element in the actual Array.",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "Object"
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toContain() instead.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1425,
            "description": "Matcher that checks that the expected item is equal to the actual item\nup to a given level of decimal precision (default 2).",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1442,
            "description": "Matcher that checks that the expected exception was thrown by the actual.",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1619,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1715,
            "is_constructor": 1,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1750,
            "description": "Holds results for a set of Jasmine spec. Allows for the results array to hold another jasmine.NestedResults",
            "is_constructor": 1,
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1756,
            "description": "The total count of results",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1760,
            "description": "Number of passed results",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1764,
            "description": "Number of failed results",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1768,
            "description": "Was this suite/spec skipped?",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1772,
            "ignore": "",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1778,
            "description": "Roll up the result counts.",
            "params": [
                {
                    "name": "result",
                    "description": ""
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1789,
            "description": "Adds a log message.",
            "params": [
                {
                    "name": "values",
                    "description": "Array of message parts which will be concatenated later."
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1797,
            "description": "Getter for the results: message & results.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1804,
            "description": "Adds a result, tracking counts (total, passed, & failed)",
            "params": [
                {
                    "name": "result",
                    "description": "",
                    "type": "jasmine.ExpectationResult|jasmine.NestedResults"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1824,
            "return": {
                "description": "True if <b>everything</b> below passed",
                "type": "Boolean"
            },
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1830,
            "description": "Base class for pretty printing for expectation results.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 1837,
            "description": "Formats a value in a nice, human-readable string.",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2052,
            "description": "Runner",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2129,
            "description": "Internal representation of a Jasmine specification, or test.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "suite",
                    "description": "",
                    "type": "jasmine.Suite"
                },
                {
                    "name": "description",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2168,
            "description": "All parameters are pretty-printed and concatenated together, then written to the spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2191,
            "params": [
                {
                    "name": "result",
                    "description": "",
                    "type": "jasmine.ExpectationResult"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2204,
            "description": "Waits a fixed time period before moving to the next block.",
            "deprecated": true,
            "deprecationMessage": "Use waitsFor() instead",
            "params": [
                {
                    "name": "timeout",
                    "description": "milliseconds to wait",
                    "type": "Number"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2216,
            "description": "Waits for the latchFunction to return true before proceeding to the next block.",
            "params": [
                {
                    "name": "latchFunction",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "optional_timeoutMessage",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optional_timeout",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2372,
            "description": "Internal representation of a Jasmine suite.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "description",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "specDefinitions",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "parentSuite",
                    "description": "",
                    "type": "jasmine.Suite"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../plugins/rate/spec/lib/jasmine.js",
            "line": 2469,
            "description": "A block which waits for some condition to become true, with timeout.",
            "is_constructor": 1,
            "extends": "jasmine.Block",
            "params": [
                {
                    "name": "env",
                    "description": "The Jasmine environment.",
                    "type": "jasmine.Env"
                },
                {
                    "name": "timeout",
                    "description": "The maximum time in milliseconds to wait for the condition to become true.",
                    "type": "Number"
                },
                {
                    "name": "latchFunction",
                    "description": "A function which returns true when the desired condition has been met.",
                    "type": "Function"
                },
                {
                    "name": "message",
                    "description": "The message to display if the desired condition hasn't been met within the given time period.",
                    "type": "String"
                },
                {
                    "name": "spec",
                    "description": "The Jasmine spec.",
                    "type": "jasmine.Spec"
                }
            ],
            "class": "window.jQuery"
        },
        {
            "file": "../lib.js",
            "line": 30,
            "description": "如果 console 不可用, 则生成一个模拟的 console 对象",
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 36,
            "description": "声明主要命名空间, 方便迁移",
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 43,
            "description": "全局 css z-index 控制属性",
            "itemtype": "property",
            "name": "ZINDEX_COUNT",
            "type": "int",
            "default": "50001",
            "static": 1,
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 51,
            "description": "把函数的参数转为数组",
            "itemtype": "method",
            "name": "sliceArgs",
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "type": "Arguments"
                }
            ],
            "return": {
                "description": "Array"
            },
            "static": 1,
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 65,
            "description": "按格式输出字符串",
            "itemtype": "method",
            "name": "printf",
            "static": 1,
            "params": [
                {
                    "name": "_str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "example": [
                "\n     printf( 'asdfasdf{0}sdfasdf{1}', '000', 1111 );\n     //return asdfasdf000sdfasdf1111"
            ],
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 81,
            "description": "判断URL中是否有某个get参数",
            "itemtype": "method",
            "name": "hasUrlParam",
            "static": 1,
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "bool"
            },
            "example": [
                "\n     var bool = hasUrlParam( 'getkey' );"
            ],
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 105,
            "description": "添加URL参数\n<br /><b>require:</b> delUrlParam",
            "itemtype": "method",
            "name": "addUrlParams",
            "static": 1,
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_params",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "string"
            },
            "example": [
                "\n       var url = addUrlParams( location.href, {'key1': 'key1value', 'key2': 'key2value' } );"
            ],
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 133,
            "description": "取URL参数的值",
            "itemtype": "method",
            "name": "getUrlParam",
            "static": 1,
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "example": [
                "\n       var defaultTag = getUrlParam(location.href, 'tag');  "
            ],
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 160,
            "description": "取URL参数的值, 这个方法返回数组\n<br />与 getUrlParam 的区别是可以获取 checkbox 的所有值",
            "itemtype": "method",
            "name": "getUrlParams",
            "static": 1,
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array"
            },
            "example": [
                "\n       var params = getUrlParams(location.href, 'tag');  "
            ],
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 191,
            "description": "删除URL参数",
            "itemtype": "method",
            "name": "delUrlParam",
            "static": 1,
            "params": [
                {
                    "name": "_url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "example": [
                "\n       var url = delUrlParam( location.href, 'tag' );"
            ],
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 221,
            "description": "提示需要 HTTP 环境",
            "itemtype": "method",
            "name": "httpRequire",
            "static": 1,
            "params": [
                {
                    "name": "_msg",
                    "description": "要提示的文字, 默认 \"本示例需要HTTP环境'",
                    "type": "String"
                }
            ],
            "return": {
                "description": "bool     如果是HTTP环境返回true, 否则返回false"
            },
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 236,
            "description": "删除 URL 的锚点\n<br /><b>require:</b> addUrlParams",
            "itemtype": "method",
            "name": "removeUrlSharp",
            "static": 1,
            "params": [
                {
                    "name": "$url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "$nornd",
                    "description": "是否不添加随机参数",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 250,
            "description": "重载页面\n<br /><b>require:</b> removeUrlSharp\n<br /><b>require:</b> addUrlParams",
            "itemtype": "method",
            "name": "reloadPage",
            "static": 1,
            "params": [
                {
                    "name": "$url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "$nornd",
                    "description": "",
                    "type": "Bool"
                },
                {
                    "name": "$delayms",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 270,
            "description": "取小数点的N位，\n<br />JS 解析 浮点数的时候，经常出现各种不可预知情况，这个函数就是为了解决这个问题",
            "itemtype": "method",
            "name": "parseFinance",
            "static": 1,
            "params": [
                {
                    "name": "_i",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "_dot",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "number"
            },
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 288,
            "description": "js 附加字串函数",
            "itemtype": "method",
            "name": "padChar",
            "static": 1,
            "params": [
                {
                    "name": "_str",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_len",
                    "description": "",
                    "type": "Intl"
                },
                {
                    "name": "_char",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 306,
            "description": "格式化日期为 YYYY-mm-dd 格式\n<br /><b>require</b>: pad\\_char\\_f",
            "itemtype": "method",
            "name": "formatISODate",
            "static": 1,
            "params": [
                {
                    "name": "_date",
                    "description": "要格式化日期的日期对象",
                    "type": "Date"
                },
                {
                    "name": "_split",
                    "description": "定义年月日的分隔符, 默认为 '-'",
                    "type": "String|undefined"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 320,
            "description": "从 ISODate 字符串解析日期对象",
            "itemtype": "method",
            "name": "parseISODate",
            "static": 1,
            "params": [
                {
                    "name": "_datestr",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "date"
            },
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 338,
            "description": "获取不带 时分秒的 日期对象",
            "itemtype": "method",
            "name": "pureDate",
            "params": [
                {
                    "name": "_d",
                    "description": "可选参数, 如果为空 = new Date",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Date"
            },
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 350,
            "description": "克隆日期对象",
            "itemtype": "method",
            "name": "cloneDate",
            "static": 1,
            "params": [
                {
                    "name": "_date",
                    "description": "需要克隆的日期",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "需要克隆的日期对象",
                "type": "Date"
            },
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 358,
            "description": "判断两个日期是否为同一天",
            "itemtype": "method",
            "name": "isSameDay",
            "static": 1,
            "params": [
                {
                    "name": "_d1",
                    "description": "需要判断的日期1",
                    "type": "Date"
                },
                {
                    "name": "_d2",
                    "description": "需要判断的日期2",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 370,
            "description": "判断两个日期是否为同一月份",
            "itemtype": "method",
            "name": "isSameMonth",
            "static": 1,
            "params": [
                {
                    "name": "_d1",
                    "description": "需要判断的日期1",
                    "type": "Date"
                },
                {
                    "name": "_d2",
                    "description": "需要判断的日期2",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool"
            },
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 382,
            "description": "取得一个月份中最大的一天",
            "itemtype": "method",
            "name": "maxDayOfMonth",
            "static": 1,
            "params": [
                {
                    "name": "_date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "月份中最大的一天",
                "type": "Int"
            },
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 395,
            "description": "取当前脚本标签的 src路径",
            "itemtype": "method",
            "name": "scriptPath",
            "static": 1,
            "return": {
                "description": "脚本所在目录的完整路径",
                "type": "String"
            },
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 409,
            "description": "缓动函数, 动画效果为按时间缓动 \n<br />这个函数只考虑递增, 你如果需要递减的话, 在回调里用 _maxVal - _stepval",
            "itemtype": "method",
            "name": "easyEffect",
            "static": 1,
            "params": [
                {
                    "name": "_cb",
                    "description": "缓动运动时的回调",
                    "type": "Function"
                },
                {
                    "name": "_maxVal",
                    "description": "缓动的最大值, default = 200",
                    "type": "Number"
                },
                {
                    "name": "_startVal",
                    "description": "缓动的起始值, default = 0",
                    "type": "Number"
                },
                {
                    "name": "_duration",
                    "description": "缓动的总时间, 单位毫秒, default = 200",
                    "type": "Number"
                },
                {
                    "name": "_stepMs",
                    "description": "缓动的间隔, 单位毫秒, default = 2",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "interval"
            },
            "example": [
                "\n       $(document).ready(function(){\n           window.js_output = $('span.js_output');\n           window.ls = [];\n           window.EFF_INTERVAL = easyEffect( effectcallback, 100);\n       });\n\n       function effectcallback( _stepval, _done ){\n           js_output.html( _stepval );\n           ls.push( _stepval );\n\n           !_done && js_output.html( _stepval );\n           _done && js_output.html( _stepval + '<br />' + ls.join() );\n       }"
            ],
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 462,
            "description": "把输入值转换为布尔值",
            "itemtype": "method",
            "name": "parseBool",
            "params": [
                {
                    "name": "_input",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "bool"
            },
            "static": 1,
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 481,
            "description": "判断是否支持 CSS position: fixed",
            "itemtype": "property",
            "name": "$.support.isFixed",
            "type": "bool",
            "require": "jquery",
            "static": 1,
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 510,
            "description": "绑定或清除 mousewheel 事件",
            "itemtype": "method",
            "name": "mousewheelEvent",
            "params": [
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "_detach",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "static": 1,
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 532,
            "description": "获取 selector 的指定父级标签",
            "itemtype": "method",
            "name": "getJqParent",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_filter",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "require": "jquery",
            "static": 1,
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 558,
            "description": "扩展 jquery 选择器\n<br />扩展起始字符的 '/' 符号为 jquery 父节点选择器\n<br />扩展起始字符的 '|' 符号为 jquery 子节点选择器\n<br />扩展起始字符的 '<' 符号为 jquery 父节点查找识别符( getJqParent )",
            "itemtype": "method",
            "name": "parentSelector",
            "params": [
                {
                    "name": "_item",
                    "description": "",
                    "type": "Selector"
                },
                {
                    "name": "_selector",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_finder",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "require": "jquery",
            "static": 1,
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 626,
            "description": "获取脚本模板的内容",
            "itemtype": "method",
            "name": "scriptContent",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 641,
            "description": "取函数名 ( 匿名函数返回空 )",
            "itemtype": "method",
            "name": "funcName",
            "params": [
                {
                    "name": "_func",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 656,
            "description": "动态添加内容时, 初始化可识别的组件\n<dl>\n     <dt>目前会自动识别的组件,  </dt>\n     <dd>\n         Bizs.CommonModify, JC.Panel, JC.Dialog\n         <br /><b>自动识别的组件不用显式调用  jcAutoInitComps 去识别可识别的组件</b>\n     </dd>\n</d>\n<dl>\n     <dt>可识别的组件</dt>\n     <dd>\n         JC.AutoSelect, JC.Calendar, JC.AutoChecked, JC.AjaxUpload\n         <br />Bizs.DisableLogic, Bizs.FormLogic\n     </dd>\n</d>",
            "itemtype": "method",
            "name": "jcAutoInitComps",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 680,
            "description": "联动下拉框",
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 684,
            "description": "日历组件",
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 688,
            "description": "全选反选",
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 692,
            "description": "Ajax 上传",
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 698,
            "description": "disable / enable",
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 702,
            "description": "表单提交逻辑",
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 707,
            "description": "URL 占位符识别功能",
            "itemtype": "method",
            "name": "urlDetect",
            "params": [
                {
                    "name": "_url",
                    "description": "如果 起始字符为 URL, 那么 URL 将祝为本页的URL",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "static": 1,
            "example": [
                "\n     urlDetect( '?test' ); //output: ?test\n\n     urlDetect( 'URL,a=1&b=2' ); //output: your.com?a=1&b=2\n     urlDetect( 'URL,a=1,b=2' ); //output: your.com?a=1&b=2\n     urlDetect( 'URLa=1&b=2' ); //output: your.com?a=1&b=2"
            ],
            "class": ".window"
        },
        {
            "file": "../lib.js",
            "line": 766,
            "description": "JC组件库所在路径",
            "itemtype": "property",
            "name": "PATH",
            "static": 1,
            "type": "{string}",
            "class": "window.JC",
            "namespace": "window"
        },
        {
            "file": "../lib.js",
            "line": 776,
            "description": "是否显示调试信息",
            "itemtype": "property",
            "name": "debug",
            "static": 1,
            "type": "{bool}",
            "class": "window.JC",
            "namespace": "window"
        },
        {
            "file": "../lib.js",
            "line": 783,
            "description": "导入JC组件",
            "itemtype": "method",
            "name": "use",
            "static": 1,
            "params": [
                {
                    "name": "_names",
                    "description": "-            模块名\n                                          或者模块下面的某个js文件(test/test1.js, 路径前面不带\"/\"将视为test模块下的test1.js)\n                                          或者一个绝对路径的js文件, 路径前面带 \"/\"",
                    "type": "String"
                },
                {
                    "name": "_basePath",
                    "description": "-         指定要导入资源所在的主目录, 这个主要应用于 nginx 路径输出",
                    "type": "String"
                },
                {
                    "name": "_enableNginxStyle",
                    "description": "-       指定是否需要使用 nginx 路径输出脚本资源",
                    "type": "Bool"
                }
            ],
            "example": [
                "\n               JC.use( 'SomeClass' );                              //导入类 SomeClass\n               JC.use( 'SomeClass, AnotherClass' );                //导入类 SomeClass, AnotherClass\n               //\n               ///  导入类 SomeClass, SomeClass目录下的file1.js, \n               ///  AnotherClass, AnotherClass 下的file2.js\n               //\n               JC.use( 'SomeClass, comps/SomeClass/file1.js, comps/AnotherClass/file2.js' );   \n               JC.use( 'SomeClass, plugins/swfobject.js., plugins/json2.js' );   \n               JC.use( '/js/Test/Test1.js' );     //导入文件  /js/Test/Test1.js, 如果起始处为 \"/\", 将视为文件的绝对路径\n               //\n               /// 导入 URL 资源 // JC.use( 'http://test.com/file1.js', 'https://another.com/file2.js' ); \n               //\n               /// in libpath/_demo/\n               //\n               JC.use(\n                   [\n                       'Panel'                     //  ../comps/Panel/Panel.js\n                       , 'Tips'                    //  ../comps/Tips/Tips.js\n                       , 'Valid'                   //  ../comps/Valid/Valid.js\n                       , 'Bizs.KillISPCache'       //  ../bizs/KillISPCache/KillISPCache.js\n                       , 'bizs.TestBizFile'        //  ../bizs/TestBizFile.js\n                       , 'comps.TestCompFile'      //  ../comps/TestCompFile.js \n                       , 'Plugins.rate'            //  ../plugins/rate/rate.js\n                       , 'plugins.json2'           //  ../plugins/json2.js\n                       , '/js/fullpathtest.js'     //  /js/fullpathtest.js\n                   ].join()\n               );"
            ],
            "class": "window.JC",
            "namespace": "window"
        },
        {
            "file": "../lib.js",
            "line": 890,
            "description": "调用依赖的类\n<br />这个方法的存在是因为有一些类调整了结构, 但是原有的引用因为向后兼容的需要, 暂时不能去掉",
            "itemtype": "method",
            "name": "_usePatch",
            "params": [
                {
                    "name": "_items",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "_fromClass",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_patchClass",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "window.JC",
            "namespace": "window"
        },
        {
            "file": "../lib.js",
            "line": 912,
            "description": "输出调试信息, 可通过 JC.debug 指定是否显示调试信息",
            "params": [
                {
                    "name": "任意参数任意长度的字符串内容",
                    "description": "",
                    "type": "[string[,string]]"
                }
            ],
            "itemtype": "method",
            "name": "log",
            "static": 1,
            "class": "window.JC",
            "namespace": "window"
        },
        {
            "file": "../lib.js",
            "line": 919,
            "description": "定义输出路径的 v 参数, 以便控制缓存",
            "itemtype": "property",
            "name": "pathPostfix",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "window.JC",
            "namespace": "window"
        },
        {
            "file": "../lib.js",
            "line": 927,
            "description": "是否启用nginx concat 模块的路径格式",
            "itemtype": "property",
            "name": "enableNginxStyle",
            "type": "bool",
            "default": "false",
            "static": 1,
            "class": "window.JC",
            "namespace": "window"
        },
        {
            "file": "../lib.js",
            "line": 935,
            "description": "定义 nginx style 的基础路径\n<br /><b>注意:</b> 如果这个属性为空, 即使 enableNginxStyle = true, 也是直接输出默认路径",
            "itemtype": "property",
            "name": "nginxBasePath",
            "type": "string",
            "default": "empty",
            "static": 1,
            "class": "window.JC",
            "namespace": "window"
        },
        {
            "file": "../lib.js",
            "line": 944,
            "description": "资源路径映射对象\n<br />设置 JC.use 逗号(',') 分隔项的 对应URL路径",
            "itemtype": "property",
            "name": "FILE_MAP",
            "type": "object",
            "default": "null",
            "static": 1,
            "example": [
                "\n               以下例子假定 libpath = http://git.me.btbtd.org/ignore/JQueryComps_dev/\n               <script>\n                   JC.FILE_MAP = {\n                       'Calendar': 'http://jc.openjavascript.org/comps/Calendar/Calendar.js'\n                       , 'Form': 'http://jc.openjavascript.org/comps/Form/Form.js'\n                       , 'LunarCalendar': 'http://jc.openjavascript.org/comps/LunarCalendar/LunarCalendar.js'\n                       , 'Panel': 'http://jc.openjavascript.org/comps/Panel/Panel.js' \n                       , 'Tab': 'http://jc.openjavascript.org/comps/Tab/Tab.js'\n                       , 'Tips': 'http://jc.openjavascript.org/comps/Tips/Tips.js' \n                       , 'Tree': 'http://jc.openjavascript.org/comps/Tree/Tree.js'\n                       , 'Valid': 'http://jc.openjavascript.org/comps/Valid/Valid.js'\n                       , 'plugins/jquery.form.js': 'http://jc.openjavascript.org/plugins/jquery.form.js'\n                       , 'plugins/json2.js': 'http://jc.openjavascript.org/plugins/json2.js'\n                   };\n\n                   JC.use( 'Panel, Tips, Valid, plugins/jquery.form.js' );\n\n                   $(document).ready(function(){\n                       //JC.Dialog( 'JC.use example', 'test issue' );\n                   });\n               </script>\n\n               output should be:\n                   http://git.me.btbtd.org/ignore/JQueryComps_dev/lib.js\n                   http://jc.openjavascript.org/comps/Panel/Panel.js\n                   http://jc.openjavascript.org/comps/Tips/Tips.js\n                   http://jc.openjavascript.org/comps/Valid/Valid.js\n                   http://jc.openjavascript.org/plugins/jquery.form.js"
            ],
            "class": "window.JC",
            "namespace": "window"
        },
        {
            "file": "../lib.js",
            "line": 982,
            "description": "输出 nginx concat 模块的脚本路径格式",
            "itemtype": "method",
            "name": "_writeNginxScript",
            "params": [
                {
                    "name": "_paths",
                    "description": "",
                    "type": "Array"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "window.JC",
            "namespace": "window"
        },
        {
            "file": "../lib.js",
            "line": 1010,
            "description": "输出的脚本路径格式",
            "itemtype": "method",
            "name": "_writeNormalScript",
            "params": [
                {
                    "name": "_paths",
                    "description": "",
                    "type": "Array"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "window.JC",
            "namespace": "window"
        },
        {
            "file": "../lib.js",
            "line": 1027,
            "description": "保存 use 过的资源路径, 以便进行唯一性判断, 避免重复加载",
            "itemtype": "property",
            "name": "_USE_CACHE",
            "type": "object",
            "default": "{}",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "window.JC",
            "namespace": "window"
        },
        {
            "file": "../lib.js",
            "line": 1048,
            "description": "自动识别组件库所在路径",
            "class": "window.UXC",
            "namespace": "window"
        },
        {
            "file": "../lib.js",
            "line": 1108,
            "description": "内部初始化方法",
            "itemtype": "method",
            "name": "_init",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1137,
            "description": "初始化之前调用的方法",
            "itemtype": "method",
            "name": "_beforeInit",
            "access": "private",
            "tagname": "",
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1145,
            "description": "内部事件初始化方法",
            "itemtype": "method",
            "name": "_initHanlderEvent",
            "access": "private",
            "tagname": "",
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1153,
            "description": "内部初始化完毕时, 调用的方法",
            "itemtype": "method",
            "name": "_inited",
            "access": "private",
            "tagname": "",
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1161,
            "description": "获取 显示 BaseMVC 的触发源选择器, 比如 a 标签",
            "itemtype": "method",
            "name": "selector",
            "return": {
                "description": "selector"
            },
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1167,
            "description": "使用 jquery on 绑定事件",
            "itemtype": "method",
            "name": "on",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "_cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "BaseMVCInstance"
            },
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1175,
            "description": "使用 jquery trigger 绑定事件",
            "itemtype": "method",
            "name": "trigger",
            "type": "String",
            "params": [
                {
                    "name": "_evtName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "BaseMVCInstance"
            },
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1183,
            "description": "获取或设置 BaseMVC 的实例",
            "itemtype": "method",
            "name": "getInstance",
            "params": [
                {
                    "name": "_selector",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "BaseMVCInstance"
            },
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1201,
            "description": "是否自动初始化",
            "itemtype": "property",
            "name": "autoInit",
            "type": "bool",
            "default": "true",
            "static": 1,
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1209,
            "description": "复制 BaseMVC 的所有方法到 _outClass",
            "itemtype": "method",
            "name": "build",
            "params": [
                {
                    "name": "_outClass",
                    "description": "",
                    "type": "Class"
                }
            ],
            "static": 1,
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1224,
            "description": "复制 _inClass 的所有方法到 _outClass",
            "itemtype": "method",
            "name": "buildClass",
            "params": [
                {
                    "name": "_inClass",
                    "description": "",
                    "type": "Class"
                },
                {
                    "name": "_outClass",
                    "description": "",
                    "type": "Class"
                },
                {
                    "name": "_namespace",
                    "description": "default='JC', 如果是业务组件, 请显式指明为 'Bizs'",
                    "type": "String"
                }
            ],
            "static": 1,
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1264,
            "description": "为 _outClass 生成一个通用 Model 类",
            "itemtype": "method",
            "name": "buildModel",
            "params": [
                {
                    "name": "_outClass",
                    "description": "",
                    "type": "Class"
                }
            ],
            "static": 1,
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1277,
            "description": "为 _outClass 生成一个通用 View 类",
            "itemtype": "method",
            "name": "buildView",
            "params": [
                {
                    "name": "_outClass",
                    "description": "",
                    "type": "Class"
                }
            ],
            "static": 1,
            "class": "JC.BaseMVC",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1302,
            "description": "设置 selector 实例引用的 data 属性名",
            "itemtype": "property",
            "name": "_instanceName",
            "type": "string",
            "default": "BaseMVCIns",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1316,
            "description": "初始化的 jq 选择器",
            "itemtype": "method",
            "name": "selector",
            "params": [
                {
                    "name": "_setter",
                    "description": "",
                    "type": "Selector"
                }
            ],
            "return": {
                "description": "selector"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1327,
            "description": "读取 int 属性的值",
            "itemtype": "method",
            "name": "intProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "int"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1348,
            "description": "读取 float 属性的值",
            "itemtype": "method",
            "name": "floatProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "float"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1369,
            "description": "读取 string 属性的值",
            "itemtype": "method",
            "name": "stringProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1387,
            "description": "读取 html 属性值\n<br />这个跟 stringProp 的区别是不会强制转换为小写",
            "itemtype": "method",
            "name": "attrProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "string"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1410,
            "description": "读取 boolean 属性的值",
            "itemtype": "method",
            "name": "boolProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String|bool"
                },
                {
                    "name": "_defalut",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "",
                "type": "Bool|undefined"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1436,
            "description": "读取 callback 属性的值",
            "itemtype": "method",
            "name": "callbackProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function|undefined"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1459,
            "description": "获取 selector 属性的 jquery 选择器",
            "itemtype": "method",
            "name": "selectorProp",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        },
        {
            "file": "../lib.js",
            "line": 1482,
            "description": "判断 _selector 是否具体某种特征",
            "itemtype": "method",
            "name": "is",
            "params": [
                {
                    "name": "_selector",
                    "description": "如果 _key 为空将视 _selector 为 _key, _selector 为 this.selector()",
                    "type": "Selector|string"
                },
                {
                    "name": "_key",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "bool"
            },
            "class": "JC.BaseMVC.Model",
            "namespace": "JC"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: version",
            "line": " ../bizs/ActionLogic/ActionLogic.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " ../bizs/CommonModify/CommonModify.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " ../bizs/DisableLogic/DisableLogic.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " ../bizs/FormLogic/FormLogic.js:4"
        },
        {
            "message": "unknown tag: version",
            "line": " ../bizs/KillISPCache/KillISPCache.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../bizs/MultiDate/MultiDate.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/AjaxUpload/AjaxUpload.js:2"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/AjaxUpload/AjaxUpload.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/AutoChecked/AutoChecked.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/AutoSelect/AutoSelect.js:3"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/AutoSelect/AutoSelect.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Calendar/Calendar.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Calendar/Calendar.js:2"
        },
        {
            "message": "unknown tag: prototype",
            "line": " ../comps/Calendar/Calendar.js:420"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Fixed/Fixed.js:6"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Fixed/Fixed.js:6"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Form/Form.js:2"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Form/Form.js:2"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Form/Form.js:57"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Form/Form.js:57"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Form/Form.js:192"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Form/Form.js:192"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/LunarCalendar/LunarCalendar.js:6"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/LunarCalendar/LunarCalendar.js:6"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Panel/Panel.js:5"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Panel/Panel.js:5"
        },
        {
            "message": "unknown tag: prototype",
            "line": " ../comps/Panel/Panel.js:811"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/Panel.js:1132"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/Panel.js:1132"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/Panel.js:1132"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/Panel.js:1132"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Panel/Panel.js:1132"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Slider/Slider.js:3"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Slider/Slider.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Suggest/Suggest.js:3"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Suggest/Suggest.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Tab/Tab.js:3"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Tab/Tab.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Tips/Tips.js:3"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Tips/Tips.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Tree/Tree.js:3"
        },
        {
            "message": "unknown tag: date",
            "line": " ../comps/Tree/Tree.js:3"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Valid/Valid.js:4"
        },
        {
            "message": "unknown tag: version",
            "line": " ../comps/Valid/Valid.js:4"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:869"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:869"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:869"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:922"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:922"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:922"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:988"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:988"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:988"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:988"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:988"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1062"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1062"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1062"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1097"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1097"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1097"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1097"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1097"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1486"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1512"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1538"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1547"
        },
        {
            "message": "unknown tag: attr",
            "line": " ../comps/Valid/Valid.js:1556"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/rate/spec/lib/jasmine.js:50"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/rate/spec/lib/jasmine.js:122"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:122"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/rate/spec/lib/jasmine.js:132"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:132"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/rate/spec/lib/jasmine.js:142"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:142"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/rate/spec/lib/jasmine.js:152"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:152"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:163"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:175"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:185"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:199"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:415"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:453"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:738"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:749"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:766"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:773"
        },
        {
            "message": "unknown tag: ignore",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1772"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1824"
        },
        {
            "message": "unknown tag: require",
            "line": " ../lib.js:481"
        },
        {
            "message": "unknown tag: require",
            "line": " ../lib.js:532"
        },
        {
            "message": "unknown tag: require",
            "line": " ../lib.js:558"
        },
        {
            "message": "unknown tag: date",
            "line": " ../lib.js:750"
        },
        {
            "message": "unknown tag: date",
            "line": " ../lib.js:1037"
        },
        {
            "message": "unknown tag: version",
            "line": " ../lib.js:1081"
        },
        {
            "message": "unknown tag: version",
            "line": " ../lib.js:1287"
        },
        {
            "message": "Missing item type\n脚本模板 Panel",
            "line": " ../bizs/ActionLogic/ActionLogic.js:195"
        },
        {
            "message": "Missing item type\n显示 Panel",
            "line": " ../bizs/ActionLogic/ActionLogic.js:201"
        },
        {
            "message": "Missing item type\najax Panel",
            "line": " ../bizs/ActionLogic/ActionLogic.js:213"
        },
        {
            "message": "Missing item type\n跳转到 URL",
            "line": " ../bizs/ActionLogic/ActionLogic.js:243"
        },
        {
            "message": "Missing item type\najax 执行操作",
            "line": " ../bizs/ActionLogic/ActionLogic.js:252"
        },
        {
            "message": "Missing item type\n处理错误提示",
            "line": " ../bizs/ActionLogic/ActionLogic.js:286"
        },
        {
            "message": "Missing item type\n处理二次确认",
            "line": " ../bizs/ActionLogic/ActionLogic.js:318"
        },
        {
            "message": "Missing item type\n处理成功提示",
            "line": " ../bizs/ActionLogic/ActionLogic.js:338"
        },
        {
            "message": "Missing item type\nupdate current selector",
            "line": " ../bizs/CommonModify/CommonModify.js:222"
        },
        {
            "message": "Missing item type\n默认 form 提交处理事件\n这个如果是 AJAX 的话, 无法上传 文件",
            "line": " ../bizs/FormLogic/FormLogic.js:349"
        },
        {
            "message": "Missing item type\njquery ajax 提交处理事件",
            "line": " ../bizs/FormLogic/FormLogic.js:418"
        },
        {
            "message": "Missing item type\n全局 AJAX 提交完成后的处理事件",
            "line": " ../bizs/FormLogic/FormLogic.js:434"
        },
        {
            "message": "Missing item type\n这是个神奇的BUG\nchrome 如果没有 reset button, 触发 reset 会导致页面刷新",
            "line": " ../bizs/FormLogic/FormLogic.js:438"
        },
        {
            "message": "Missing item type\n表单内容验证通过后, 开始提交前的处理事件",
            "line": " ../bizs/FormLogic/FormLogic.js:479"
        },
        {
            "message": "Missing item type\njquery.form plugins 提交处理设置\n这个可以 AJAX 上传文件",
            "line": " ../bizs/FormLogic/FormLogic.js:490"
        },
        {
            "message": "Missing item type\niframe 加载完毕后触发的事件, 执行初始化操作",
            "line": " ../comps/AjaxUpload/AjaxUpload.js:196"
        },
        {
            "message": "Missing item type\n文件扩展名错误",
            "line": " ../comps/AjaxUpload/AjaxUpload.js:204"
        },
        {
            "message": "Missing item type\n上传前触发的事件",
            "line": " ../comps/AjaxUpload/AjaxUpload.js:211"
        },
        {
            "message": "Missing item type\n上传完毕触发的事件",
            "line": " ../comps/AjaxUpload/AjaxUpload.js:217"
        },
        {
            "message": "Missing item type\nframe 的按钮样式改变后触发的事件\n需要更新 frame 的宽高",
            "line": " ../comps/AjaxUpload/AjaxUpload.js:247"
        },
        {
            "message": "Missing item type\n恢复默认状态",
            "line": " ../comps/AjaxUpload/AjaxUpload.js:385"
        },
        {
            "message": "Missing item type\n判断下拉框的option里是否有给定的值",
            "line": " ../comps/AutoSelect/AutoSelect.js:763"
        },
        {
            "message": "Missing item type\n页面加载完毕时, 延时进行自动化, 延时可以避免来自其他逻辑的干扰",
            "line": " ../comps/AutoSelect/AutoSelect.js:857"
        },
        {
            "message": "Missing item type\n保存所有类型的 Calendar 日期实例 \n<br />目前有 date, week, month, season 四种类型的实例\n<br />每种类型都是单例模式",
            "line": " ../comps/Calendar/Calendar.js:420"
        },
        {
            "message": "Missing item type\n请使用 isCalendar, 这个方法是为了向后兼容",
            "line": " ../comps/Calendar/Calendar.js:491"
        },
        {
            "message": "Missing item type\n这个方法后续版本不再使用, 请使用 Calendar.position",
            "line": " ../comps/Calendar/Calendar.js:672"
        },
        {
            "message": "Missing item type\n延迟200毫秒初始化页面的所有日历控件\n之所以要延迟是可以让用户自己设置是否需要自动初始化",
            "line": " ../comps/Calendar/Calendar.js:1518"
        },
        {
            "message": "Missing item type\n元旦开始的第一个星期一开始的一周为政治经济上的第一周",
            "line": " ../comps/Calendar/Calendar.js:1806"
        },
        {
            "message": "Missing item type\n如果 atd 为空, 那么是 全选按钮触发的事件",
            "line": " ../comps/Calendar/Calendar.js:2273"
        },
        {
            "message": "Missing item type\n监听上一年按钮",
            "line": " ../comps/LunarCalendar/LunarCalendar.js:805"
        },
        {
            "message": "Missing item type\n监听上一月按钮",
            "line": " ../comps/LunarCalendar/LunarCalendar.js:814"
        },
        {
            "message": "Missing item type\n监听下一月按钮",
            "line": " ../comps/LunarCalendar/LunarCalendar.js:823"
        },
        {
            "message": "Missing item type\n监听下一年按钮",
            "line": " ../comps/LunarCalendar/LunarCalendar.js:832"
        },
        {
            "message": "Missing item type\n监听年份按钮, 是否要显示年份列表",
            "line": " ../comps/LunarCalendar/LunarCalendar.js:841"
        },
        {
            "message": "Missing item type\n监听月份按钮, 是否要显示月份列表",
            "line": " ../comps/LunarCalendar/LunarCalendar.js:863"
        },
        {
            "message": "Missing item type\n监听年份列表选择状态",
            "line": " ../comps/LunarCalendar/LunarCalendar.js:877"
        },
        {
            "message": "Missing item type\n监听月份列表选择状态",
            "line": " ../comps/LunarCalendar/LunarCalendar.js:887"
        },
        {
            "message": "Missing item type\n监听日期单元格点击事件",
            "line": " ../comps/LunarCalendar/LunarCalendar.js:897"
        },
        {
            "message": "Missing item type\n监听body点击事件, 点击时隐藏日历控件的年份和月份列表",
            "line": " ../comps/LunarCalendar/LunarCalendar.js:919"
        },
        {
            "message": "Missing item type\n初始化Panel 默认事件",
            "line": " ../comps/Panel/Panel.js:231"
        },
        {
            "message": "Missing item type\nclickClose 的别名\n<br />这个方法的存在是为了向后兼容, 请使用 clickClose",
            "line": " ../comps/Panel/Panel.js:388"
        },
        {
            "message": "Missing item type\n默认模板",
            "line": " ../comps/Panel/Panel.js:811"
        },
        {
            "message": "Missing item type\nPanel 的默认模板",
            "line": " ../comps/Panel/Panel.js:1021"
        },
        {
            "message": "Missing item type\n从 HTML 属性 自动执行 popup",
            "line": " ../comps/Panel/Panel.js:1132"
        },
        {
            "message": "Missing item type\n隐藏关闭按钮",
            "line": " ../comps/Panel/Panel.js:1174"
        },
        {
            "message": "Missing item type\n响应窗口改变大小",
            "line": " ../comps/Panel/Panel.js:1807"
        },
        {
            "message": "Missing item type\n响应窗口改变大小和滚动",
            "line": " ../comps/Panel/Panel.js:2256"
        },
        {
            "message": "Missing item type\n初始化数据模型",
            "line": " ../comps/Slider/Slider.js:131"
        },
        {
            "message": "Missing item type\n初始化视图模型( 根据不同的滚动方向, 初始化不同的视图类 )",
            "line": " ../comps/Slider/Slider.js:135"
        },
        {
            "message": "Missing item type\n页面加载后, 自动初始化符合 Slider 规则的 Slider",
            "line": " ../comps/Slider/Slider.js:964"
        },
        {
            "message": "Missing item type\nsuggest_so({ \"p\" : true,\n              \"q\" : \"shinee\",\n              \"s\" : [ \"shinee 综艺\",\n                  \"shinee美好的一天\",\n                  \"shinee hello baby\",\n                  \"shinee吧\",\n                  \"shinee泰民\",\n                  \"shinee fx\",\n                  \"shinee快乐大本营\",\n                  \"shinee钟铉车祸\",\n                  \"shinee年下男的约会\",\n                  \"shinee dream girl\"\n                ]\n            });",
            "line": " ../comps/Suggest/Suggest.js:122"
        },
        {
            "message": "Missing item type\nTab 视图类的实例",
            "line": " ../comps/Tab/Tab.js:158"
        },
        {
            "message": "Missing item type\n判断是否从 layout 下查找内容",
            "line": " ../comps/Tab/Tab.js:380"
        },
        {
            "message": "Missing item type\n自动化初始 Tab 实例\n如果 Tab.autoInit = true, 鼠标移至 Tab 后会自动初始化 Tab",
            "line": " ../comps/Tab/Tab.js:647"
        },
        {
            "message": "Missing item type\n页面加载完毕后, 是否自动初始化 Tips",
            "line": " ../comps/Tips/Tips.js:595"
        },
        {
            "message": "Missing item type\n树的视图模型类",
            "line": " ../comps/Tree/Tree.js:376"
        },
        {
            "message": "Missing item type\n捕获树文件标签的点击事件",
            "line": " ../comps/Tree/Tree.js:622"
        },
        {
            "message": "Missing item type\n捕获树文件夹图标的点击事件",
            "line": " ../comps/Tree/Tree.js:650"
        },
        {
            "message": "Missing item type\n兼容函数式使用",
            "line": " ../comps/Valid/Valid.js:224"
        },
        {
            "message": "Missing item type\n根据特殊的 datatype 实现不同的计算方法",
            "line": " ../comps/Valid/Valid.js:896"
        },
        {
            "message": "Missing item type\n这里需要优化检查, 目前会重复检查",
            "line": " ../comps/Valid/Valid.js:2157"
        },
        {
            "message": "Missing item type\n验证文件扩展名",
            "line": " ../comps/Valid/Valid.js:2247"
        },
        {
            "message": "Missing item type\n响应表单子对象的 blur事件, 触发事件时, 检查并显示错误或正确的视觉效果",
            "line": " ../comps/Valid/Valid.js:2456"
        },
        {
            "message": "Missing item type\n响应表单子对象的 change 事件, 触发事件时, 检查并显示错误或正确的视觉效果",
            "line": " ../comps/Valid/Valid.js:2464"
        },
        {
            "message": "Missing item type\n响应表单子对象的 focus 事件, 触发事件时, 如果有 focusmsg 属性, 则显示对应的提示信息",
            "line": " ../comps/Valid/Valid.js:2471"
        },
        {
            "message": "Missing item type\n响应表单子对象的 blur事件, 触发事件时, 如果有 focusmsg 属性, 则显示对应的提示信息",
            "line": " ../comps/Valid/Valid.js:2479"
        },
        {
            "message": "Missing item type\nTop level namespace for Jasmine, a lightweight JavaScript BDD/spec/testing framework.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:3"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:10"
        },
        {
            "message": "Missing item type\nUse <code>jasmine.undefined</code> instead of <code>undefined</code>, since <code>undefined</code> is just\na plain old variable and may be redefined by somebody else.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:17"
        },
        {
            "message": "Missing item type\nShow diagnostic messages in the console if set to true",
            "line": " ../plugins/rate/spec/lib/jasmine.js:25"
        },
        {
            "message": "Missing item type\nDefault interval in milliseconds for event loop yields (e.g. to allow network activity or to refresh the screen with the HTML-based runner). Small values here may result in slow test running. Zero means no updates until all tests have completed.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:31"
        },
        {
            "message": "Missing item type\nDefault timeout interval in milliseconds for waitsFor() blocks.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:37"
        },
        {
            "message": "Missing item type\nAllows for bound functions to be compared.  Internal use only.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:50"
        },
        {
            "message": "Missing item type\nGetter for the Jasmine environment. Ensures one gets created",
            "line": " ../plugins/rate/spec/lib/jasmine.js:114"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:122"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:132"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:142"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:152"
        },
        {
            "message": "Missing item type\nPretty printer for expecations.  Takes any object and turns it into a human-readable string.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:163"
        },
        {
            "message": "Missing item type\nReturns true if the object is a DOM Node.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:175"
        },
        {
            "message": "Missing item type\nReturns a matchable 'generic' object of the class type.  For use in expecations of type when values don't matter.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:185"
        },
        {
            "message": "Missing item type\nReturns a matchable subset of a JSON object. For use in expectations when you don't care about all of the\nattributes on the object.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:199"
        },
        {
            "message": "Missing item type\nJasmine Spies are test doubles that can act as stubs, spies, fakes or when used in an expecation, mocks.\n\nSpies should be created in test setup, before expectations.  They can then be checked, using the standard Jasmine\nexpectation syntax. Spies can be checked if they were called or not and what the calling params were.\n\nA Spy has the following fields: wasCalled, callCount, mostRecentCall, and argsForCall (see docs).\n\nSpies are torn down at the end of every spec.\n\nNote: Do <b>not</b> call new jasmine.Spy() directly - a spy must be created using spyOn, jasmine.createSpy or jasmine.createSpyObj.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:214"
        },
        {
            "message": "Missing item type\nThe name of the spy, if provided.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:259"
        },
        {
            "message": "Missing item type\nIs this Object a spy?",
            "line": " ../plugins/rate/spec/lib/jasmine.js:263"
        },
        {
            "message": "Missing item type\nThe actual function this spy stubs.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:267"
        },
        {
            "message": "Missing item type\nTracking of the most recent call to the spy.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:272"
        },
        {
            "message": "Missing item type\nHolds arguments for each call to the spy, indexed by call count",
            "line": " ../plugins/rate/spec/lib/jasmine.js:281"
        },
        {
            "message": "Missing item type\nTells a spy to call through to the actual implemenatation.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:295"
        },
        {
            "message": "Missing item type\nFor setting the return value of a spy.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:311"
        },
        {
            "message": "Missing item type\nFor throwing an exception when a spy is called.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:330"
        },
        {
            "message": "Missing item type\nCalls an alternate implementation when a spy is called.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:349"
        },
        {
            "message": "Missing item type\nResets all of a spy's the tracking variables so that it can be used again.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:369"
        },
        {
            "message": "Missing item type\nDetermines whether an object is a spy.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:415"
        },
        {
            "message": "Missing item type\nCreates a more complicated spy: an Object that has every property a function that is a spy.  Used for stubbing something\nlarge in one call.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:425"
        },
        {
            "message": "Missing item type\nAll parameters are pretty-printed and concatenated together, then written to the current spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:443"
        },
        {
            "message": "Missing item type\nFunction that installs a spy on an existing object's method name.  Used within a Spec to create a spy.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:453"
        },
        {
            "message": "Missing item type\nCreates a Jasmine spec that will be added to the current suite.\n\n// TODO: pending tests",
            "line": " ../plugins/rate/spec/lib/jasmine.js:473"
        },
        {
            "message": "Missing item type\nCreates a <em>disabled</em> Jasmine spec.\n\nA convenience method that allows existing specs to be disabled temporarily during development.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:491"
        },
        {
            "message": "Missing item type\nStarts a chain for a Jasmine expectation.\n\nIt is passed an Object that is the actual value and should chain to one of the many\njasmine.Matchers functions.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:504"
        },
        {
            "message": "Missing item type\nDefines part of a jasmine spec.  Used in cominbination with waits or waitsFor in asynchrnous specs.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:517"
        },
        {
            "message": "Missing item type\nWaits a fixed time period before moving to the next block.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:527"
        },
        {
            "message": "Missing item type\nWaits for the latchFunction to return true before proceeding to the next block.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:538"
        },
        {
            "message": "Missing item type\nA function that is called before each spec in a suite.\n\nUsed for spec setup, including validating assumptions.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:550"
        },
        {
            "message": "Missing item type\nA function that is called after each spec in a suite.\n\nUsed for restoring any state that is hijacked during spec execution.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:562"
        },
        {
            "message": "Missing item type\nDefines a suite of specifications.\n\nStores the description and all defined specs in the Jasmine environment as one suite of specs. Variables declared\nare accessible by calls to beforeEach, it, and afterEach. Describe blocks can be nested, allowing for specialization\nof setup in some tests.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:574"
        },
        {
            "message": "Missing item type\nDisables a suite of specifications.  Used to disable some suites in a file, or files, temporarily during development.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:594"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:633"
        },
        {
            "message": "Missing item type\nDeclare that a child class inherit it's prototype from the parent class.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:638"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:646"
        },
        {
            "message": "Missing item type\nEnvironment for Jasmine",
            "line": " ../plugins/rate/spec/lib/jasmine.js:700"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:738"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:749"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:766"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:773"
        },
        {
            "message": "Missing item type\nRegister a reporter to receive status updates from Jasmine.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:780"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:977"
        },
        {
            "message": "Missing item type\nBlocks are functions with executable code that make up a spec.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1008"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1030"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1132"
        },
        {
            "message": "Missing item type\ntoBe: compares the actual to the expected using ===",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1209"
        },
        {
            "message": "Missing item type\ntoNotBe: compares the actual to the expected using !==",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1217"
        },
        {
            "message": "Missing item type\ntoEqual: compares the actual to the expected using common sense equality. Handles Objects, Arrays, etc.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1226"
        },
        {
            "message": "Missing item type\ntoNotEqual: compares the actual to the expected using the ! of jasmine.Matchers.toEqual",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1235"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to the expected using a regular expression.  Constructs a RegExp, so takes\na pattern or a String.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1244"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to the expected using the boolean inverse of jasmine.Matchers.toMatch",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1254"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to jasmine.undefined.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1263"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to jasmine.undefined.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1270"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to null.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1277"
        },
        {
            "message": "Missing item type\nMatcher that boolean not-nots the actual.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1284"
        },
        {
            "message": "Missing item type\nMatcher that boolean nots the actual.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1292"
        },
        {
            "message": "Missing item type\nMatcher that checks to see if the actual, a Jasmine spy, was called.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1300"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1322"
        },
        {
            "message": "Missing item type\nMatcher that checks to see if the actual, a Jasmine spy, was not called.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1325"
        },
        {
            "message": "Missing item type\nMatcher that checks to see if the actual, a Jasmine spy, was called with a set of parameters.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1349"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1378"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1381"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected item is an element in the actual Array.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1398"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected item is NOT an element in the actual Array.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1407"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected item is equal to the actual item\nup to a given level of decimal precision (default 2).",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1425"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected exception was thrown by the actual.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1442"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1619"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1715"
        },
        {
            "message": "Missing item type\nHolds results for a set of Jasmine spec. Allows for the results array to hold another jasmine.NestedResults",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1750"
        },
        {
            "message": "Missing item type\nThe total count of results",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1756"
        },
        {
            "message": "Missing item type\nNumber of passed results",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1760"
        },
        {
            "message": "Missing item type\nNumber of failed results",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1764"
        },
        {
            "message": "Missing item type\nWas this suite/spec skipped?",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1768"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1772"
        },
        {
            "message": "Missing item type\nRoll up the result counts.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1778"
        },
        {
            "message": "Missing item type\nAdds a log message.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1789"
        },
        {
            "message": "Missing item type\nGetter for the results: message & results.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1797"
        },
        {
            "message": "Missing item type\nAdds a result, tracking counts (total, passed, & failed)",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1804"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1824"
        },
        {
            "message": "Missing item type\nBase class for pretty printing for expectation results.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1830"
        },
        {
            "message": "Missing item type\nFormats a value in a nice, human-readable string.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:1837"
        },
        {
            "message": "Missing item type\nRunner",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2052"
        },
        {
            "message": "Missing item type\nInternal representation of a Jasmine specification, or test.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2129"
        },
        {
            "message": "Missing item type\nAll parameters are pretty-printed and concatenated together, then written to the spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2168"
        },
        {
            "message": "Missing item type",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2191"
        },
        {
            "message": "Missing item type\nWaits a fixed time period before moving to the next block.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2204"
        },
        {
            "message": "Missing item type\nWaits for the latchFunction to return true before proceeding to the next block.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2216"
        },
        {
            "message": "Missing item type\nInternal representation of a Jasmine suite.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2372"
        },
        {
            "message": "Missing item type\nA block which waits for some condition to become true, with timeout.",
            "line": " ../plugins/rate/spec/lib/jasmine.js:2469"
        },
        {
            "message": "Missing item type\n如果 console 不可用, 则生成一个模拟的 console 对象",
            "line": " ../lib.js:30"
        },
        {
            "message": "Missing item type\n声明主要命名空间, 方便迁移",
            "line": " ../lib.js:36"
        },
        {
            "message": "Missing item type\n联动下拉框",
            "line": " ../lib.js:680"
        },
        {
            "message": "Missing item type\n日历组件",
            "line": " ../lib.js:684"
        },
        {
            "message": "Missing item type\n全选反选",
            "line": " ../lib.js:688"
        },
        {
            "message": "Missing item type\nAjax 上传",
            "line": " ../lib.js:692"
        },
        {
            "message": "Missing item type\ndisable / enable",
            "line": " ../lib.js:698"
        },
        {
            "message": "Missing item type\n表单提交逻辑",
            "line": " ../lib.js:702"
        },
        {
            "message": "Missing item type\n自动识别组件库所在路径",
            "line": " ../lib.js:1048"
        }
    ]
}